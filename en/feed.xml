<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://dev-yakuza.posstree.com/en/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.posstree.com/en/" rel="alternate" type="text/html"/><updated>2023-05-13T17:49:09+09:00</updated><id>https://dev-yakuza.posstree.com/feed.xml</id><title type="html">dev-yakuza</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="en"><title type="html">[GitHub Actions] Automate to update Changelog file</title><link href="https://dev-yakuza.posstree.com/en/code_quality/github_actions/changelog-updater-action/" rel="alternate" type="text/html" title="[GitHub Actions] Automate to update Changelog file"/><published>2023-04-29T00:00:00+09:00</published><updated>2023-05-13T17:13:48+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#changelog-updater-action&quot;&gt;changelog-updater Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#changelogmd-file&quot;&gt;CHANGELOG.md file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you usae &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GiHub&lt;/code&gt; to manage and deploy the project, you may use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; feature.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/release_note.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/release_note.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/release_note.png&quot; alt=&quot;GitHub Actions changelog-updater-action: GitHub release note&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;However, we can’t use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; in places other than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;. So we also create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file and manage it separately.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to copy automatically the contents from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file.&lt;/p&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is a series. You can see the other posts on the link below.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check title of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/pr-labels-checker/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check label of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[GitHub Actions] Automate to update Changelog file&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;changelog-updater-action&quot;&gt;changelog-updater Action&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt; is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to copy the last &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/stefanzweifel/changelog-updater-action&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;changelog-updater Action&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/update-changelog.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;released&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout code&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/changelog-updater-action@v1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;latest-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release-notes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changelog&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CHANGELOG.md&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After creating this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; is released, the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; is copied to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file. Of course, the file that is managed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt; will be modified, so it uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit_message&lt;/code&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; to create and release the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; automatically. If you want to know how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;changelogmd-file&quot;&gt;CHANGELOG.md file&lt;/h2&gt; &lt;p&gt;To update the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-update Action&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; muse exist. Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Changelog&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In order to update the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-update Action&lt;/code&gt;, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file must exist, and one or more &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;heading&lt;/code&gt; must exist.&lt;/p&gt; &lt;p&gt;This blog post uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# Changelog&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Now, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;released&lt;/code&gt;, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file will be updated like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/changelog.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/changelog.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/github_actions/changelog-updater-action/changelog.png&quot; alt=&quot;GitHub Actions changelog-updater-action: CHANGELOG.md&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to copy the contents of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file automatically. If you use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file, try to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt; for automation.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitHub Actions] Check label of Pull request</title><link href="https://dev-yakuza.posstree.com/en/code_quality/github_actions/pr-labels-checker/" rel="alternate" type="text/html" title="[GitHub Actions] Check label of Pull request"/><published>2023-04-28T00:00:00+09:00</published><updated>2023-05-11T20:09:41+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/github_actions/pr-labels-checker-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/github_actions/pr-labels-checker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pr-labels-checker&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you manage the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, you may use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt; feature. Also, There are some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; run by the label of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check the label of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is set well.&lt;/p&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is a series. You can see the other posts on the link below.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check title of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[GitHub Actions] Check label of Pull request&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Automate to update Changelog file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;pr-labels-checker&quot;&gt;PR Labels Checker&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; has the label.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/danielchabr/pr-labels-checker&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/labels-checker.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Labels Checker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;labeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unlabeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;check_labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; like this example, the error occurs when one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;breaking change&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feature&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bug&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;style&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chore&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ci&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependencies&lt;/code&gt; labels is not set on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The label list in here is for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;release-drafter&quot;&gt;Release Drafter&lt;/h2&gt; &lt;p&gt;I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;. If you want to know details about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I use the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check the label is configured well by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;By configuring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; like this, when a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created, the label is automatically set by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; checks whether the label is applied well. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; sets the label well, but it is configured to check it once more just in case.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! We’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; has the label well. If you use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; run by the label of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, or manage the project with labels, I recommend using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checkers&lt;/code&gt;.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitHub Actions] Use Release Drafter to automate Release note of GitHub</title><link href="https://dev-yakuza.posstree.com/en/code_quality/github_actions/release-drafter/" rel="alternate" type="text/html" title="[GitHub Actions] Use Release Drafter to automate Release note of GitHub"/><published>2023-04-27T00:00:00+09:00</published><updated>2023-05-09T21:51:16+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter-configuration-file&quot;&gt;Release Drafter configuration file&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#version&quot;&gt;version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#categories&quot;&gt;categories&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#autolabeler&quot;&gt;autolabeler&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#commitish&quot;&gt;commitish&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-note-contents&quot;&gt;Release note contents&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#use-git-tag-to-release-release-note&quot;&gt;Use Git tag to release Release note&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you manage open source or versions on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, you may write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/release-drafter/release_note.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/release-drafter/release_note.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/github_actions/release-drafter/release_note.png&quot; alt=&quot;GitHub Actions release-drafter: GitHub release note&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;However, you can’t create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; by making the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; every time, or by creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; while seeing the history of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt; before the release.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; automatically by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; title.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/release-drafter/release-drafter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is a series. You can see the other posts on the link below.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check title of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/pr-labels-checker/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check label of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Automate to update Changelog file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;release-drafter-configuration-file&quot;&gt;Release Drafter configuration file&lt;/h2&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; for automating &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; configuration file should be in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main(master)&lt;/code&gt; branch.&lt;/p&gt; &lt;p&gt;To make the configuration file of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/release-drafter.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🧩 Dependency Updates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deps&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bump&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Next, let’s see the details of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; configuration file.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 id=&quot;version&quot;&gt;version&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; basically works by using the label of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; sees the previous &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; version and writes a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;At this time, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; should be a higher version than the previous version. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version-resolver&lt;/code&gt; to create the higher version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minor&lt;/code&gt;, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;major&lt;/code&gt; label is set to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; recognizes it and updates the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; version. If no label is configured to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default&lt;/code&gt; value works. In this example, the default value is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt;, so if no label is set, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt; version is increased.&lt;/p&gt; &lt;p&gt;The version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; is determined by the label of the last merged &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, rather than the version being continuously updated for each &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tag&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt; to determine the final version, not this version.&lt;/p&gt; &lt;h3 id=&quot;categories&quot;&gt;categories&lt;/h3&gt; &lt;p&gt;Using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; option, you can categorize the contents to be written in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🧩 Dependency Updates&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deps&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bump&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; option like the example, you can categorize the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/release-drafter/categories.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/github_actions/release-drafter/categories.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/github_actions/release-drafter/categories.png&quot; alt=&quot;GitHub Actions release-drafter: categories&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;This category is also determined by the label of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. The contents, which have labels set under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt; option, are created under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; category. Also, you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collapse-after&lt;/code&gt; option to collapse contents if there is a lot of them.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 id=&quot;autolabeler&quot;&gt;autolabeler&lt;/h3&gt; &lt;p&gt;You can categorize the contents in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; option, but this is determined by the label of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. So, if you forget to set the label, the content is not shown on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To prevent this, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; provides &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; to set the label automatically to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; by using the title, contents, file, or branch of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;h3 id=&quot;commitish&quot;&gt;commitish&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; basically operates based on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refs/heads/master&lt;/code&gt;. So, those how use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch like me should set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commitish&lt;/code&gt; to tell &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; that the default branch is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;, not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;release-note-contents&quot;&gt;Release note contents&lt;/h3&gt; &lt;p&gt;These options determine the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;. Changes are written in the form of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-template&lt;/code&gt;, and you can add some other contents by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; option.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Also, you can add some characters to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-title-escapes&lt;/code&gt; option that you want to exclude from the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h2&gt; &lt;p&gt;Now, we’re ready to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;. Next, let’s write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release-drafter.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;edited&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After writing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; like this, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created, you can see the label set automatically by the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. And when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is merged, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; updated automatically, too.&lt;/p&gt; &lt;h2 id=&quot;use-git-tag-to-release-release-note&quot;&gt;Use Git tag to release Release note&lt;/h2&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; written by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;draft&lt;/code&gt; not released. You can also release the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To release the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# https://github.com/stefanzweifel/changelog-updater-action/discussions/30&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt; like the following to use this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git checkout main&lt;/span&gt; git tag v1.0.0 git push origin v1.0.0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PERSONAL_ACCESS_TOKEN&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_TOKEN: $&lt;/code&gt; in this example. Because I will use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changelog-updater Action&lt;/code&gt; to update automatically the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file. You can create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PERSONAL_ACCESS_TOKEN&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; settings. If you want to know how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-updater Action&lt;/code&gt;, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Automate to update Changelog file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/h2&gt; &lt;p&gt;In this blog post, we’ve used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; to add the label automatically by the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. So, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created, it’s better to check the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; for it.&lt;/p&gt; &lt;p&gt;For this, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you want to know how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt;, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check title of Pull request&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to add the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; automatically. If you manage open source or want to manage &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; well, I recommend using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the project uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt;, you can also automate adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; contents to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;. If you want to know how to update automatically the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; file, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Automate to update Changelog file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitHub Actions] Check title of Pull request</title><link href="https://dev-yakuza.posstree.com/en/code_quality/github_actions/conventional-pr-title-action/" rel="alternate" type="text/html" title="[GitHub Actions] Check title of Pull request"/><published>2023-04-24T00:00:00+09:00</published><updated>2023-05-11T15:07:02+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/github_actions/conventional-pr-title-action/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-commits&quot;&gt;Conventional Commits&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#complete&quot;&gt;Complete&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When writing a commit message in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;, there are certain rules. A typical commit message convention is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.conventionalcommits.org/en/v1.0.0/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Conventional Commits&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check whether the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is according to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt; rule.&lt;/p&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is a series. You can see the other posts on the link below.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[GitHub Actions] Check title of Pull request&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/pr-labels-checker/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Check label of Pull request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Automate to update Changelog file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conventional-commits&quot;&gt;Conventional Commits&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt; is a convention about the structure of the commit message like the following.&lt;/p&gt; &lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;: &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In here, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Body&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Footer&lt;/code&gt; are optional, but usually, when writing a commit message, the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type&lt;/code&gt; is added.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fix:&lt;/code&gt;: In case of bug fixed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feat:&lt;/code&gt;: In case of feature added.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build:&lt;/code&gt;: In case of build system or dependencies changed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chore:&lt;/code&gt;: In case of build system or dependencies changed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ci:&lt;/code&gt;: In case of CI configuration or scripts changed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs:&lt;/code&gt;: In case of only documentation changed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;style:&lt;/code&gt;: In case of code style(space, formatting, colons, etc) changed.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refactor:&lt;/code&gt;: In case of refactoring code not fixing bugs or adding features.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pref:&lt;/code&gt;: In case of modifying code for improving performance.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test:&lt;/code&gt;: In case of adding test code or modifying existing test code.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt; is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; according to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt; which is a commit message rule. In other words, it checks the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; title to whether including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Type&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt; or not.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/aslafy-z/conventional-pr-title-action&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt; for checking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; title, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/pr-title-checker.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Check PR title&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;edited&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lint&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aslafy-z/conventional-pr-title-action@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;, when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created or modified, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; title is checked whether including the type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;complete&quot;&gt;Complete&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; title has the type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;. The reason for checking the type like this is for using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you want to know how to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; that is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;, please see the following blog post.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Use Release Drafter to automate Release note of GitHub&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/github_actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Git] Modify last commit author</title><link href="https://dev-yakuza.posstree.com/en/git/amend-author/" rel="alternate" type="text/html" title="[Git] Modify last commit author"/><published>2023-04-06T00:00:00+09:00</published><updated>2023-04-08T21:55:59+09:00</updated><id>https://dev-yakuza.posstree.com/git/git-amend-author-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/git/amend-author/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#git-log&quot;&gt;git log&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#check-and-modify-the-current-user&quot;&gt;Check and modify the current user&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#git-commit---amend---author&quot;&gt;git commit –amend –author&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you use multiple Git accounts, you may commit as the wrong user. Fot this, Git provides the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amend&lt;/code&gt; option to modify the commit message and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt; option to modifyt the author of the commit message.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Git amend option: &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_git_amend&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_git_amend&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to modify the last commit message author with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amend&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt; options of Git.&lt;/p&gt; &lt;p&gt;If you want to know how to modify the last commit message with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amend&lt;/code&gt; option of Git, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/git/amend/&quot; target=&quot;_blank&quot;&gt;[Git] Modify last commit message&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;git-log&quot;&gt;git log&lt;/h2&gt; &lt;p&gt;First, let’s check the current Git status by executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; command like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the last commit message in it.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;commit f645e50a1daeaafe08d19aae71d9ad6a7f33dce1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HEAD -&amp;gt; main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Author: dev-yakuza &amp;lt;dev.yakuza@gmail.com&amp;gt; Date: Thu Apr 6 14:20:06 2023 +0900 Add test.txt file &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;check-and-modify-the-current-user&quot;&gt;Check and modify the current user&lt;/h2&gt; &lt;p&gt;You can check the current configured user’s name and email by executing the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name git config user.email &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When you execute them, you can see the user information like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git config user.name&lt;/span&gt; dev-yakuza &lt;span class=&quot;c&quot;&gt;# git config user.email&lt;/span&gt; dev.yakuza@gmail.com &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, execute the following command to modify the correct user.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name USER_NAME git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email USER_EMAIL &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This command uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--global&lt;/code&gt; option, so this user becomes default author when you commit the other repositories. If you want to change the author for only current repository, execute the command without the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--global&lt;/code&gt; option like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name USER_NAME git config user.email USER_EMAIL &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;To check the user changed well, execute the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name git config user.email &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the user chaged well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git config user.name&lt;/span&gt; USER_NAME &lt;span class=&quot;c&quot;&gt;# git config user.email&lt;/span&gt; USER_EMAIL &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This process is not required for changing the last commit author, but You can still write messages as the wrong user, so we introduced them here.&lt;/p&gt; &lt;h2 id=&quot;git-commit-amend-author&quot;&gt;git commit –amend –author&lt;/h2&gt; &lt;p&gt;Now, let’s see how to modify the author of the last commit. Execute the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit --amend --author&lt;/code&gt; command like the following to modify the last commit author.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;--amend&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USER_NAME&amp;lt;USER_EMAIL&amp;gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After executing the command, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt; editor to modify the commit message.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Add test.txt file &lt;span class=&quot;c&quot;&gt;# Please enter the commit message for your changes. Lines starting&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# with &apos;#&apos; will be ignored, and an empty message aborts the commit.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Date: Tue Oct 25 14:47:16 2022 +0900&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# On branch main&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Changes to be committed:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# modified: test.txt&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We just want to change the author not message, so press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:q&lt;/code&gt; to quit the editor. And then, execute the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; to check the author is chanaged well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If there is no problem to modify the author, you can see the author changed well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;commit 2b75330783b0385855f750962a400807eb38a993 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HEAD -&amp;gt; main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Author: USER_NAME &amp;lt;USER_EMAIL&amp;gt; Date: Thu Apr 6 14:20:06 2023 +0900 Add test.txt file &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done, we’ve seen how to modify the author of the last commit by executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amend&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt; option of Git. When you use the company account and personal account, or when you use multiple accounts, sometimes you commit as the wrong user. At this time, try to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amend&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt; option to modify the correct user.&lt;/p&gt; &lt;p&gt;If you commit with the wrong commit message, please see the following link to modify the last commit message.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/git/amend/&quot; target=&quot;_blank&quot;&gt;[Git] Modify last commit message&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="git"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/git/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/git/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Web] Optimize CSS and JS</title><link href="https://dev-yakuza.posstree.com/en/web/optimization_load_css_js/" rel="alternate" type="text/html" title="[Web] Optimize CSS and JS"/><published>2023-03-20T00:00:00+09:00</published><updated>2023-04-08T21:55:59+09:00</updated><id>https://dev-yakuza.posstree.com/web/optimization-load-css-js-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/web/optimization_load_css_js/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preconnect&quot;&gt;Preconnect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preload&quot;&gt;Preload&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to check the performance of the web page. With this feature, you can check the overall performance of the web page, and you can also see the problems like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.png&quot; alt=&quot;Optimization loading Google web font - Lighthouse Eliminate render-blocking resources issue of google web font&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In this blog post, I will introduce how to optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt; to fix &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reduce unused JavaScript&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reduce unused CSS&lt;/code&gt; issues.&lt;/p&gt; &lt;h2 id=&quot;preconnect&quot;&gt;Preconnect&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; helps the web browser to connect to external domains in advance when getting external domain resources from the current page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preconnect: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;By using this, you can improve the speed of loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt;. To improve loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt; speed, modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head /&amp;gt;&lt;/code&gt; like the following. This blog post uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bootstrap&lt;/code&gt; as an example.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;preload&quot;&gt;Preload&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; tells the web browser to preload the resources used by the current web page before rendering the page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preload: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.js&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can use it to improve the speed of laoding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt;. To improve the speed of loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt;, modify the code like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to optimize the loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt; to improve the web page performance. It’s a point that often occurs in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, so I think it’s good to remember this optimization well this time. If you want to know about executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/&quot; target=&quot;_blank&quot;&gt;[Code Quality] Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="web"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Web] Optimize images with avif and webp format</title><link href="https://dev-yakuza.posstree.com/en/web/optimization_images/" rel="alternate" type="text/html" title="[Web] Optimize images with avif and webp format"/><published>2023-03-18T00:00:00+09:00</published><updated>2023-03-24T21:49:03+09:00</updated><id>https://dev-yakuza.posstree.com/web/optimization-images-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/web/optimization_images/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#avif-and-webp-format&quot;&gt;avif and webp format&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-avif-and-webp-format-by-python&quot;&gt;Create avif and webp format by Python&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-avif-and-webp-file&quot;&gt;Create avif and webp file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#picture-and-source-tags&quot;&gt;picture and source tags&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#loading-lazy&quot;&gt;loading lazy&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; browser provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to check the web page performance. When you use this feature, you can check the overall performance of the web page, and you can also see the problems like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_images/serve_images_in_next_gen_formats.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_images/serve_images_in_next_gen_formats.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/web/2023/optimization_images/serve_images_in_next_gen_formats.png&quot; alt=&quot;Optimization images - Lighthouse serve images in next-gen formats issue of images&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In this blog post, I will intorduce how to optimize the image formats to fix the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Serve images in next-gen formats&lt;/code&gt; isssue and use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lazy loading&lt;/code&gt; of the images to fix &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Defer offscreen images&lt;/code&gt; issue.&lt;/p&gt; &lt;h2 id=&quot;avif-and-webp-format&quot;&gt;avif and webp format&lt;/h2&gt; &lt;p&gt;To solve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Serve images in next-gen formats&lt;/code&gt; problem, we need to provide the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; format and or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format of images. Modern browsers, excluding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IE&lt;/code&gt;, support the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;avif: &lt;a href=&quot;https://caniuse.com/?search=avif&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://caniuse.com/?search=avif&lt;/a&gt;&lt;/li&gt; &lt;li&gt;webp: &lt;a href=&quot;https://caniuse.com/?search=webp&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://caniuse.com/?search=webp&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;create-avif-and-webp-format-by-python&quot;&gt;Create avif and webp format by Python&lt;/h2&gt; &lt;p&gt;In this blot post, I will show you how to create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats of images from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jpg&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; files by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats of images by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt;, you need to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pillow&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pillow-avif-plugin&lt;/code&gt; libraries. Execute the following command to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pillow&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pillow-avif-plugin&lt;/code&gt; libraries.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;Pillow pillow-avif-plugin &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pillow&lt;/code&gt; is a library to manage images in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pillow-avif-plugin&lt;/code&gt; is a library to create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; image format with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pillow&lt;/code&gt; library.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pillow: &lt;a href=&quot;https://pypi.org/project/Pillow/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://pypi.org/project/Pillow/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;pillow-avif-plugin: &lt;a href=&quot;https://pypi.org/project/pillow-avif-plugin/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://pypi.org/project/pillow-avif-plugin/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After installing, create a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optimization_images.py&lt;/code&gt; and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glob&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PIL&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pillow_avif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;./assets&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/**/*.jpg&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/**/*.png&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;.webp&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;.avif&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;webp&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;AVIF&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Let’s see the code one by one.&lt;/p&gt; &lt;p&gt;In my case, I store the image files to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; folder. If you store the images to another folder, you should modify the following code.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;./assets&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Next, find all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jpg&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; files in the folder.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/**/*.jpg&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target_folder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/**/*.png&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, change the file format by looping. To change the file name to match the file format, I prepare the file name by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;.webp&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;.avif&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Next, check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format file exists and if not, change the existing file to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format and save it.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webp_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;webp&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Also, check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; format file exists and if not, change the existing file to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; format and save it.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avif_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;AVIF&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Done! we’ve created the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; script to change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jpg&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; format image files to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;create-avif-and-webp-file&quot;&gt;Create avif and webp file&lt;/h2&gt; &lt;p&gt;Next, let’s create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format files by executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optimization_images.py&lt;/code&gt; file. To create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format files, execute the following command to run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; script.&lt;/p&gt; &lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimization_images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the image file list like the following and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format files created.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... ./assets/images/category/flutter/2023/RefreshIndicator/refreshindicator_new_data_with_no_data.png ./assets/images/category/flutter/2023/RefreshIndicator/refreshindicator_pull_to_refresh.png ./assets/images/category/flutter/2023/RefreshIndicator/refreshindicator_no_data.png ./assets/images/category/flutter/2023/RefreshIndicator/listview.png ./assets/images/category/flutter/2023/RefreshIndicator/refreshindicator_refresh_no_data.png ./assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.png &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;picture-and-source-tags&quot;&gt;picture and source tags&lt;/h2&gt; &lt;p&gt;Let’s see how to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; format files in web pages. To use the various format files in web pages, you need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;picture /&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;source /&amp;gt;&lt;/code&gt; tags. Modify the image loading part to load &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;picture /&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;source /&amp;gt;&lt;/code&gt; tags like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;picture&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.avif&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/avif&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.webp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/webp&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example file&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying like this, the image in the format supported by the browser will be downloaded and displayed.&lt;/p&gt; &lt;h2 id=&quot;loading-lazy&quot;&gt;loading lazy&lt;/h2&gt; &lt;p&gt;When you check the web pages has many images by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Defer offscreen images&lt;/code&gt; issues. To solve this issue, you can add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loading=&quot;lazy&quot;&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; tag like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;picture&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.avif&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/avif&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.webp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/webp&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example file&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loading=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lazy&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you want to know more details about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loading lazy&lt;/code&gt;, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lazy loading: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading#images_and_iframes&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading#images_and_iframes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avif&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webp&lt;/code&gt; formats and use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;picture /&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;source /&amp;gt;&lt;/code&gt; tags to optimize loading images for improving web page performance.&lt;/p&gt; &lt;p&gt;It’s a point that often occurs in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, so I think it’s good to remember this optimization well this time. If you want to know about executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/&quot; target=&quot;_blank&quot;&gt;[Code Quality] Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="web"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Web] Optimize loading Google Web Font</title><link href="https://dev-yakuza.posstree.com/en/web/optimization_load_google_font/" rel="alternate" type="text/html" title="[Web] Optimize loading Google Web Font"/><published>2023-03-12T00:00:00+09:00</published><updated>2023-03-19T09:12:05+09:00</updated><id>https://dev-yakuza.posstree.com/web/optimization-load-font-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/web/optimization_load_google_font/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preconnect&quot;&gt;Preconnect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preload&quot;&gt;Preload&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to check the performance of the web page. With this feature, you can check the overall performance of the web page, and you can also see the problems like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.png&quot; alt=&quot;Optimization loading Google web font - Lighthouse Eliminate render-blocking resources issue of google web font&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;Int this blog post, I will introduce how to optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; to fix the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eliminate render-blocking resources&lt;/code&gt; issue.&lt;/p&gt; &lt;h2 id=&quot;preconnect&quot;&gt;Preconnect&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; helps the web browser to connect to external domains in advance when getting external domain resources from the current page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preconnect: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We can optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; by using it. To improve loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;, add the code like the following before loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head /&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.gstatic.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;preload&quot;&gt;Preload&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; tells the web browser to preload the resources used by the current web page before rendering the page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preload: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.js&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We can optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; by using it and the font is imported before rendering the web page, so you can use the font prepared in advance when rendering the page. To improve the speed of loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;, use the following code to load &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; to improve the performance of the web page. It’s a point that often occurs in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, so I think it’s good to remember this optimization well this time. If you want to know about executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/&quot; target=&quot;_blank&quot;&gt;[Code Quality] Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="web"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Code Quality] Lighthouse CI</title><link href="https://dev-yakuza.posstree.com/en/code_quality/lighthouse_ci/" rel="alternate" type="text/html" title="[Code Quality] Lighthouse CI"/><published>2023-03-11T00:00:00+09:00</published><updated>2023-03-15T21:30:55+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/lighthouse-ci-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-ci&quot;&gt;Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#install-lighthouse-ci&quot;&gt;Install Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#configure-lighthouse-ci&quot;&gt;Configure Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#configure-target&quot;&gt;Configure target&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#static-files&quot;&gt;Static files&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#specific-url&quot;&gt;Specific URL&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#subfolder-issue&quot;&gt;Subfolder issue&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#execute-lighthouse&quot;&gt;Execute Lighthouse&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#execute-on-ci-environment&quot;&gt;Execute on CI environment&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitlab-ci&quot;&gt;GitLab CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#basic-authentication&quot;&gt;Basic authentication&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, and we can use it to measure the performance of the web app or web page.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.png&quot; alt=&quot;Lighthouse CI - Google Chrome Lighthouse&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; is a tool to analyze the performance of the web app or web page, and show the best practices.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;h2 id=&quot;lighthouse-ci&quot;&gt;Lighthouse CI&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; is a tool for us to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; and check the result of it on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue CI: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, The environment of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16&lt;/code&gt; or higher of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt; is required.&lt;/p&gt; &lt;h2 id=&quot;install-lighthouse-ci&quot;&gt;Install Lighthouse CI&lt;/h2&gt; &lt;p&gt;Execute the following command on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt; environment to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, you can install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; on the global environment by executting the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;configure-lighthouse-ci&quot;&gt;Configure Lighthouse CI&lt;/h2&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;, we need to configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. Make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file on the root directory of the project, and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configure it like this, you can use the recommended configuration provided &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;configure-target&quot;&gt;Configure target&lt;/h2&gt; &lt;p&gt;Now, we need to configure the scan target of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. You can set the static files or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt; to the target.&lt;/p&gt; &lt;h3 id=&quot;static-files&quot;&gt;Static files&lt;/h3&gt; &lt;p&gt;Static files are a way to inspect the build results of a web site or web page under development. Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file that is the configuration file of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, and modify it like the following to scan the static files.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; to manage the blog. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; can build blog posts written in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Markdown&lt;/code&gt; into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt; files using the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt;. The files built in this way are created in a folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;By setting the folder of static files created in this way to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt; option of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collect&lt;/code&gt;, you can set what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt; will scan.&lt;/p&gt; &lt;h3 id=&quot;specific-url&quot;&gt;Specific URL&lt;/h3&gt; &lt;p&gt;If you can’t set the static files, you can set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt; of the target pages to make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspect them. To scan the specific URL, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file that is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configuration file, and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After setting it like this, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; will inspect the target &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;.&lt;/p&gt; &lt;h3 id=&quot;subfolder-issue&quot;&gt;Subfolder issue&lt;/h3&gt; &lt;p&gt;I configured the target folder to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt;, there is an issue with the files under subfolders not being scanned. To solve this issue, I decided to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; to read the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; file, I use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; library.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;xml-js: &lt;a href=&quot;https://github.com/nashwaan/xml-js&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/nashwaan/xml-js&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, executing the following command to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; library.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; xml-js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xml-js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/sitemap.xml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml2json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;spaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can use it by modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITEMAP_PATH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt; according to your project. After modifying the file and executing it, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configuration reads the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; and removes unnecessary part(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt;), and configures it to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; option to inspect them by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;After modifying the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, you can see all pages on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; are scanned well.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;execute-lighthouse&quot;&gt;Execute Lighthouse&lt;/h2&gt; &lt;p&gt;All configuration of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; is done. Now, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file and add the execution script like the following to prepare executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lighthouse&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lhci autorun&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@lhci/cli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.11.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, execute the following command to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lighthouse &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, you can execute the command of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; directly like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lhci autorun &lt;span class=&quot;c&quot;&gt;# npx lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If there is no problem, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; folder is created and the results stored in it. Also, you can see the result of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the terminal like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... ✘ viewport failure &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;minScore assertion Does not have a &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; tag with &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;width&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; or &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;initial-scale&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; https://web.dev/viewport/ expected: &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;0.9 found: 0 all values: 0, 0, 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can fix them by seeing the results on the terminal or opening the result files(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.html&lt;/code&gt;) in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; folder on the browser.&lt;/p&gt; &lt;h2 id=&quot;execute-on-ci-environment&quot;&gt;Execute on CI environment&lt;/h2&gt; &lt;p&gt;Next, you can measure the performance with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configured above on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;h3 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h3&gt; &lt;p&gt;Let’s see how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightouse&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/ci.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CI&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lighthouseci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, modify the parts of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configured &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspects the static files, you should add the build command to build the static files before executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; commands.&lt;/p&gt; &lt;h3 id=&quot;gitlab-ci&quot;&gt;GitLab CI&lt;/h3&gt; &lt;p&gt;To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;lighthouse&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node:16-slim&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get update&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get install -y libgtk-3.0 libgbm-dev libnss3 libatk-bridge2.0-0 libasound2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install --global npm@latest&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;merge_requests&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, modify the parts of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configured &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspects the static files, you should add the build command to build the static files before executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; commands.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;basic-authentication&quot;&gt;Basic authentication&lt;/h2&gt; &lt;p&gt;When using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to scan web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;, sometimes web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled are needed to scan.&lt;/p&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to inspect the web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled, you need to add some more configuration. First, execute the following command to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; puppeteer &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteerScript.js&lt;/code&gt; file on the root directory of the project and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Store the ID and password of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; to the environment variables named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_USER_NAME&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_PASSWORD&lt;/code&gt;. And then, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./puppeteerScript.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerLaunchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultViewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;--no-sandbox&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying it, you can see the page pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled are scanned well by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; when you execute it.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment. Fast web pages or web apps have a huge impact on user experience (UX). Also, The items measured by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; have a great impact on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SEO&lt;/code&gt;, so I recommend that you use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to improve the performance of your web pages or web apps.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Fix broken Korean or Japanese in server data</title><link href="https://dev-yakuza.posstree.com/en/flutter/http_response_decode/" rel="alternate" type="text/html" title="[Flutter] Fix broken Korean or Japanese in server data"/><published>2023-03-05T00:00:00+09:00</published><updated>2023-03-10T17:44:48+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/http_response_decode-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/http_response_decode/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#get-data-by-http-package&quot;&gt;Get data by http package&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#data-includes-korean-or-japanese&quot;&gt;Data includes Korean or Japanese&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#utf8decode&quot;&gt;utf8.decode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;In Flutter, when sending or getting between the server and the app, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package is normally used.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;http package: &lt;a href=&quot;https://pub.dev/packages/http&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/http&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;At this time, when the Korean or Japanese in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; data from the server is displayed on the app, the characters are broken sometimes. In this blog post, I will introduce how to fix the broken Korean or Japanese characters in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; data from the server via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package.&lt;/p&gt; &lt;h2 id=&quot;get-data-by-http-package&quot;&gt;Get data by http package&lt;/h2&gt; &lt;p&gt;In Flutter, normally we get the data from the server by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:http/http.dart&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${ENV.apiServer}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/data&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;headers:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Authorization&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Bearer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;application/json; charset=UTF-8&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonEncode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;At this time, if the data is English, the characters are shown well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: server error &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;data-includes-korean-or-japanese&quot;&gt;Data includes Korean or Japanese&lt;/h2&gt; &lt;p&gt;However, if the server data has Korean or Japanese, the characters are broken like the following. In this blog post, let’s take a look at the case that the characters are the server error(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;サーバーエラー&lt;/code&gt;) is received in Japanse.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# flutter: サーバーエラー&lt;/span&gt; flutter: ãµã¼ãã¼ã¨ã©ã¼ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;utf8decode&quot;&gt;utf8.decode&lt;/h2&gt; &lt;p&gt;If you see the characters on the data received from the server are broken, you can fix it by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;dart:convert&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bodyBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying the code like this, you can see the data is shown well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: サーバーエラー &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to fix the broken Korean or Japanese in the data, which is from the server via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package, by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt;. If you see the characters are broken that is the server data, try to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt; to fix it.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>