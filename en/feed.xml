<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://dev-yakuza.posstree.com/en/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.posstree.com/en/" rel="alternate" type="text/html"/><updated>2023-03-23T13:24:43+09:00</updated><id>https://dev-yakuza.posstree.com/feed.xml</id><title type="html">dev-yakuza</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="en"><title type="html">[Web] Optimize loading Google Web Font</title><link href="https://dev-yakuza.posstree.com/en/web/optimization_load_google_font/" rel="alternate" type="text/html" title="[Web] Optimize loading Google Web Font"/><published>2023-03-12T00:00:00+09:00</published><updated>2023-03-19T09:12:05+09:00</updated><id>https://dev-yakuza.posstree.com/web/optimization-load-font-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/web/optimization_load_google_font/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preconnect&quot;&gt;Preconnect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preload&quot;&gt;Preload&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to check the performance of the web page. With this feature, you can check the overall performance of the web page, and you can also see the problems like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.png&quot; alt=&quot;Optimization loading Google web font - Lighthouse Eliminate render-blocking resources issue of google web font&quot; /&gt; &lt;/picture&gt; &lt;p&gt;Int this blog post, I will introduce how to optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; to fix the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eliminate render-blocking resources&lt;/code&gt; issue.&lt;/p&gt; &lt;h2 id=&quot;preconnect&quot;&gt;Preconnect&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; helps the web browser to connect to external domains in advance when getting external domain resources from the current page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preconnect: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We can optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; by using it. To improve loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;, add the code like the following before loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head /&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.gstatic.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;preload&quot;&gt;Preload&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; tells the web browser to preload the resources used by the current web page before rendering the page.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preload: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.js&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We can optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; by using it and the font is imported before rendering the web page, so you can use the font prepared in advance when rendering the page. To improve the speed of loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;, use the following code to load &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to optimize loading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt; to improve the performance of the web page. It’s a point that often occurs in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, so I think it’s good to remember this optimization well this time. If you want to know about executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, please see the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/&quot; target=&quot;_blank&quot;&gt;[Code Quality] Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="web"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/web/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Code Quality] Lighthouse CI</title><link href="https://dev-yakuza.posstree.com/en/code_quality/lighthouse_ci/" rel="alternate" type="text/html" title="[Code Quality] Lighthouse CI"/><published>2023-03-11T00:00:00+09:00</published><updated>2023-03-15T21:30:55+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/lighthouse-ci-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/lighthouse_ci/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-ci&quot;&gt;Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#install-lighthouse-ci&quot;&gt;Install Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#configure-lighthouse-ci&quot;&gt;Configure Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#configure-target&quot;&gt;Configure target&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#static-files&quot;&gt;Static files&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#specific-url&quot;&gt;Specific URL&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#subfolder-issue&quot;&gt;Subfolder issue&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#execute-lighthouse&quot;&gt;Execute Lighthouse&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#execute-on-ci-environment&quot;&gt;Execute on CI environment&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitlab-ci&quot;&gt;GitLab CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#basic-authentication&quot;&gt;Basic authentication&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt; provides a feature named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, and we can use it to measure the performance of the web app or web page.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.png&quot; alt=&quot;Lighthouse CI - Google Chrome Lighthouse&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; is a tool to analyze the performance of the web app or web page, and show the best practices.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;h2 id=&quot;lighthouse-ci&quot;&gt;Lighthouse CI&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; is a tool for us to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; and check the result of it on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue CI: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment, The environment of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16&lt;/code&gt; or higher of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt; is required.&lt;/p&gt; &lt;h2 id=&quot;install-lighthouse-ci&quot;&gt;Install Lighthouse CI&lt;/h2&gt; &lt;p&gt;Execute the following command on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt; environment to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, you can install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; on the global environment by executting the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;configure-lighthouse-ci&quot;&gt;Configure Lighthouse CI&lt;/h2&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;, we need to configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. Make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file on the root directory of the project, and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configure it like this, you can use the recommended configuration provided &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;configure-target&quot;&gt;Configure target&lt;/h2&gt; &lt;p&gt;Now, we need to configure the scan target of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. You can set the static files or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt; to the target.&lt;/p&gt; &lt;h3 id=&quot;static-files&quot;&gt;Static files&lt;/h3&gt; &lt;p&gt;Static files are a way to inspect the build results of a web site or web page under development. Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file that is the configuration file of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, and modify it like the following to scan the static files.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; to manage the blog. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; can build blog posts written in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Markdown&lt;/code&gt; into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt; files using the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt;. The files built in this way are created in a folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;By setting the folder of static files created in this way to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt; option of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collect&lt;/code&gt;, you can set what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt; will scan.&lt;/p&gt; &lt;h3 id=&quot;specific-url&quot;&gt;Specific URL&lt;/h3&gt; &lt;p&gt;If you can’t set the static files, you can set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt; of the target pages to make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspect them. To scan the specific URL, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file that is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configuration file, and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After setting it like this, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; will inspect the target &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;.&lt;/p&gt; &lt;h3 id=&quot;subfolder-issue&quot;&gt;Subfolder issue&lt;/h3&gt; &lt;p&gt;I configured the target folder to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt;, there is an issue with the files under subfolders not being scanned. To solve this issue, I decided to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; to read the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; file, I use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; library.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;xml-js: &lt;a href=&quot;https://github.com/nashwaan/xml-js&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/nashwaan/xml-js&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, executing the following command to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; library.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; xml-js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xml-js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/sitemap.xml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml2json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;spaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can use it by modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITEMAP_PATH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt; according to your project. After modifying the file and executing it, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configuration reads the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; and removes unnecessary part(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt;), and configures it to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; option to inspect them by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;After modifying the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;, you can see all pages on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; are scanned well.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;execute-lighthouse&quot;&gt;Execute Lighthouse&lt;/h2&gt; &lt;p&gt;All configuration of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; is done. Now, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file and add the execution script like the following to prepare executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lighthouse&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lhci autorun&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@lhci/cli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.11.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, execute the following command to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lighthouse &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, you can execute the command of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; directly like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lhci autorun &lt;span class=&quot;c&quot;&gt;# npx lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If there is no problem, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; folder is created and the results stored in it. Also, you can see the result of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; on the terminal like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... ✘ viewport failure &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;minScore assertion Does not have a &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; tag with &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;width&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; or &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;initial-scale&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; https://web.dev/viewport/ expected: &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;0.9 found: 0 all values: 0, 0, 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You can fix them by seeing the results on the terminal or opening the result files(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.html&lt;/code&gt;) in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; folder on the browser.&lt;/p&gt; &lt;h2 id=&quot;execute-on-ci-environment&quot;&gt;Execute on CI environment&lt;/h2&gt; &lt;p&gt;Next, you can measure the performance with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; configured above on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment.&lt;/p&gt; &lt;h3 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h3&gt; &lt;p&gt;Let’s see how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;. To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightouse&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/ci.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CI&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lighthouseci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, modify the parts of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configured &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspects the static files, you should add the build command to build the static files before executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; commands.&lt;/p&gt; &lt;h3 id=&quot;gitlab-ci&quot;&gt;GitLab CI&lt;/h3&gt; &lt;p&gt;To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;lighthouse&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node:16-slim&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get update&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get install -y libgtk-3.0 libgbm-dev libnss3 libatk-bridge2.0-0 libasound2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install --global npm@latest&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;merge_requests&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you don’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, modify the parts of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you configured &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; inspects the static files, you should add the build command to build the static files before executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; commands.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;basic-authentication&quot;&gt;Basic authentication&lt;/h2&gt; &lt;p&gt;When using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to scan web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;, sometimes web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled are needed to scan.&lt;/p&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to inspect the web pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled, you need to add some more configuration. First, execute the following command to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; puppeteer &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteerScript.js&lt;/code&gt; file on the root directory of the project and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Store the ID and password of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; to the environment variables named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_USER_NAME&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_PASSWORD&lt;/code&gt;. And then, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; file and configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dev-yakuza.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./puppeteerScript.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerLaunchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultViewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;--no-sandbox&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying it, you can see the page pages with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt; enabled are scanned well by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; when you execute it.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt; to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightouse&lt;/code&gt; on the local or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; environment. Fast web pages or web apps have a huge impact on user experience (UX). Also, The items measured by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; have a great impact on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SEO&lt;/code&gt;, so I recommend that you use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; to improve the performance of your web pages or web apps.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Fix broken Korean or Japanese in server data</title><link href="https://dev-yakuza.posstree.com/en/flutter/http_response_decode/" rel="alternate" type="text/html" title="[Flutter] Fix broken Korean or Japanese in server data"/><published>2023-03-05T00:00:00+09:00</published><updated>2023-03-10T17:44:48+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/http_response_decode-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/http_response_decode/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#get-data-by-http-package&quot;&gt;Get data by http package&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#data-includes-korean-or-japanese&quot;&gt;Data includes Korean or Japanese&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#utf8decode&quot;&gt;utf8.decode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;In Flutter, when sending or getting between the server and the app, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package is normally used.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;http package: &lt;a href=&quot;https://pub.dev/packages/http&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/http&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;At this time, when the Korean or Japanese in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; data from the server is displayed on the app, the characters are broken sometimes. In this blog post, I will introduce how to fix the broken Korean or Japanese characters in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; data from the server via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package.&lt;/p&gt; &lt;h2 id=&quot;get-data-by-http-package&quot;&gt;Get data by http package&lt;/h2&gt; &lt;p&gt;In Flutter, normally we get the data from the server by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:http/http.dart&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${ENV.apiServer}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/data&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;headers:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Authorization&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Bearer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;application/json; charset=UTF-8&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonEncode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;At this time, if the data is English, the characters are shown well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: server error &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;data-includes-korean-or-japanese&quot;&gt;Data includes Korean or Japanese&lt;/h2&gt; &lt;p&gt;However, if the server data has Korean or Japanese, the characters are broken like the following. In this blog post, let’s take a look at the case that the characters are the server error(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;サーバーエラー&lt;/code&gt;) is received in Japanse.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# flutter: サーバーエラー&lt;/span&gt; flutter: ãµã¼ãã¼ã¨ã©ã¼ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;utf8decode&quot;&gt;utf8.decode&lt;/h2&gt; &lt;p&gt;If you see the characters on the data received from the server are broken, you can fix it by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;dart:convert&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bodyBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying the code like this, you can see the data is shown well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: サーバーエラー &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to fix the broken Korean or Japanese in the data, which is from the server via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; package, by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt;. If you see the characters are broken that is the server data, try to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt; to fix it.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Make scrollable regardless of child widget size</title><link href="https://dev-yakuza.posstree.com/en/flutter/AlwaysScrollableScrollPhysics/" rel="alternate" type="text/html" title="[Flutter] Make scrollable regardless of child widget size"/><published>2023-03-04T00:00:00+09:00</published><updated>2023-03-07T21:33:58+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/AlwaysScrollableScrollPhysics-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/AlwaysScrollableScrollPhysics/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#contents&quot;&gt;Contents&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#alwaysscrollablescrollphysics&quot;&gt;AlwaysScrollableScrollPhysics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When we develop the app that has the list in Flutter, we often use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; widget. At that time, to implement specific features like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull to refresh&lt;/code&gt;, we need to make it always scrollable regardless of the child widget size.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/widget/RefreshIndicator/&quot; target=&quot;_blank&quot;&gt;[Flutter] Pull to refresh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to make the list always scrollable regardless of the child widget size in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; widget.&lt;/p&gt; &lt;h2 id=&quot;alwaysscrollablescrollphysics&quot;&gt;AlwaysScrollableScrollPhysics&lt;/h2&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; widget has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; option.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;SingleChildScrollView: &lt;a href=&quot;https://api.flutter.dev/flutter/widgets/SingleChildScrollView/physics.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/widgets/SingleChildScrollView/physics.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;By using this option, we can make the list always scrollable regardless of the child widget size. When you set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AlwaysScrollableScrollPhysics&lt;/code&gt; to this option, you can make the list scollable regardless of the child widget size.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SingleChildScrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;physics:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlwaysScrollableScrollPhysics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In additional to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; widget, most scrollable widgets such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ListView&lt;/code&gt; widget have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; option.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ScrollView: &lt;a href=&quot;https://api.flutter.dev/flutter/widgets/ScrollView/physics.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/widgets/ScrollView/physics.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, if you need to change the behavior of scrolling, looking at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; option will be helpful.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to make the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; widget always scrollable regardless of the child widget size by configuring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AlwaysScrollableScrollPhysics&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; option. You can use this to implement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull to refresh&lt;/code&gt; feature. If you want to know more about implementing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull to refresh&lt;/code&gt; feature, please see the following blog post.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/widget/RefreshIndicator/&quot; target=&quot;_blank&quot;&gt;[Flutter] Pull to refresh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">Manage Python version by pyenv</title><link href="https://dev-yakuza.posstree.com/en/environment/pyenv/" rel="alternate" type="text/html" title="Manage Python version by pyenv"/><published>2023-02-26T00:00:00+09:00</published><updated>2023-03-02T17:54:07+09:00</updated><id>https://dev-yakuza.posstree.com/environment/pyenv-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/environment/pyenv/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#install-pyenv&quot;&gt;Install pyenv&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#install-pyenv-virtualenv&quot;&gt;Install pyenv-virtualenv&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-version-lst&quot;&gt;Python version lst&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#install-python-399&quot;&gt;Install Python 3.9.9&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-versions&quot;&gt;pyenv versions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-version&quot;&gt;pyenv version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#use-installed-python-version&quot;&gt;Use installed Python version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-python-virtual-environment&quot;&gt;Create Python virtual environment&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-version-file&quot;&gt;.python-version file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#delete-python-version&quot;&gt;Delete Python version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you develop many Python projects on the same machine(PC), you need to make each environment by the Python version of each project.&lt;/p&gt; &lt;p&gt;In this case, you can’t remove and install the Python version every time for developing each project. In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; to install and manage various Python versions on the single machine..&lt;/p&gt; &lt;ul&gt; &lt;li&gt;pyenv: &lt;a href=&quot;https://github.com/pyenv/pyenv&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/pyenv/pyenv&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;install-pyenv&quot;&gt;Install pyenv&lt;/h2&gt; &lt;p&gt;Execute the following command to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;macOS: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install pyenv&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Windwos: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;choco install pyenv-win&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;# pyenv setting&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv init &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;install-pyenv-virtualenv&quot;&gt;Install pyenv-virtualenv&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt; is a plugin of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; to help us make the Python virtual environment.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;pyenv-virtualenv: &lt;a href=&quot;https://github.com/pyenv/pyenv-virtualenv&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/pyenv/pyenv-virtualenv&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Execute the following command to install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;macOS: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install pyenv-virtualenv&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Windows: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install pyenv-virtualenv&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;# pyenv-virtualenv setting&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;python-version-lst&quot;&gt;Python version lst&lt;/h2&gt; &lt;p&gt;Execute the following command to check installable Python versions by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see installable Python version list like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... stackless-3.2.5 stackless-3.3.5 stackless-3.3.7 stackless-3.4-dev stackless-3.4.2 stackless-3.4.7 stackless-3.5.4 stackless-3.7.5 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;install-python-399&quot;&gt;Install Python 3.9.9&lt;/h2&gt; &lt;p&gt;In this blog post, I install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; version. Execute the following command to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; version.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;pyenv-versions&quot;&gt;pyenv versions&lt;/h2&gt; &lt;p&gt;After installing, execute the following command to check installed Python version.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; version just installed.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;pyenv-version&quot;&gt;pyenv version&lt;/h2&gt; &lt;p&gt;You can check current Python version by executing the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv version &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When you execute the command, you can see current Python version like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /Users/dev-yakuza/.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;use-installed-python-version&quot;&gt;Use installed Python version&lt;/h2&gt; &lt;p&gt;Next, let’s see how to use the Python version installed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;. Execute the following command to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; globally.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv global 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Execute the following command to use it on the project where you execute the command same directory.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This command will create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file and when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; is activated, the corresponding version of Python is set automatically.&lt;/p&gt; &lt;p&gt;Execute the following command to use the Python version in the current &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv shell 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;create-python-virtual-environment&quot;&gt;Create Python virtual environment&lt;/h2&gt; &lt;p&gt;Multiple projects may use the same Python version, but may have different versions of the library they install. In this case, the unintended version of the library may be used and cause problems.&lt;/p&gt; &lt;p&gt;For this, you can solve this problem by creating a virtual environment for each project using the same version of Python and developing on the virtual environment.&lt;/p&gt; &lt;p&gt;So, let’s create the virtual environment by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;. Execute the following command to create the Python virtual environment.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# pyenv virtualenv VERSION NAME&lt;/span&gt; pyenv virtualenv 3.9.9 venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After creating, execute the following command to check the Python virtual environment created well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the virtual environment created well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 3.9.9/envs/venv venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Next, execute the following command to activate the virtual environment created by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virutalenv&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv activate venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, execute the following command again to check the virtual environment activated well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If there is no problem, you can see the virtual environment activate well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; system 3.9.9 3.9.9/envs/venv &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; venv &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by PYENV_VERSION environment variable&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When you’re done with the virutal environment, you can deactivate the virtual environment by executing the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv deactivate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Execute the following command again to check the virtual environment deactivated well.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the virutal environment deactivated well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 3.9.9/envs/venv venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;python-version-file&quot;&gt;.python-version file&lt;/h2&gt; &lt;p&gt;Earlier, we’ve seen the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file is created automatically when we exeute the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv local&lt;/code&gt; command. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; will use it to change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; version automatically for the development environment. If your environment doesn’t have the Python version in the file, you can execute the following command to install the Python version of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;So, you can share the Python version for the corresponding project by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file. If the current project doesn’t have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file, you can create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; file and write required Python version of the project on it like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;delete-python-version&quot;&gt;Delete Python version&lt;/h2&gt; &lt;p&gt;If you have a Python version or Python virtual environment on your machine that you no longer use, you can delete the version(virtual environment) with the following command.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv uninstall 3.9.9 &lt;span class=&quot;c&quot;&gt;# pyenv uninstall venv&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; to install and manage various Python versions on the same machine. Also, we’ve seen how to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt; plugin to make the Python virtual environment. If you need many Python version of the development environment, try to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; to manage the versions.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/environment/2020/nvm/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/environment/2020/nvm/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Find child and parent widget in test code</title><link href="https://dev-yakuza.posstree.com/en/flutter/test/find_child_and_parent_widget/" rel="alternate" type="text/html" title="[Flutter] Find child and parent widget in test code"/><published>2023-02-25T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/test/find_child_and_parent_widget-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/test/find_child_and_parent_widget/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#prepare-project&quot;&gt;Prepare project&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#find-parent-widget&quot;&gt;Find parent widget&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#find-child-widget&quot;&gt;Find child widget&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When you write the test code on Flutter, sometimes you need to find the parent widget or child widget for the test.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to find the parent widget or child widget and check the values of them in the test code.&lt;/p&gt; &lt;p&gt;You can see the full source code of the blog post in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/test/find_child_and_parent_widget&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/test/find_child_and_parent_widget&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;prepare-project&quot;&gt;Prepare project&lt;/h2&gt; &lt;p&gt;To see how to find the parent widget or child widget in the test code, execute the following command to create a new Flutter project.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter create find_child_and_parent_widget &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In this blog post, I will use the basic app, that is created when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter create&lt;/code&gt; command is executed, to access the parent widget or child widget.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.png&quot; alt=&quot;Flutter find child and parent widget - basic_app&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;find-parent-widget&quot;&gt;Find parent widget&lt;/h2&gt; &lt;p&gt;To find the parent widget in the test code, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findAncestorWidgetOfExactType&lt;/code&gt;. Open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/widget_test.dart&lt;/code&gt; file and modify it like the following to see how to find the parent widget.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Find parent widget&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;You have pushed the button this many times:&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAncestorWidgetOfExactType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This test code is to find an element has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;You have pushed the button this many times:&lt;/code&gt; text, and find the closest parent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Column&lt;/code&gt; widget via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findAncestorWidgetOfExactType&lt;/code&gt; function.&lt;/p&gt; &lt;p&gt;And then, it checks the child &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widget has the text correctly. After modifying the test code, execute the following command to execute the test code.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test test&lt;/span&gt;/widget_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Then, you can see the test code works well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:04 +1: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;find-child-widget&quot;&gt;Find child widget&lt;/h2&gt; &lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;descendant&lt;/code&gt; to find the child widget in the test code. To see how to find the child widget, open the&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/widget_test.dart&lt;/code&gt; file and modify it like the below.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Find child widget&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;descendant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;of:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;matching:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Icons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This code is to find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Icon&lt;/code&gt; type child widget from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scaffold&lt;/code&gt; widget, and check the widget’s icon is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add&lt;/code&gt; icon. After modifying the code, execute the following command to execute the test code.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test test&lt;/span&gt;/widget_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the test code works well like the following.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:03 +2: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to find the parent widget or child widget in the test code on Flutter. Sometimes we need to find the parent or child widget in the test code, so it will be helpful to remember these.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Hide back button in AppBar</title><link href="https://dev-yakuza.posstree.com/en/flutter/widget/hide_back_button/" rel="alternate" type="text/html" title="[Flutter] Hide back button in AppBar"/><published>2023-02-22T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/widget/hide-back-button-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/widget/hide_back_button/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#hide-back-button&quot;&gt;Hide back button&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When the screen is switched in Flutter, the back button is automatically shown in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; on the second screen even if you didn’t configure it.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - back button&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In this blog post, I will introduce how to hide the back button generated automatically in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can see the full source code of this blog post in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/widget/hide_back_button&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/widget/hide_back_button&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;hide-back-button&quot;&gt;Hide back button&lt;/h2&gt; &lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; widget, the back button is shown even if there is nothing in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;leading&lt;/code&gt; option.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecondScreen&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecondScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Second Screen&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Go Back&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - back button&quot; /&gt; &lt;/picture&gt; &lt;p&gt;To hide the back button here, you need to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt; option in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; widget.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;automaticallyImplyLeading: &lt;a href=&quot;https://api.flutter.dev/flutter/material/AppBar/automaticallyImplyLeading.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/material/AppBar/automaticallyImplyLeading.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can hide the back button to set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt; option in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; widget like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecondScreen&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecondScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;automaticallyImplyLeading:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Second Screen&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Go Back&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the back button disappeared like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - hide back button&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to hide the back button generated automatically in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; widget. It’s very convenient that the back button is created automatically, but we don’t need it sometimes, so remember the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt; option to remove the back button.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] DatePicker</title><link href="https://dev-yakuza.posstree.com/en/flutter/widget/showDatePicker/" rel="alternate" type="text/html" title="[Flutter] DatePicker"/><published>2023-02-19T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/widget/showDatePicker-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/widget/showDatePicker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#prepare-project&quot;&gt;Prepare project&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#showdatepicker&quot;&gt;showDatePicker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#initialentrymode&quot;&gt;initialEntryMode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#datepicker-localization&quot;&gt;DatePicker Localization&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#test-code&quot;&gt;Test code&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;In apps, we usually see the UI that shows the calendar(DatePicker) for users to select the date.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.png&quot; alt=&quot;Flutter showDatePicker - DatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In this blog post, I will introduce how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; to show the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;showDatePicker: &lt;a href=&quot;https://api.flutter.dev/flutter/material/showDatePicker.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/material/showDatePicker.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can see the full source code of the blog post in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/widget/show_date_picker&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/widget/show_date_picker&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;prepare-project&quot;&gt;Prepare project&lt;/h2&gt; &lt;p&gt;To check how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt;, we’ll make a simple app to show the button like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.png&quot; alt=&quot;Flutter showDatePicker - button for showDatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;So, execute the following command to create a new Flutter project.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter create show_date_picker &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After creating the new Flutter project, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.dart&lt;/code&gt; file and modify it like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;_MyHomePageState&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyHomePage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Date Picker Example&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${date.year.toString()}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${date.month.toString().padLeft(2, &apos;0&apos;)}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${date.day.toString().padLeft(2, &apos;0&apos;)}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The app will update the date of the button by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt;, so I use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stateful&lt;/code&gt; widget. After modifying and saving the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.dart&lt;/code&gt; file, you can see the button is shown well like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.png&quot; alt=&quot;Flutter showDatePicker - button for showDatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;We didn’t add any code to the button event, so you can see nothing happens when you press the button.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;showdatepicker&quot;&gt;showDatePicker&lt;/h2&gt; &lt;p&gt;Next, let’s see how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; to show DatePicker. Modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onPressed&lt;/code&gt; function of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ElevatedButton&lt;/code&gt; widget like the following to show DatePicker when the button is pressed.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showDatePicker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;context:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initialDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;firstDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;lastDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; function will return the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Future&amp;lt;DateTime?&amp;gt;&lt;/code&gt; type data, so you need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async-await&lt;/code&gt;. Also, if the user doesn’t select the date, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;null&lt;/code&gt; will be returned, so I use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; statement here to store the user-selected date. Lastly, I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setState&lt;/code&gt; to update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;State&lt;/code&gt; with the user-selected date for updating the screen.&lt;/p&gt; &lt;p&gt;After modifying and saving the code, you can see the button is still shown well like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/button_for_date_picker.png&quot; alt=&quot;Flutter showDatePicker - button for showDatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;And, let’s press the button. When you press the button, you can see the calendar like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/DatePicker.png&quot; alt=&quot;Flutter showDatePicker - DatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;And then, when you select the date, you can see the date of the button is changed well like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/change_date.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/change_date.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/change_date.png&quot; alt=&quot;Flutter showDatePicker - change date by DatePicker&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;initialentrymode&quot;&gt;initialEntryMode&lt;/h2&gt; &lt;p&gt;On the current &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt;, you can see the edit icon on the top right, and when you press the icon, you can see the input like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/edit_date_mode.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/edit_date_mode.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/edit_date_mode.png&quot; alt=&quot;Flutter showDatePicker - edit date mode by DatePicker&quot; /&gt; &lt;/picture&gt; &lt;p&gt;If you want to disable this feature, you need to set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePickerEntryMode.calendarOnly&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initialEntryMode&lt;/code&gt; option in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; function like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showDatePicker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;context:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initialDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;firstDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;lastDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initialEntryMode:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatePickerEntryMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calendarOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, you can see the edit icon on the top right is disappeared.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/disable_edit_date_mode.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/disable_edit_date_mode.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/disable_edit_date_mode.png&quot; alt=&quot;Flutter showDatePicker - disable edit date mode by DatePicker&quot; /&gt; &lt;/picture&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;datepicker-localization&quot;&gt;DatePicker Localization&lt;/h2&gt; &lt;p&gt;If you want to change the language of the calendar, you need to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter_localizations&lt;/code&gt; package. Execute the following command to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter_localizations&lt;/code&gt; package.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add flutter_localizations &lt;span class=&quot;nt&quot;&gt;--sdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;flutter &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Or, modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; file like the following to install the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter_localizations&lt;/code&gt; package.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flutter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sdk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flutter_localizations&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sdk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And then, Add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localizationsDelegates&lt;/code&gt; option to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MaterialApp&lt;/code&gt; like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter_localizations/flutter_localizations.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyApp&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Flutter Demo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;localizationsDelegates:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalMaterialLocalizations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalWidgetsLocalizations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalCupertinoLocalizations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And, configure the language that you want to show to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;locale&lt;/code&gt; option in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePciker&lt;/code&gt; function. In here, I configure Japanese.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showDatePicker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;context:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initialDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;firstDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;lastDate:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initialEntryMode:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatePickerEntryMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;calendarOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;locale:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;ja&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;JP&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying and saving the code, you can see Japanese is shown well on the calendar instead of English.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/change_locale_of_date_picker.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/showDatePicker/change_locale_of_date_picker.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/showDatePicker/change_locale_of_date_picker.png&quot; alt=&quot;Flutter showDatePicker - change locale of date picker&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;test-code&quot;&gt;Test code&lt;/h2&gt; &lt;p&gt;You can write the test code like the following to check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; works well.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Change date by DatePicker&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;padLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;padLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$day&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findsOneWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Press cancel test&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$day&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;キャンセル&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cancel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$day&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findsOneWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;キャンセル&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findsNothing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Change date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$day&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;15&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;OK&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-15&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findsOneWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-15&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;1&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;OK&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-01&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findsOneWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In this test code, press the button to show &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt;, and then press the cancel button in Japanese(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;キャンセル&lt;/code&gt;) to close &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt; without any changes. And then, open it again and select the date on the calendar to update the date.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;showDatePicker&lt;/code&gt; to implement to show the calendar and change the date on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;. If you need the input of the date, it’s better to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DatePicker&lt;/code&gt; for users’ convenience instead of the input that users need to modify the data directly.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[Flutter] Fix font size by textScaleFactor</title><link href="https://dev-yakuza.posstree.com/en/flutter/widget/textScaleFactor/" rel="alternate" type="text/html" title="[Flutter] Fix font size by textScaleFactor"/><published>2023-02-14T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/widget/textScaleFactor-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/widget/textScaleFactor/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#change-font-size-by-device-setting&quot;&gt;Change font size by device setting&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#textscalefactor&quot;&gt;textScaleFactor&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#textscalefactor-in-mediaquery&quot;&gt;textScaleFactor in MediaQuery&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#test-code&quot;&gt;Test code&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When we provide the app service, we fall into various problems due to the user device environments. In this blog post, I will introduce how to fix a design broken like the following due to the user changing the font bigger.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.png&quot; alt=&quot;Flutter textScaleFactor - design broken&quot; /&gt; &lt;/picture&gt; &lt;p&gt;You can see the full source code of this blog post in the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/widget/textscalefactor&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/widget/textscalefactor&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;change-font-size-by-device-setting&quot;&gt;Change font size by device setting&lt;/h2&gt; &lt;p&gt;The user can change the font size by the device configuration like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/larger_text.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/larger_text.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/larger_text.png&quot; alt=&quot;Flutter textScaleFactor - Larger text setting&quot; /&gt; &lt;/picture&gt; &lt;p&gt;Sometimes, we fix the width of the button, etc like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.png&quot; alt=&quot;Flutter textScaleFactor - fixed width button&quot; /&gt; &lt;/picture&gt; &lt;p&gt;However, if the user changes the font size bigger, the text of the button is unintentionally shown on multiple lines like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/design_broken.png&quot; alt=&quot;Flutter textScaleFactor - design broken&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In this blog post, I will show you how to fix the font size even if the user changes the font size by the device setting.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;textscalefactor&quot;&gt;textScaleFactor&lt;/h2&gt; &lt;p&gt;The best simple way is using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widget like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;style:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ButtonStyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;maximumSize:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialStatePropertyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;textScaleFactor&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;textScaleFactor:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When you set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.0&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widget like the following, even if the user adjuests the font size by changing the settings of the device, it will be displayed in the default font size.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;textScaleFactor&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;textScaleFactor:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt;, when you check the app, you can see the font size is shown by the default like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.png&quot; alt=&quot;Flutter textScaleFactor - only button font size is normal&quot; /&gt; &lt;/picture&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;textscalefactor-in-mediaquery&quot;&gt;textScaleFactor in MediaQuery&lt;/h2&gt; &lt;p&gt;However, it’s too difficult and annoying to set it to all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widgets. So like the following, the font size of the button is the default size, but the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; widget, that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; is not configured on, is still bigger.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/only_button_font_size_normal.png&quot; alt=&quot;Flutter textScaleFactor - only button font size is normal&quot; /&gt; &lt;/picture&gt; &lt;p&gt;If you want to set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; to all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widget, you can configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MediaQuery&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;builder&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MaterialApp&lt;/code&gt; widget.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;MaterialApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;builder:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MediaQueryData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MediaQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MediaQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;data:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;textScaleFactor:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If you change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MediaQuery&lt;/code&gt; like this, you can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; works on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; widget which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; is not configured on like the following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/textScaleFactor/fixed_width_button.png&quot; alt=&quot;Flutter textScaleFactor - apply textScaleFactor to all text widget&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;test-code&quot;&gt;Test code&lt;/h2&gt; &lt;p&gt;If you configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MediaQuery&lt;/code&gt;, you can write the test code to check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; is configured well like the following.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;textScaleFactor is 1.0&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyHomePage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MediaQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;textScaleFactor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;textScaleFactor&lt;/code&gt; for fixing the font size by the default size even if it is changed by the device setting. Actually, this is not a good way. Because, the user deliberately changed the font size in the device settings due to feel hard to read the default font size of the text, but it still displays the small text. However, for those like me who don’t have enough resources to support various font size, it will be a great helpful as simple and quick fix it.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitLab] Dependabot</title><link href="https://dev-yakuza.posstree.com/en/gitlab/dependabot/" rel="alternate" type="text/html" title="[GitLab] Dependabot"/><published>2023-02-10T00:00:00+09:00</published><updated>2023-03-15T21:30:55+09:00</updated><id>https://dev-yakuza.posstree.com/gitlab/gitlab-dependabot-en</id><content type="html" xml:base="https://dev-yakuza.posstree.com/gitlab/dependabot/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#add-dependabot-script-to-gitlab&quot;&gt;Add dependabot-script to GitLab&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-gitlab-token&quot;&gt;Create GitLab token&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-github-token&quot;&gt;Create GitHub token&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-cicd-variables&quot;&gt;Create CI/CD variables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-gitlab-ciyml-file&quot;&gt;Create .gitlab-ci.yml file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-schedule&quot;&gt;Create Schedule&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#execute-schedule&quot;&gt;Execute Schedule&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#error-job-failed-failed-to-pull-image-dependabotdependabot-script&quot;&gt;ERROR: Job failed: failed to pull image dependabot/dependabot-script&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; is an open source for checking the new version of the libraries in the project and creating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request(Merge request)&lt;/code&gt; automatically in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dependabot: &lt;a href=&quot;https://github.com/dependabot&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dependabot&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; is made for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; at the first time, but now it becomes open source be able to use everywhere. So, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt; also supports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; for you to use it.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dependabot for GitLab: &lt;a href=&quot;https://gitlab.com/dependabot-gitlab/dependabot&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://gitlab.com/dependabot-gitlab/dependabot&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;However, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ultimate&lt;/code&gt; plan is required to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; provided by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Dependency Scanning &lt;a href=&quot;https://docs.gitlab.com/ee/user/application_security/dependency_scanning/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://docs.gitlab.com/ee/user/application_security/dependency_scanning/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this blog post, I will introduce how to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self-managed GitLab&lt;/code&gt; for not the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ultimate&lt;/code&gt; plan.&lt;/p&gt; &lt;h2 id=&quot;add-dependabot-script-to-gitlab&quot;&gt;Add dependabot-script to GitLab&lt;/h2&gt; &lt;p&gt;To execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;, you need to make an environment for it. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; provides the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository for the environment to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dependabot/dependabot-script&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;dependabot-script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, you need to import the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;depedabot-script&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt; by following the steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Access &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Project&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Import project&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Insert and add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository by URL&lt;/code&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;And then, insert the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository URL below to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository URL&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Repository URL: https://github.com/dependabot/dependabot-script&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;create-gitlab-token&quot;&gt;Create GitLab token&lt;/h2&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository will access the other repositories and check the version. And then, when the new versios exist, The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository creates &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merge request&lt;/code&gt; automatically. So, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal Access Token&lt;/code&gt; is required to access the other repositories and make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merge request&lt;/code&gt;.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/personal_access_tokens.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/personal_access_tokens.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/personal_access_tokens.png&quot; alt=&quot;GitLab Dependabot - personal access tokens&quot; /&gt; &lt;/picture&gt; &lt;p&gt;Create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal Access Token&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;api&lt;/code&gt; permission.&lt;/p&gt; &lt;h2 id=&quot;create-github-token&quot;&gt;Create GitHub token&lt;/h2&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub API&lt;/code&gt; to check the library versions.. So To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub API&lt;/code&gt;, you need to create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal access token&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;After login on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, click the profile image on the right top. And then, click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings&lt;/code&gt; to go to the settings page.&lt;/p&gt; &lt;p&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Developer settings&lt;/code&gt; on the bottom of the left menu on the settings peage. And then, click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal access tokens&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token (classic)&lt;/code&gt; to go to creating &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token&lt;/code&gt; page.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/github_personal_access_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/github_personal_access_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/github_personal_access_token.png&quot; alt=&quot;GitLab Dependabot - GitHub personal access tokens&quot; /&gt; &lt;/picture&gt; &lt;p&gt;Cteate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Token&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_repo&lt;/code&gt; permission of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;repo&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;create-cicd-variables&quot;&gt;Create CI/CD variables&lt;/h2&gt; &lt;p&gt;Next, you need to configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pesonal Access Token&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; variables in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt;.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/ci_cd_variables.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/ci_cd_variables.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/ci_cd_variables.png&quot; alt=&quot;GitLab Dependabot - add token to CI/CD variables&quot; /&gt; &lt;/picture&gt; &lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository, click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Variables&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expand&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;And then add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal Access Token&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITLAB_ACCESS_TOKEN&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Key: GITLAB_ACCESS_TOKEN&lt;/li&gt; &lt;li&gt;Value: token&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Also, add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Personal Access Token&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_ACCESS_TOKEN&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Key: GITHUB_ACCESS_TOKEN&lt;/li&gt; &lt;li&gt;Value: token&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;selfd-managed GitLab&lt;/code&gt;, you may need to configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITLAB_HOSTNAME&lt;/code&gt; like the following.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Key: GITLAB_HOSTNAME&lt;/li&gt; &lt;li&gt;Value: gitlab.dev-yakuza.com&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;create-gitlab-ciyml-file&quot;&gt;Create .gitlab-ci.yml file&lt;/h2&gt; &lt;p&gt;You can find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.example.yml&lt;/code&gt; file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository. Modify this file name to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt;.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/gitlab_ci_yml.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/gitlab_ci_yml.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/gitlab_ci_yml.png&quot; alt=&quot;GitLab Dependabot - rename .gitlab-ci.example.yml to .gitlab-ci.yml&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;create-schedule&quot;&gt;Create Schedule&lt;/h2&gt; &lt;p&gt;Now, let’s create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Schedule&lt;/code&gt; to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; at regular interval to check that there are new versions of the libraries in the specific project and if there are, create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merge request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Create new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Schedule&lt;/code&gt; on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; repository.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/scehdule_pipeline.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/scehdule_pipeline.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/scehdule_pipeline.png&quot; alt=&quot;GitLab Dependabot - create a new schedule of pipeline&quot; /&gt; &lt;/picture&gt; &lt;p&gt;At this time, you need to configure the specific project &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Path&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package manger&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Variables&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;PROJECT_PATH: &lt;namespace&gt;/&lt;project&gt; (ex&amp;gt; dev-yakuza/deku-nextjs-boilerplate)&lt;/project&gt;&lt;/namespace&gt;&lt;/li&gt; &lt;li&gt;PACKAGE_MANAGER_SET: project manager (ex&amp;gt; npm_and_yarn)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package manager&lt;/code&gt; that you can configure to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; on the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;PACKAGE_MANAGER: &lt;a href=&quot;https://github.com/dependabot/dependabot-script#environment-variables&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dependabot/dependabot-script#environment-variables&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The list of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package manager&lt;/code&gt; is like following.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;bundler&lt;/li&gt; &lt;li&gt;cargo&lt;/li&gt; &lt;li&gt;composer&lt;/li&gt; &lt;li&gt;dep&lt;/li&gt; &lt;li&gt;docker&lt;/li&gt; &lt;li&gt;elm&lt;/li&gt; &lt;li&gt;go_modules&lt;/li&gt; &lt;li&gt;gradle&lt;/li&gt; &lt;li&gt;hex&lt;/li&gt; &lt;li&gt;maven&lt;/li&gt; &lt;li&gt;npm_and_yarn&lt;/li&gt; &lt;li&gt;nuget&lt;/li&gt; &lt;li&gt;pip (includes pipenv)&lt;/li&gt; &lt;li&gt;submodules&lt;/li&gt; &lt;li&gt;terraform&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;execute-schedule&quot;&gt;Execute Schedule&lt;/h2&gt; &lt;p&gt;And then, let’s execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Schedule&lt;/code&gt; to check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; works well.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/start_schedule_pipeline.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/start_schedule_pipeline.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/start_schedule_pipeline.png&quot; alt=&quot;GitLab Dependabot - create a new schedule of pipeline&quot; /&gt; &lt;/picture&gt; &lt;p&gt;If there is no problem, you can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merge request&lt;/code&gt; is created on the repository that you set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROJECT_PATH&lt;/code&gt; like following.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/merge_request.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/gitlab/dependabot/merge_request.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/gitlab/dependabot/merge_request.png&quot; alt=&quot;GitLab Dependabot - merge request&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;error-job-failed-failed-to-pull-image-dependabotdependabot-script&quot;&gt;ERROR: Job failed: failed to pull image dependabot/dependabot-script&lt;/h2&gt; &lt;p&gt;Basically, you don’t need to modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file. But due to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt; configuration, the following error may occur.&lt;/p&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR: Job failed: failed to pull image &quot;dependabot/dependabot-script&quot; with specified policies [always]: Error response from daemon: pull acces s denied for dependabot/dependabot-script, repository does not exist or may require &apos;docker login&apos;: denied: requested access to the resource is denied (manager.go: 237:2s) &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;In this case, you need to modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file like following.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# build-image:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# tags:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# - shell&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# stage: build&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# script:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# - docker build -t &quot;dependabot/dependabot-script&quot; -f Dockerfile .&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.dependabot&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dependabot/dependabot-core&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle install -j $(nproc) --path vendor&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;PACKAGE_MANAGER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CI_JOB_NAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec ruby ./generic-update-script.rb&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;schedules&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;After modifying it, when you execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Schedule&lt;/code&gt;, you can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merge request&lt;/code&gt; create well.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! we’ve seen how to configure and execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt; by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot-script&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self-manged GitLab&lt;/code&gt; not the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ultimate&lt;/code&gt; plan. If you use the newest version of the library, you can fix some security issues, and you don’t need to do a massive version update, so you don’t have to spend a lot of time on version updates.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/gitlab/dependabot/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/gitlab/dependabot/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>