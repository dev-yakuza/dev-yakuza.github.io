<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://deku.posstree.com/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://deku.posstree.com/ko/" rel="alternate" type="text/html"/><updated>2024-01-24T08:42:30+09:00</updated><id>https://deku.posstree.com/feed.xml</id><title type="html">Deku</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">[Monoepo] Symlink</title><link href="https://deku.posstree.com/ko/environment/monorepo/symlink/" rel="alternate" type="text/html" title="[Monoepo] Symlink"/><published>2024-01-17T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-symlink-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/symlink/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink&quot;&gt;Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%98%88%EC%A0%9C&quot;&gt;예제&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%EC%83%9D%EC%84%B1&quot;&gt;Symlink 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%ED%99%95%EC%9D%B8&quot;&gt;Symlink 확인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;모노레포에서 여러 모듈들의 의존성을 연결할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 활용하게 됩니다. 이번 블로그 포스트에서는 모노레포를 이해하기 위한 기본 지식인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink(Symbolic Link)&lt;/code&gt;에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monoepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] Symlink&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;symlink&quot;&gt;Symlink&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symbolic Link&lt;/code&gt;의 줄임말로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;파일&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;디렉토리&lt;/code&gt;에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;바로가기(System shortcut)&lt;/code&gt;라고 생각하시면 됩니다.&lt;/p&gt; &lt;p&gt;Symlink는 주요 OS(macOS, Windows, Linux)에서 지원하는 기본 기능입니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;의 패키지 매니저인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;에서도 지원하고 있습니다.&lt;/p&gt; &lt;h2 id=&quot;예제&quot;&gt;예제&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;이 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 기능을 확인하기 위한 예제를 만들어 봅시다. 우선, 다음과 같이 폴더와 파일 구조를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 파일을 구성한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;symlink-생성&quot;&gt;Symlink 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 기능을 확인하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt; 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이동한 후, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 사용할 준비를 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# yarn link&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 사용하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .. &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;module-a &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더로 이동하였다면, 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link&lt;/code&gt; 명령어를 실행하면 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더가 생성되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modules-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;가 생성된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ├── index.js ├── node_modules │ └── module-b -&amp;gt; ../../module-b └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 폴더는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 복사한 것이 아니라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt; 자체와 연동이 되어 있습니다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일을 수정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일도 같이 수정이 되며, 반대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일을 수정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일도 같이 수정이 됩니다.&lt;/p&gt; &lt;h2 id=&quot;symlink-확인&quot;&gt;Symlink 확인&lt;/h2&gt; &lt;p&gt;이제 프로젝트의 루트 폴더(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;)로 이동한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ../..&lt;/span&gt; node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 문제없이 잘 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일 내용을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b!!!!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;수정후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일을 열어보면 위에서 수정한 내용이 반영되어 있는 것을 확인할 수 있습니다. 물론, 다음 명령어를 실행하면, 변경된 내용이 잘 출력되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js module-a module-b!!!! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 모노레포를 사용하기 위한 기초 지식인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;에 대해서 알아보았습니다. 모노레포에서 여러 모듈들의 의존성을 연결할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 활용하므로 이번 블로그 포스트를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 이해해 두면 모노레포를 사용하는데 도움이 될 것입니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Monorepo] NodeJS의 모듈 불러오기</title><link href="https://deku.posstree.com/ko/environment/monorepo/module-resolutions/" rel="alternate" type="text/html" title="[Monorepo] NodeJS의 모듈 불러오기"/><published>2024-01-16T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-resolution-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/module-resolutions/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88&quot;&gt;모듈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0&quot;&gt;모듈 불러오기&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#file-path&quot;&gt;File path&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#package-name&quot;&gt;Package name&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84&quot;&gt;모듈 불러오기 우선순위&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%98%88%EC%A0%9C&quot;&gt;예제&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 모노레포를 이해하기 위한 기본 지식으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모듈&quot;&gt;모듈&lt;/h2&gt; &lt;p&gt;자바스크립트에서 모듈은 코드를 구성하고 재사용 가능한 단위로 분리하는 데 사용되는 기능입니다. 모듈을 사용하면 코드를 더 쉽게 유지보수하고 확장할 수 있습니다. ECMAScript 2015(ES6)부터 자바스크립트에 원래 없었던 모듈 시스템이 도입되었습니다.&lt;/p&gt; &lt;p&gt;모듈은 파일 수준에서 코드를 캡슐화하고, 필요한 기능을 다른 파일에서 가져와 사용할 수 있도록 해줍니다. 모듈을 사용하면 전역 스코프의 충돌을 방지하고, 코드의 의존성을 명확하게 관리할 수 있습니다.&lt;/p&gt; &lt;p&gt;JavaScript에서 모듈을 사용하기 위해 다음과 같은 키워드를 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;: 다른 모듈에서 내보낸 기능을 현재 모듈에서 가져옵니다.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export&lt;/code&gt;: 현재 모듈에서 외부로 내보낼 함수, 변수, 클래스 등을 지정합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;JavaScript에서 다음과 같이 모듈을 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// math.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 만든 모듈은 다음과 같이 사용이 가능합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;모듈-불러오기&quot;&gt;모듈 불러오기&lt;/h2&gt; &lt;p&gt;JavaScript에서 모듈을 불러오는 방법은 크게 두 가지가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;를 이용하는 방법&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;을 이용하는 방법&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;file-path&quot;&gt;File path&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;를 이용하여 모듈을 추가할 때는 다음과 같이 상대 경로(Relative path)와 절대 경로(Absolute path)를 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Relative path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../some/file/path/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Absolute path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/src/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;package-name&quot;&gt;Package name&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더 하위에 있는 모듈은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;을 이용하여 불러올 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// react module exists in node_modules&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;모듈-불러오기-우선순위&quot;&gt;모듈 불러오기 우선순위&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;에서 모듈을 불러올 때, 우선 동일한 폴더에서 해당 모듈이 있는지, 동일한 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에 모듈이 확인합니다. 만약, 동일한 폴더에 존재하지 않는다면, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더를 찾게 되고, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에도 존재하지 않는 경우, 부모 폴더의 상위 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에서 모듈을 찾게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;예제&quot;&gt;예제&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법을 확인하기 위해 다음과 같은 폴더 구조를 만들어 보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 파일을 구성한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더명을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;로 변경하고 다시 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node node_modules/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 문제없이 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;폴더명이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;인 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require(&apos;module-b&apos;);&lt;/code&gt;을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 불러올 때, 파일 경로가 아니므로 동일한 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 찾게 됩니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 현재 폴더에 존재하지 않으므로, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;를 확인합니다. 부모 폴더에도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 없기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MODULE_NOT_FOUND&lt;/code&gt; 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;폴더명을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;로 변경한 후, 동일한 코드를 실행하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 존재하지 않기 때문에, 부모 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;를 찾게 됩니다. 부모 폴더에는 우리가 이름을 변경한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 존재하고, 해당 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;가 존재하기 때문에 문제가 발생하지 않고 잘 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법은 모노레포로 프로젝트를 구성하는데 도움이 되는 지식이므로 이번 블로그 포스트에서 소개해 보았습니다. 여러분도 이번 기회에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 다시 한번 이해해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[JavaScript] 모노레포(Monorepo)를 위한 도구들</title><link href="https://deku.posstree.com/ko/environment/monorepo/tools/" rel="alternate" type="text/html" title="[JavaScript] 모노레포(Monorepo)를 위한 도구들"/><published>2024-01-11T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo_tools-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/tools/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95&quot;&gt;모노레포를 시작하는 방법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80&quot;&gt;패키지 매니저&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9A%A9-%ED%88%B4&quot;&gt;모노레포용 툴&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#lerna&quot;&gt;Lerna&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#nx&quot;&gt;Nx&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#turborepo&quot;&gt;Turborepo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript로 개발할 프로젝트에서 모노레포(Monorepo)를 사용하기 위해 필요한 도구들을 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모노레포를-시작하는-방법&quot;&gt;모노레포를 시작하는 방법&lt;/h2&gt; &lt;p&gt;모노레포를 시작하는 방법은 크게 두 가지가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;패키지 매니저를 이용하는 방법&lt;/li&gt; &lt;li&gt;모노레포용 툴을 사용하는 방법&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript 프로젝트에서 모노레포를 지원하는 패키지 매니저와 모노레포 툴에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;패키지-매니저&quot;&gt;패키지 매니저&lt;/h2&gt; &lt;p&gt;JavaScript 프로젝트에서 모노레포를 구성하기 위해서는 모노레포를 지원하는 패키지 매니저를 사용할 수 있습니다. 모노레포를 지원하는 패키지 매니저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;이 있습니다.&lt;/p&gt; &lt;p&gt;모노레포를 지원하는 패키지매니저인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;은 다음과 같은 특성을 가지고 있습니다.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;기능&lt;/th&gt; &lt;th&gt;pnpm&lt;/th&gt; &lt;th&gt;yarn&lt;/th&gt; &lt;th&gt;npm&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;workspace 제공&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;고립된 node_modules&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;호이스팅된 node_modules&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;피어 자동 설치&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plug’n’Play&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Zero-Installs&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;종속 패치&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;NodeJS 버전 관리&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lockfile&lt;/td&gt; &lt;td&gt;✅(pnpm-lock.yaml)&lt;/td&gt; &lt;td&gt;✅(yarn.lock)&lt;/td&gt; &lt;td&gt;✅(package-lock.json)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;덮어쓰기 지원&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(resolution 사용)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Content-addressable 리포지토리&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;동적 패키지 실행&lt;/td&gt; &lt;td&gt;✅(pnpm dlx)&lt;/td&gt; &lt;td&gt;✅(yarn dlx)&lt;/td&gt; &lt;td&gt;✅(npx)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Listing licenses&lt;/td&gt; &lt;td&gt;✅(pnpm licenses list)&lt;/td&gt; &lt;td&gt;✅(Via a plugin)&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;모노레포용-툴&quot;&gt;모노레포용 툴&lt;/h2&gt; &lt;p&gt;패키지 매니저가 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspace&lt;/code&gt; 기능만으로도 충분히 모노레포를 구성할 수 있지만, 모노레포용 툴을 사용하면 보다 쉽게 모노레포를 구성할 수 있습니다. 또한, 모노레포용 툴이 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache&lt;/code&gt; 기능을 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 등을 보다 빠르게 수행할 수 있습니다.&lt;/p&gt; &lt;p&gt;JavaScript 프로젝트를 위한 모노레포용 툴에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;가 있습니다.&lt;/p&gt; &lt;h3 id=&quot;lerna&quot;&gt;Lerna&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;는 오픈소스로 개발, 관리되고 있습니다. 오픈소스 커뮤니티만으로는 관리가 어려워 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;에 인수되었습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lerna: &lt;a href=&quot;https://lerna.js.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://lerna.js.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;현재도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 사용할 수 있지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;에 인수되었기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;가 자신들의 툴만큼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 지원할지 확실하지 않기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 사용할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;를 사용하는 것을 고려하거나, 좀 더 추이를 지켜보는 것이 좋을 것 같습니다.&lt;/p&gt; &lt;h3 id=&quot;nx&quot;&gt;Nx&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Narwhal Technologies Inc.&lt;/code&gt;라는 회사에서 개발하여 제공하고 있습니다. 이 회사는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크와 관련된 도구 및 서비스를 제공하는 회사입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크 관련 도구를 개발하는 회사가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;이기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 애플리케이션을 위한 모노레포 관리 도구로 시작되었습니다. 현재는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 등 다른 프레임워크도 지원하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Nx: &lt;a href=&quot;https://nx.dev/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크로 프로젝트를 개발할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 훌륭한 선택일 것입니다. 물론 다른 프레임워크에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 좋은 선택지일 수 있지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크를 중심으로 개발된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 중심의 툴을 개발하는 회사가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크에서 더 좋은 성능을 발휘할 것입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;가 지원하는 프레임워크는 다음 링크를 통해서 확인 가능합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Recipes: &lt;a href=&quot;https://nx.dev/recipes&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/recipes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;turborepo&quot;&gt;Turborepo&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;는 &lt;a href=&quot;https://twitter.com/jaredpalmer&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Jared Palmer&lt;/a&gt;가 개발하였지만, 2021년 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;를 만들고 운영하는 &lt;a href=&quot;https://vercel.com/blog/vercel-acquires-turborepo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Vercel&lt;/a&gt;이 인수하여 개발, 관리하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turbo: &lt;a href=&quot;https://turbo.build/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;만약, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;로 프로젝트를 개발할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;는 훌륭한 선택일 것입니다. 특히, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;를 사용하면 같은 회사가 개발, 관리하고 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;를 사용하는 것이 다른 툴을 사용하는 것보다 좋을 것입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;가 지원하는 프레임워크는 다음 링크를 통해서 확인 가능합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turborepo Examples: &lt;a href=&quot;https://turbo.build/repo/docs/getting-started/from-example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/repo/docs/getting-started/from-example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript로 개발할 프로젝트에서 모노레포(Monorepo)를 사용하기 위해 필요한 도구들을 알아보도록 하겠습니다. 패키지 매니저가 제공하는 기능으로도 충분히 모노레포를 구성할 수 있지만, 모노레포용 툴을 사용하면 좀 더 편하고 다양한 기능들을 사용할 수 있습니다.&lt;/p&gt; &lt;p&gt;모노레포로 프로젝트를 구성할 예정이시라면 패키지 매니저의 기능뿐만 아니라 모노레포용 툴의 도입도 고려해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[프로젝트 관리] 리포지토리 전략</title><link href="https://deku.posstree.com/ko/environment/repository_strategy/" rel="alternate" type="text/html" title="[프로젝트 관리] 리포지토리 전략"/><published>2024-01-04T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/repository_strategy-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/repository_strategy/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A6%AC%ED%8F%AC%EC%A7%80%ED%86%A0%EB%A6%AC-%EC%A0%84%EB%9E%B5&quot;&gt;리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4monolith&quot;&gt;모놀리스Monolith&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;모놀리스의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;모놀리스의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;모놀리스 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%ACmulti-repo&quot;&gt;멀티 레포Multi Repo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;멀티 레포의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;멀티 레포의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;멀티 레포 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%ACmonorepo&quot;&gt;모노레포Monorepo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;모노레포의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;모노레포의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;모노레포 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;프로젝트를 개발할 때, 하나의 리포지토리로 구성할지, 여러 리포지토리로 구성할지 리포지토리 전략을 정하게 됩니다. 이번 블로그 포스트에서는 프로젝트를 관리하기 위한 리포지토리 전략인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모놀리스(Monolith)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;멀티 레포(Multi Repo)&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; 모노레포(Monorepo)&lt;/code&gt;에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[프로젝트 관리] 리포지토리 전략&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;리포지토리-전략&quot;&gt;리포지토리 전략&lt;/h2&gt; &lt;p&gt;리포지토리 전략에는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모놀리스(Monolith)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;멀티 레포(Multi Repo)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모노레포(Monorepo)&lt;/code&gt;가 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.jpg&quot; alt=&quot;Repository strategy&quot; /&gt; &lt;/picture&gt; &lt;ul&gt; &lt;li&gt;모놀리스: 모놀리스는 하나의 서비스를 하나의 프로젝트로 만들고 하나의 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;li&gt;멀티 레포: 멀티 레포는 하나의 서비스를 여러 프로젝트로 나누고 여러 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;li&gt;모노레포: 모노레포는 하나의 서비스를 여러 프로젝트로 나누고 하나의 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모놀리스monolith&quot;&gt;모놀리스(Monolith)&lt;/h2&gt; &lt;p&gt;모놀리스(Monolith)는 소프트웨어 프로젝트를 단일한 코드베이스로 구성된 단일 애플리케이션으로 설계하는 프로젝트 관리 기법입니다. 모놀리스 아키텍처에서는 애플리케이션의 모든 컴포넌트가 하나의 코드베이스에 통합되어 개발, 배포, 운영이 이루어집니다.&lt;/p&gt; &lt;h3 id=&quot;모놀리스의-장점&quot;&gt;모놀리스의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;간편한 관리와 유지보수: 단일 코드베이스로 구성되어 있기 때문에 전반적인 관리와 유지보수가 비교적 간편합니다.&lt;/li&gt; &lt;li&gt;통합 테스트 용이성: 전체 시스템이 하나의 단일 애플리케이션으로 구성되어 있어 통합 테스트가 용이합니다.&lt;/li&gt; &lt;li&gt;초기 개발 속도 향상: 처음에는 모든 것이 한 곳에 있어 개발이 빠르게 진행될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모놀리스의-단점&quot;&gt;모놀리스의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;확장성 제약: 애플리케이션의 크기가 커질수록 확장이 어려워질 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 종속성: 단일 기술 스택에 의존하게 되어 다양한 기술 도입이 어려울 수 있습니다.&lt;/li&gt; &lt;li&gt;배포의 어려움: 전체 애플리케이션을 수정하고 배포해야 하기 때문에 작은 변경 사항의 배포가 어려울 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모놀리스-도입시-고려-사항&quot;&gt;모놀리스 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우라면, 모놀리스 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;작은 규모의 프로젝트: 작은 프로젝트라면 초기에 개발 속도를 높일 수 있습니다.&lt;/li&gt; &lt;li&gt;쉬운 유지보수가 필요한 경우: 간단한 애플리케이션에서는 유지보수가 편리할 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택이 명확한 경우: 특정 기술 스택에 대한 확고한 결정이 내려진 경우 모놀리스가 유용할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 규모가 작은 경우: 작은 팀이 협업하고 개발하는 경우에는 모놀리스가 효과적일 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그러나 프로젝트의 규모와 요구사항이 증가할수록, 분산 아키텍처나 마이크로서비스 아키텍처 등 다른 아키텍처도 고려해야 합니다. 이는 애플리케이션의 확장성, 유연성, 독립성 등을 높여줄 수 있습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;멀티-레포multi-repo&quot;&gt;멀티 레포(Multi Repo)&lt;/h2&gt; &lt;p&gt;멀티 레포(Multi Repo)는 소프트웨어 프로젝트를 여러 개의 독립적인 저장소(리포지토리)로 나누어 개발하는 프로젝트 관리 기법입니다. 각각의 저장소는 특정 기능, 모듈 또는 서비스에 대응하며, 개발, 배포, 운영이 분리되어 이루어집니다.&lt;/p&gt; &lt;h3 id=&quot;멀티-레포의-장점&quot;&gt;멀티 레포의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;독립적인 개발 및 배포: 각 저장소는 독립적으로 개발, 테스트, 배포될 수 있어 빠른 개발 주기가 가능합니다.&lt;/li&gt; &lt;li&gt;스케일링 용이성: 특정 모듈이나 서비스의 부하가 증가하면 해당 저장소만 확장하여 시스템의 전반적인 성능을 향상시킬 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 다양성: 각 저장소는 독립적인 기술 스택을 선택할 수 있어, 특정 기술에 의존하지 않고 여러 기술을 조합하여 사용할 수 있습니다.&lt;/li&gt; &lt;li&gt;분리된 코드베이스: 각 저장소는 특정 기능이나 업무 영역에 집중되어 코드의 가독성과 유지보수가 향상될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;멀티-레포의-단점&quot;&gt;멀티 레포의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;종속성 관리의 어려움: 다양한 저장소 간에 종속성을 관리하는 것이 복잡할 수 있습니다.&lt;/li&gt; &lt;li&gt;전체 시스템 통합의 어려움: 각 저장소가 독립적으로 개발되다가 통합할 때 충돌이 발생할 수 있으며, 이를 해결하는 데 시간이 소요될 수 있습니다.&lt;/li&gt; &lt;li&gt;종합적인 시각의 부재: 전체 시스템을 이해하고 관리하기 어려울 수 있으며, 특히 통합된 시각이 필요한 경우에는 어려움이 있을 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;멀티-레포-도입시-고려-사항&quot;&gt;멀티 레포 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우, 멀티 레포 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;대규모 프로젝트: 프로젝트가 크고 다양한 기능이나 모듈을 포함하는 경우, 각각을 독립적으로 관리할 필요가 있을 때 사용할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 간 협업: 여러 개의 팀이 동시에 작업을 수행하고 서로 독립적으로 개발하려는 경우, 멀티 레포가 효과적일 수 있습니다.&lt;/li&gt; &lt;li&gt;서비스 지향 아키텍처(SOA) 또는 마이크로서비스 아키텍처: 멀티 레포는 각각의 서비스를 독립적으로 관리하는데 유용하며, 이는 SOA 또는 마이크로서비스 아키텍처와 잘 맞을 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;멀티 레포는 분산된 환경에서 팀의 협업과 빠른 개발 주기를 지원하는데 적합하며, 특히 서비스 지향 아키텍처에서는 각각의 서비스를 개별적으로 관리하는 것이 중요하게 여겨집니다.&lt;/p&gt; &lt;p&gt;하지만, 팀 규모가 작거나 프로젝트 규모가 작은 경우, 너무 많은 기술 스택과 리포지토리 관리의 어려움이 발생할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;모노레포monorepo&quot;&gt;모노레포(Monorepo)&lt;/h2&gt; &lt;p&gt;모노레포(Mono-repo)는 소프트웨어 프로젝트를 하나의 대규모 코드 저장소(리포지토리)로 구성하여 개발하는 프로젝트 관리 기법입니다. 이 방식에서는 모든 소스 코드, 라이브러리, 모듈이 하나의 중앙 위치에 저장되고 관리됩니다.&lt;/p&gt; &lt;h3 id=&quot;모노레포의-장점&quot;&gt;모노레포의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;종속성 관리 용이: 하나의 코드베이스에서 모든 종속성을 관리하므로 의존성 충돌 및 버전 관리가 용이합니다.&lt;/li&gt; &lt;li&gt;전체 시스템 이해 용이: 프로젝트의 전반적인 구조와 동작을 이해하기 쉽습니다. 전체 시스템을 한눈에 파악할 수 있습니다.&lt;/li&gt; &lt;li&gt;코드 재사용성: 모든 모듈 및 라이브러리가 하나의 저장소에 있으므로 코드 재사용이 쉽습니다.&lt;/li&gt; &lt;li&gt;통합 테스트 용이성: 전체 시스템에 대한 통합 테스트가 간편하게 수행될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모노레포의-단점&quot;&gt;모노레포의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;대규모 프로젝트 관리 어려움: 프로젝트의 규모가 커질수록 빌드 시간이 증가하고, 모든 코드에 대한 팀 간의 협업이 어려워질 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 선택의 제약: 하나의 저장소에서 작업하기 때문에 특정 기술 스택에 제약을 받을 수 있습니다.&lt;/li&gt; &lt;li&gt;CI/CD 성능 저하: 대규모 모노레포에서는 지속적 통합 및 배포 성능이 저하될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모노레포-도입시-고려-사항&quot;&gt;모노레포 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우, 모노레포 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;프로젝트가 중소 규모일 때: 규모가 작은 프로젝트에서는 하나의 저장소로 관리하는 것이 편리할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 간 협업이 필요한 경우: 모든 팀이 하나의 저장소에서 작업하면 코드 공유 및 협업이 용이합니다.&lt;/li&gt; &lt;li&gt;종속성 관리가 중요한 경우: 프로젝트 내에서 종속성이 복잡하게 얽혀 있을 때 모노레포가 관리하기 쉽습니다.&lt;/li&gt; &lt;li&gt;단일 기술 스택 사용이 필요한 경우: 특정 기술 스택을 일관되게 사용해야 할 때 모노레포가 적합할 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;모노레포는 특히 작은 규모의 프로젝트나 팀 간 협업이 필요한 경우에 유용하며, 특정 기술 스택을 통일해야 하는 경우에도 효과적일 수 있습니다. 그러나 프로젝트의 규모나 복잡성이 증가하면서 모노레포의 한계가 나타날 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 프로젝트 관리 기법인 리포지토리 전략에 대해서 알아보았습니다. 특정 전략이 좋고 나쁘고는 없습니다. 자신의 프로젝트의 규모와 요구사항에 맞게 적절한 전략을 선택하시면 됩니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[GitHub Actions] Pull request의 Label 검사</title><link href="https://deku.posstree.com/ko/share/github-actions/pr-labels-checker/" rel="alternate" type="text/html" title="[GitHub Actions] Pull request의 Label 검사"/><published>2023-12-25T00:00:00+09:00</published><updated>2024-01-03T15:12:00+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-pr-labels-checker-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/pr-labels-checker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pr-labels-checker&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%EC%9E%91%EC%84%B1&quot;&gt;GitHub Actions 작성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt; 기능을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 관리합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/pr-labels-checker/pull_request_labels.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/pr-labels-checker/pull_request_labels.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/share/github-actions/pr-labels-checker/pull_request_labels.png&quot; alt=&quot;GitHub Actions - PR Labels Checker, pull request labels&quot; /&gt; &lt;/picture&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;중 하나인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-title-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Pull request 제목 검사&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[GitHub Actions] Pull request의 라벨 검사&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;pr-labels-checker&quot;&gt;PR Labels Checker&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;중 하나로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 기능을 제공하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/danielchabr/pr-labels-checker&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;github-actions-작성&quot;&gt;GitHub Actions 작성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 작성해 보겠습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/pr-labels-checker.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PR Labels Checker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;labeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unlabeled&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pr_labels_checker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;가 생성되거나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 추가, 해제할 때, 실행됩니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;labeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unlabeled&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checks&lt;/code&gt;에 대한 권한이 필요합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pr_labels_checker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사할 때는 다음과 같은 조건을 사용할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;hasSome: 콤마로 구분된 Label 리스트로, PR은 이 중 하나를 반드시 포함해야 합니다.&lt;/li&gt; &lt;li&gt;hasAll: 콤마로 구분된 Label 리스트로, PR은 이 리스트 모두 포함해야 합니다.&lt;/li&gt; &lt;li&gt;hasNone: 콤마로 구분된 Label 리스트로, PR은 이 리스트중 그 어떤 것도 포함해서는 안됩니다.&lt;/li&gt; &lt;li&gt;hasNotAll: 콤마로 구분된 Label 리스트로, PR은 이 리스트 모두를 포함해서는 안됩니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hasSome&lt;/code&gt; 조건을 사용하였습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;조건에 포함된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes 자동화&lt;/code&gt;하기 위해 필요한 리스트입니다. 자세한 내용은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Token&lt;/code&gt;을 사용합니다. 따라서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_TOKEN&lt;/code&gt;을 설정해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;release-drafter&quot;&gt;Release Drafter&lt;/h2&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;의 자동화를 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하고 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;를 자동으로 작성합니다. 또한, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목을 보고 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 설정하는 기능도 가지고 있습니다.&lt;/p&gt; &lt;p&gt;그래서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;가 중요하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;가 자동으로 설정해 주지만, 이를 확실하게 하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 다시 한번 검사하고 있습니다.&lt;/p&gt; &lt;p&gt;이를 위한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;와 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;에 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 설정하고, 자동으로 설정된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 다시 한번 검사하도록 했습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;에 관한 자세한 내용은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 사용하여 관리하는 경우나, 저처럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;를 자동화하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하는 분들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; 도입을 고려해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitHub Actions] Automate Release notes</title><link href="https://deku.posstree.com/ko/share/github-actions/release-drafter/" rel="alternate" type="text/html" title="[GitHub Actions] Automate Release notes"/><published>2023-12-07T00:00:00+09:00</published><updated>2023-12-30T08:43:28+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-release-drafter-en</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/release-drafter/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#contents&quot;&gt;Contents&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#what-is-release-notes&quot;&gt;What is Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter-settings&quot;&gt;Release Drafter settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#write-release-notes-draft&quot;&gt;Write Release notes Draft&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#publish-release-notes&quot;&gt;Publish Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When managing a project on GitHub, you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; to record the features added, bugs fixed, improvements, and deleted features in that version.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to automate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; that is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is part of a series. Please check out the other blog posts through the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-title-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request title&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Automate Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request labels&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;what-is-release-notes&quot;&gt;What is Release notes&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; is a document provided to users or developers when a new version or update is released in software development. This document contains information such as new features, fixed bugs, improvements, and deleted features in that version. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; helps users or other developers easily identify changes in a new version.&lt;/p&gt; &lt;p&gt;If you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, you can check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Releases&lt;/code&gt; section of the repository.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.png&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.png&quot; alt=&quot;GitHub Actions - Release Drafter, GitHub Releases&quot; /&gt; &lt;/picture&gt; &lt;p&gt;When you click the link of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;, you can see the details of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; as follows.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.png&quot; alt=&quot;GitHub Actions - Release Drafter, GitHub Release notes details&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;release-drafter&quot;&gt;Release Drafter&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; that provides a feature to write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/release-drafter/release-drafter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;release-drafter-settings&quot;&gt;Release Drafter settings&lt;/h2&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, you need to add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch.&lt;/p&gt; &lt;p&gt;In order to add it, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/release-drafter.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🧩&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Dependency&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Updates&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;deps&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bump&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Let’s take a closer look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This part is to specify the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$RESOLVED_VERSION&lt;/code&gt; is used to determine the version based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version-resolver&lt;/code&gt; is the part that specifies the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt; used to raise the version by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. If no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; is specified, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt; version will be raised.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🧩&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Dependency&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Updates&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;deps&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bump&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; is the part that specifies the category of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. If there is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; specified in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt;, the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; will be recorded in the category specified by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collapse-after&lt;/code&gt; is an option that folds and shows the contents of the category if there are more than the specified number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; provides a feature that automatically assigns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; based on the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; is the part that assigns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; based on the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commitish&lt;/code&gt; is the part that specifies the branch to check the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-template&lt;/code&gt; is the part that specifies the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$TITLE&lt;/code&gt; is the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$AUTHOR&lt;/code&gt; is the user who created the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$NUMBER&lt;/code&gt; is the number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-title-escapes&lt;/code&gt; is the part that specifies the characters to escape from the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; is the part that specifies the entire template of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$CHANGES&lt;/code&gt; represents the contents specified in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-template&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file written like this is used when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action is executed, so it must be added to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch before writing and executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;write-release-notes-draft&quot;&gt;Write Release notes Draft&lt;/h2&gt; &lt;p&gt;Next, let’s write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; that uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;. Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release-drafter.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created, this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; to automatically assign the appropriate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;And then, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;merge&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action is executed to write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;publish-release-notes&quot;&gt;Publish Release notes&lt;/h2&gt; &lt;p&gt;So far, we have looked at how to write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;. Now let’s look at how to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To publish the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get variables&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;These &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; operate on the &lt;a href=&quot;https://semver.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Semantic Version&lt;/a&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt; and distribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; written in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publsih&lt;/code&gt; option of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! We’ve seen how to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; operates based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. Therefore, it is important to check whether the appropriate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; is set in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;On the next blog post, we will see how to check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; action.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request labels&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[GitHub Actions] Pull request 제목 검사</title><link href="https://deku.posstree.com/ko/share/github-actions/pr-title-checker/" rel="alternate" type="text/html" title="[GitHub Actions] Pull request 제목 검사"/><published>2023-12-06T00:00:00+09:00</published><updated>2023-12-27T20:11:23+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-pr-title-checker-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/pr-title-checker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-commits%EC%9D%B4%EB%9E%80&quot;&gt;Conventional Commits이란&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%EC%83%9D%EC%84%B1&quot;&gt;GitHub Actions 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.conventionalcommits.org/en/v1.0.0/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Conventional Commits&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[GitHub Actions] Pull request 제목 검사&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Pull request의 라벨 검사&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conventional-commits이란&quot;&gt;Conventional Commits이란&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;은 소프트웨어 개발에서 사용되는 커밋 메시지를 표준화하기 위한 규칙입니다. 이것은 코드 변경 사항을 더 읽기 쉽고 자동화된 버전 관리 시스템과 통합하기 쉽도록 만들기 위한 목적이 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;은 다음과 같은 구조를 가지고 있습니다.&lt;/p&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt; [optional body] [optional footer(s)] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;타입(Type): 커밋의 의도를 나타내는 단어로, 주로 feat(기능 추가), fix(버그 수정), chore(빌드 및 도구 관련 변경) 등이 사용됩니다.&lt;/li&gt; &lt;li&gt;범주(Scope): 변경 사항이 어떤 부분에 영향을 미치는지를 지정하는 옵션입니다. Optional이므로 생략할 수 있습니다.&lt;/li&gt; &lt;li&gt;커밋 메시지(description): 변경 사항의 간결한 설명을 담고 있는 부분으로, 명령문 형태로 작성되어야 합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;여기서 타입은 다음과 같은 종류를 사용할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;feat: 새로운 기능을 추가할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;fix: 버그를 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;chore: 빌드 프로세스나 도구 관련 작업을 수행할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;docs: 문서를 변경할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;style: 코드 스타일을 변경하거나 포맷을 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;refactor: 코드 리팩토링을 수행할 때 사용됩니다. 기능의 변경 없이 코드의 구조를 개선하는 경우에 해당합니다.&lt;/li&gt; &lt;li&gt;test: 테스트 관련 코드를 추가하거나 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;build: 빌드 시스템 또는 외부 종속성에 대한 변경을 나타낼 때 사용됩니다.&lt;/li&gt; &lt;li&gt;ci: CI/CD 파이프라인에 대한 변경을 나타냅니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 만들 때, 브랜치의 첫 커밋 메시지를 기본적으로 사용하게 됩니다. 따라서 커밋을 할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키도록 하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 만들 때, 좀 더 의미 있는 제목을 사용할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt;을 사용하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/aslafy-z/conventional-pr-title-action/tree/v3/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;github-actions-생성&quot;&gt;GitHub Actions 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt;을 사용하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/pr-title-checker.yml&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Check PR title&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;edited&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lint&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aslafy-z/conventional-pr-title-action@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;가 생성되거나 수정될 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;p&gt;제가 이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 이유는, 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; 작성을 자동화하기 위해서 입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; 작성을 자동화하는 방법에 대해서는 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Mac M2 실리콘 칩] NPM 패키지 deasync 설치 에러</title><link href="https://deku.posstree.com/ko/share/mac-m2-silicon-install-deasync-error/" rel="alternate" type="text/html" title="[Mac M2 실리콘 칩] NPM 패키지 deasync 설치 에러"/><published>2023-11-20T00:00:00+09:00</published><updated>2023-12-03T15:39:41+09:00</updated><id>https://deku.posstree.com/share/mac-m2-silicon-install-deasync-error-ko</id><content type="html" xml:base="https://deku.posstree.com/share/mac-m2-silicon-install-deasync-error/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%97%90%EB%9F%AC-%EC%9B%90%EC%9D%B8&quot;&gt;에러 원인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95&quot;&gt;해결 방법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;최근 새로운 개발 머신(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Macbook M2 Max&lt;/code&gt;)을 사용하게 되었습니다. 그래서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vue2&lt;/code&gt;로 개발된 기존 프로젝트의 개발 환경을 구성하는 과정에서 다음과 같은 에러가 발생하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;error /node_modules/deasync: Command failed. Exit code: 1 Command: node ./build.js Arguments: Directory: /node_modules/deasync Output: gyp info it worked &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;it ends with ok gyp info using node-gyp@9.3.1 gyp info using node@18.16.1 | darwin | arm64 gyp info find Python using Python version 3.11.6 found at &lt;span class=&quot;s2&quot;&gt;&quot;/opt/homebrew/opt/python@3.11/bin/python3.11&quot;&lt;/span&gt; gyp info spawn /opt/homebrew/opt/python@3.11/bin/python3.11 gyp info spawn args &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;/.nvm/versions/node/v18.16.1/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;binding.gyp&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-f&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;make&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-I&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;/node_modules/deasync/build/config.gypi&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-I&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;/.nvm/versions/node/v18.16.1/lib/node_modules/npm/node_modules/node-gyp/addon.gypi&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-I&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;/Library/Caches/node-gyp/18.16.1/include/node/common.gypi&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dlibrary=shared_library&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dvisibility=default&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dnode_root_dir=/Library/Caches/node-gyp/18.16.1&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dnode_gyp_dir=/.nvm/versions/node/v18.16.1/lib/node_modules/npm/node_modules/node-gyp&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dnode_lib_file=/Library/Caches/node-gyp/18.16.1/&amp;lt;(target_arch)/node.lib&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dmodule_root_dir=/node_modules/deasync&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Dnode_engine=v8&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;--depth=.&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;--no-parallel&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;--generator-output&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;build&apos;&lt;/span&gt;, gyp info spawn args &lt;span class=&quot;s1&quot;&gt;&apos;-Goutput_dir=.&apos;&lt;/span&gt; gyp info spawn args &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; gyp info spawn make gyp info spawn args &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;BUILDTYPE=Release&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;-C&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;build&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; CXX&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Release/obj.target/deasync/src/deasync.o SOLINK_MODULE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Release/deasync.node &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-no&lt;/span&gt; /lib &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; Release/deasync.node Release/obj.target/deasync/src/deasync.o &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt;: illegal option &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; n usage: &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; | &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-dIPRrvWx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; file ... &lt;span class=&quot;nb&quot;&gt;unlink&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; file make: &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Release/deasync.node] Error 64 gyp ERR! build error gyp ERR! stack Error: &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;make&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; failed with &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;code: 2 gyp ERR! stack at ChildProcess.onExit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/.nvm/versions/node/v18.16.1/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:203:23&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; gyp ERR! stack at ChildProcess.emit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:events:513:28&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; gyp ERR! stack at ChildProcess._handle.onexit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/child_process:291:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; gyp ERR! System Darwin 23.1.0 gyp ERR! &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/.nvm/versions/node/v18.16.1/bin/node&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/.nvm/versions/node/v18.16.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rebuild&quot;&lt;/span&gt; gyp ERR! cwd /node_modules/deasync gyp ERR! node &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; v18.16.1 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mac M2 실리콘 칩&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deasync&lt;/code&gt;을 설치할 때, 발생하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node-gyp&lt;/code&gt; 에러를 해결하는 방법을 공유합니다.&lt;/p&gt; &lt;h2 id=&quot;에러-원인&quot;&gt;에러 원인&lt;/h2&gt; &lt;p&gt;현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vue2&lt;/code&gt; 프로젝트에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deasync&lt;/code&gt;를 직접 사용하고 있지 않습니다. 그래서 왜 이 에러가 발생하는지 이해하지 못했습니다.&lt;/p&gt; &lt;p&gt;좀 더 자세히 살펴보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vue-jest&lt;/code&gt; 라이브러리가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deasync&lt;/code&gt;를 사용하고 있어서 이런 에러가 발생하는 것을 알게 되었습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vue-jest&lt;/code&gt;의 버전이 낮아 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deasync&lt;/code&gt;의 버전도 낮아 문제가 발생한다고 생각되어 최신 버전의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deasync&lt;/code&gt;을 설치해보았지만, 여전히 같은 문제가 발생하였습니다.&lt;/p&gt; &lt;p&gt;여러 조사를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Macbook M2 Max&lt;/code&gt;의 실리콘 칩(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arm64&lt;/code&gt;)이 문제가 되었다는 것을 알게 되었습니다. 저의 개발 환경은 다음과 같습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apple M2 Max&lt;/li&gt; &lt;li&gt;Node: 18.16.1&lt;/li&gt; &lt;li&gt;Yarn: 1.22.19&lt;/li&gt; &lt;li&gt;Python: 3.11.6&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h2&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt; 버전을 관리하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NVM&lt;/code&gt;을 사용하고 있습니다. 여러 방법을 시도했지만, 모두 실패하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/nvm/&quot; target=&quot;\_blank&quot;&gt;(macOS) NVM으로 Node 버전 관리하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;하지만, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zsh&lt;/code&gt;의 설정을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x86_64&lt;/code&gt;으로 변경하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt;를 새로 설치했더니, 문제가 해결되었습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;기존 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt; 삭제&lt;/li&gt; &lt;/ol&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvm uninstall 18.16.1 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ol&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zsh&lt;/code&gt;의 설정을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x86_64&lt;/code&gt;으로 변경&lt;/li&gt; &lt;/ol&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;arch&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x86_64&lt;/span&gt; zsh &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ol&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt; 재설치&lt;/li&gt; &lt;/ol&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;18.16.1 &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ol&gt; &lt;li&gt;패키지 설치&lt;/li&gt; &lt;/ol&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;저는 개발 환경을 자동으로 구성하도록 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shell Script&lt;/code&gt;를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/configure-development-environment-on-mac-with-homebrew-and-shell-script/&quot; target=&quot;\_blank&quot;&gt;Homebrew와 Shell Script를 사용하여 맥(Mac) 개발 환경 구축 자동화하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;새로운 개발 머신(Macbook M2 Max)에서 자동화로 개발 환경을 설정할 때, 특별히 문제가 없었습니다. 하지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vue2&lt;/code&gt;로 개발된 기존 프로젝트에서 이런 문제가 발생하여 크게 고생하였습니다. 이 블로그 포스트가 저와 같은 문제를 겪는 분들에게 도움이 되었으면 좋겠습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/2023/mac-m2-silicon-install-deasync-error/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/2023/mac-m2-silicon-install-deasync-error/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[GitHub Actions] NPM 패키지 배포 자동화</title><link href="https://deku.posstree.com/ko/share/github-actions/deploy-npm-library/" rel="alternate" type="text/html" title="[GitHub Actions] NPM 패키지 배포 자동화"/><published>2023-10-23T00:00:00+09:00</published><updated>2023-11-12T20:17:44+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-deploy-npm-package-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/deploy-npm-library/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-access-token&quot;&gt;NPM access token&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-variables&quot;&gt;GitHub Actions variables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC&quot;&gt;배포&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이전 블로그 포스트에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 배포하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 배포하는 방법에서는 아래의 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/deploy-npm-library/&quot; target=&quot;\_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Publishing Node.js packages&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;npm-access-token&quot;&gt;NPM access token&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;이 필요합니다. 다음 링크를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트로 이동한 후, 로그인을 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;로그인한 후, 오른쪽 상단의 프로필 이미지를 선택하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt;를 눌러 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt; 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.png&quot; alt=&quot;NPM access token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt; 페이지에서 오른쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generate New Token&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Classic Token&lt;/code&gt; 버튼을 눌러 새로운 토큰을 생성하는 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.png&quot; alt=&quot;NPM generate new classic token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Access Token&lt;/code&gt; 페이지에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Automation&lt;/code&gt;을 선택하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt;을 입력하여 새로운 토큰을 생성합니다. 저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;For GitHub&lt;/code&gt;이라는 이름으로 새로운 토큰을 생성하였습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.png&quot; alt=&quot;NPM generate new classic token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;새로운 토큰이 생성되면 토큰을 복사할 수 있는 화면이 나옵니다. 해당 토큰을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 사용할 예정이므로 잘 복사해둡니다.&lt;/p&gt; &lt;h2 id=&quot;github-actions-variables&quot;&gt;GitHub Actions variables&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지의 배포 자동화를 하고자 하는 저장소(Repository)로 이동 한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets and variables&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Actions&lt;/code&gt; 메뉴를 선택하면 다음과 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.png&quot; alt=&quot;Set NPM token to GitHub Actions variables&quot; /&gt; &lt;/picture&gt; &lt;p&gt;여기서 오른쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New repository secret&lt;/code&gt; 버튼을 누르면 다음과 같은 화면을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.png&quot; alt=&quot;Add NPM token to GitHub Actions new secret&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt;에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM_TOKEN&lt;/code&gt;을 입력하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secret&lt;/code&gt;은 앞서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트에서 복사한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;을 입력합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h2&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 만들어 봅시다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v${{ steps.semver.outputs.version }}&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3.6.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20.3.0&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;registry-url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://registry.npmjs.org&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm version ${{ steps.semver.outputs.version }} --no-git-tag-version&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag ${{ github.ref_name }} -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin ${{ github.ref_name }} -f&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;NODE_AUTH_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.NPM_TOKEN }}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;좀 더 자세히 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 확인해 보도록 하겠습니다.&lt;/p&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;a href=&quot;https://semver.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;시맨틱 버전(Semantic Version)&lt;/a&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;에 동작합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;시멘틱 버전에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; 문자를 제거한 버전을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 사용할 수 있도록 변수에 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;시멘틱 버전의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;된 코드를 가져옵니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 배포를 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3.6.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20.3.0&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;registry-url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://registry.npmjs.org&apos;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt; 버전으로 업데이트합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm version $ --no-git-tag-version&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 업데이트 한 버전을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서 관리하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit &amp;amp; push&lt;/code&gt; 합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 업데이트 된 소스코드를 최종 코드로 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;를 강제로 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;을 사용하여 현재 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;NODE_AUTH_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;배포&quot;&gt;배포&lt;/h2&gt; &lt;p&gt;이렇게 완성한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포해 봅시다. 다음 명령어를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v0.1.0 git push origin v0.1.0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;로 자동으로 배포된 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트로 이동하면 다음과 같이 패키지가 잘 배포된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.png&quot; alt=&quot;pakcage is deployed to NPM&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 자신이 개발한 JavaScript 라이브러리를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 자동으로 배포하는 방법에 대해서 알아보았습니다. 여러분도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 패키지를 배포하고 관리하고 있는 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/2020/deploy-npm-library/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/2020/deploy-npm-library/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">create-react-app용 커스텀 템플릿</title><link href="https://deku.posstree.com/ko/react/create-react-app/template/" rel="alternate" type="text/html" title="create-react-app용 커스텀 템플릿"/><published>2023-10-21T00:00:00+09:00</published><updated>2023-10-30T15:47:21+09:00</updated><id>https://deku.posstree.com/react/create-react-app/template-ko</id><content type="html" xml:base="https://deku.posstree.com/react/create-react-app/template/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-react-app-%ED%85%9C%ED%94%8C%EB%A6%BF-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1&quot;&gt;create-react-app 템플릿 프로젝트 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98-%EC%BB%A4%EC%8A%A4%ED%85%80%ED%99%94&quot;&gt;React 프로젝트의 커스텀화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#package-lockjson-%ED%8C%8C%EC%9D%BC%EA%B3%BC-node_modules&quot;&gt;package-lock.json 파일과 node_modules&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#template-%ED%8F%B4%EB%8D%94&quot;&gt;template 폴더&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitignore&quot;&gt;gitignore&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#templatejson&quot;&gt;template.json&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%85%8C%EC%8A%A4%ED%8A%B8&quot;&gt;테스트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC-%EC%A4%80%EB%B9%84&quot;&gt;배포 준비&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC&quot;&gt;배포&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;을 사용하면 간단하게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성하는 것이 가능합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션을 제공하여 미리 제작된 템플릿을 활용할 수 있는 기능을 제공하고 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;은 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TypeScript&lt;/code&gt;용 템플릿을 제공하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/tree/main/packages/cra-template-typescript&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;cra-template-typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그래서 우리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-reat-app&lt;/code&gt; 명령어를 사용하여 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TypeScript&lt;/code&gt;가 적용된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 간단하게 생성할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;YOUR_PROJECT_NAME] &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; typescript &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;의 템플릿 기능을 활용하여 나만의 템플릿을 만드는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://create-react-app.dev/docs/custom-templates/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Custom Templates&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;create-react-app-템플릿-프로젝트-생성&quot;&gt;create-react-app 템플릿 프로젝트 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;의 템플릿을 만들기 위해서는 프로젝트를 생성할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cra-template-&lt;/code&gt; prefix를 붙여서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app cra-template-[템플릿명] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cra-template-deku&lt;/code&gt;라는 이름으로 프로젝트를 생성하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app cra-template-deku &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 생성한 템플릿 프로젝트는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM(Node Package Manager)&lt;/code&gt;에 배포할 예정입니다. 따라서 다음 명령어를 실행하여 중복된 이름의 패키지가 배포되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm info cra-template-[템플릿명] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약 다음과 같이 동일한 이름의 패키지가 이미 존재한다면, 다른 이름으로 프로젝트를 생성할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku@0.0.2 | MIT | deps: none | versions: 2 DeKu template &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;create-react-app https://github.com/dev-yakuza/cra-template-deku keywords: react, create-react-app, cra, template dist .tarball: https://registry.npmjs.org/cra-template-deku/-/cra-template-deku-0.0.2.tgz .shasum: 89c7f5797c9bf12cfa45dee3de7c29867cc8e371 .integrity: sha512-9HAfk9OkBVfaJHcoIjuCZhQry64UU4OOlNNmUYvhtXrr0xoxzeq6jo1OgjU97Fav2kkyjmYupgmy4GYNAWWFHQ&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; .unpackedSize: 275.8 kB maintainers: - dev-yakuza &amp;lt;dev.yakuza@gmail.com&amp;gt; dist-tags: latest: 0.0.2 published yesterday by dev-yakuza &amp;lt;dev.yakuza@gmail.com&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt; 에러가 나온다면, 해당 이름으로 프로젝트를 진행하면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm ERR! code E404 npm ERR! 404 Not Found - GET https://registry.npmjs.org/cra-template-yakuza - Not found npm ERR! 404 npm ERR! 404 &lt;span class=&quot;s1&quot;&gt;&apos;cra-template-yakuza@*&apos;&lt;/span&gt; is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this registry. npm ERR! 404 npm ERR! 404 Note that you can also &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;from a npm ERR! 404 tarball, folder, http url, or git url. npm ERR! A &lt;span class=&quot;nb&quot;&gt;complete &lt;/span&gt;log of this run can be found &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;: /.npm/_logs/2023-10-22T06_20_21_911Z-debug-0.log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;react-프로젝트의-커스텀화&quot;&gt;React 프로젝트의 커스텀화&lt;/h2&gt; &lt;p&gt;이렇게 생성된 프로젝트에 필요한 라이브러리를 설치하고, 예제 코드, 폴더 구조 등 자신이 원하는 스타일로 프로젝트를 구성합니다.&lt;/p&gt; &lt;p&gt;저는 다음과 같은 라이브러리를 설치하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;React UI library: &lt;a href=&quot;https://mui.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;MUI&lt;/a&gt;, &lt;a href=&quot;https://emotion.sh/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Emotion&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Component driven development: &lt;a href=&quot;https://storybook.js.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Calling API: &lt;a href=&quot;https://axios-http.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Axios&lt;/a&gt;, &lt;a href=&quot;https://tanstack.com/query/v4/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;React Query&lt;/a&gt;&lt;/li&gt; &lt;li&gt;State management: &lt;a href=&quot;https://recoiljs.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Recoil&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Routing: &lt;a href=&quot;https://reactrouter.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;React Router&lt;/a&gt;&lt;/li&gt; &lt;li&gt;i18n: &lt;a href=&quot;https://github.com/i18next/react-i18next&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-i18next&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 다음과 같이 폴더를 구성하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── public ├── src │   ├── api │   ├── components │   │   ├── atoms │   │   ├── molecules │   │   ├── organisms │   │   ├── pages │   │   └── templates │   ├── data │   ├── locales │   ├── types │   ├── utils │   └── ... └── ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;package-lockjson-파일과-node_modules&quot;&gt;package-lock.json 파일과 node_modules&lt;/h2&gt; &lt;p&gt;템플릿 구성이 완료되었다면, 이제 불필요한 파일과 폴더를 삭제할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더는 더 이상 필요 없으므로 다음 명령어를 실행하여 삭제합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; package-lock.json node_modules &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;template-폴더&quot;&gt;template 폴더&lt;/h2&gt; &lt;p&gt;현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 템플릿으로 제공하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더를 생성하고 모든 파일, 폴더들을 이동 시킬 필요가 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더를 만들고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일 이외에 모든 내용을 해당 폴더로 이동 시킵니다. 그럼 템플릿 프로젝트는 다음과 같은 구조를 가지게 될 것입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json └── template    ├── README.md    ├── .gitignore    ├── public    ├── src    └── tsconfig.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;gitignore&quot;&gt;.gitignore&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더안의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitignore&lt;/code&gt;로 이름을 변경할 필요가 있습니다. 이름을 변경하지 않으면 해당 템플릿을 사용하여 프로젝트를 생성할 때, 다음과 같은 에러가 발생합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: ENOENT: no such file or directory, open &lt;span class=&quot;s1&quot;&gt;&apos;/projects/temp/gitignore&apos;&lt;/span&gt; at Object.openSync &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:fs:592:3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.readFileSync &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:fs:460:35&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at module.exports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/projects/temp/node_modules/react-scripts/scripts/init.js:260:21&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:3:14 at Script.runInThisContext &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:vm:122:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.runInThisContext &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:vm:298:38&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at node:internal/process/execution:83:21 at &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-wrapper&lt;/span&gt;:6:24 at runScript &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/process/execution:82:62&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at evalScript &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/process/execution:104:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; errno: &lt;span class=&quot;nt&quot;&gt;-2&lt;/span&gt;, syscall: &lt;span class=&quot;s1&quot;&gt;&apos;open&apos;&lt;/span&gt;, code: &lt;span class=&quot;s1&quot;&gt;&apos;ENOENT&apos;&lt;/span&gt;, path: &lt;span class=&quot;s1&quot;&gt;&apos;/projects/temp/gitignore&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일명에서 반드시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;을 제거한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitignore&lt;/code&gt;로 변경해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json └── template    ├── README.md    ├── gitignore    ├── public    ├── src    └── tsconfig.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;templatejson&quot;&gt;template.json&lt;/h2&gt; &lt;p&gt;템플릿 프로젝트를 구성하기 위해 설치한 라이브러리들은 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 기록되어 있습니다. 이 내용들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일을 생성하고 해당 파일 안으로 옮길 필요가 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일 안에서 커스텀화 한 부분을 잘라서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일안에 붙여 넣습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslintConfig&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 템플릿 프로젝트를 생성할 때, 특정 명령어(ex&amp;gt; ESLint, Prettier 등)를 추가하였기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt;도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;또한, 개발에 필요한 라이브러리, 프로젝트를 구성하기 위해 여러 라이브러리를 설치하였으므로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devDependencies&lt;/code&gt;도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 설정한 내용(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eslintConfig&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jest&lt;/code&gt;)도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일로 필요한 내용을 옮기고 나면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일은 다음과 같은 내용이 남게 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;cra-template-deku&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;private&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;browserslist&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;0.2%&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;not dead&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;not op_mini all&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;last 1 chrome version&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;last 1 firefox version&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;last 1 safari version&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 파일 폴더 구조는 다음과 같은 형태를 가지게 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json ├── template │   ├── README.md │   ├── gitignore │   ├── public │   ├── src │   └── tsconfig.json └── template.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;용 커스텀 템플릿 준비가 끝났습니다. 이제 이 템플릿이 정상적으로 동작하는지 확인할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;현재 작업중인 폴더 밖에서 다음 명령어를 실행하여 커스텀 템플릿이 잘 동작하는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;YOUR_REACT_PROJECT_NAME] &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; file:./cra-template-deku &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 프로젝트가 잘 생성되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Creating a new React app &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /projects/temp. Installing packages. This might take a couple of minutes. Installing react, react-dom, and react-scripts with cra-template-deku... added 1463 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;2m 242 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details Initialized a git repository. Installing template dependencies using npm... npm WARN deprecated @babel/plugin-proposal-private-property-in-object@7.21.11: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-private-property-in-object instead. added 1139 packages, and changed 4 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;2m 514 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details Removing template package using npm... removed 1 package, and audited 2603 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8s 514 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details 8 vulnerabilities &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2 moderate, 6 high&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; To address all issues &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;including breaking changes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, run: npm audit fix &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; Run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm audit&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details. Created git commit. Success! Created temp at /projects/temp Inside that directory, you can run several commands: npm start Starts the development server. npm run build Bundles the app into static files &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;production. npm &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;Starts the &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;runner. npm run eject Removes this tool and copies build dependencies, configuration files and scripts into the app directory. If you &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;this, you can’t go back! We suggest that you begin by typing: &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;temp npm start Happy hacking! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 위와 같이 프로젝트가 제대로 생성되지 않고 에러가 발생한다면, 해당 에러를 해결할 필요가 있습니다. 해당 에러를 해결하지 않으면 커스텀 템플릿을 배포해도 제대로 동작하지 않게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;배포-준비&quot;&gt;배포 준비&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;용 커스텀 테플릿이 완성되었습니다. 이제 이 프로젝트를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하여 사용할 수 있도록 할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;다음은 배포를 위한 파일들을 추가한 폴더 구조입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── CHANGELOG.md ├── LICENSE ├── README.md ├── package.json ├── template │   ├── README.md │   ├── gitignore │   ├── public │   ├── src │   └── tsconfig.json └── template.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;루트 폴더에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하기 위한 파일입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션으로 프로젝트를 생성할 때에는 이 내용들은 포함되지 않습니다.&lt;/p&gt; &lt;p&gt;반대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더안에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션으로 생성된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트에 포함되게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;배포&quot;&gt;배포&lt;/h2&gt; &lt;p&gt;오픈소스를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하는 방법에 대해서는 다음 블로그 포스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/deploy-npm-library/&quot; target=&quot;_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 때, 사용할 수 있는 커스텀 템플릿을 생성하는 방법에 대해서 알아보았습니다. 여러분도 자신만의 템플릿을 제작하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 때, 자신만의 템플릿을 활용해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="react"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/react/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/react/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>