<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://dev-yakuza.posstree.com/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://dev-yakuza.posstree.com/ko/" rel="alternate" type="text/html"/><updated>2023-07-09T17:21:04+09:00</updated><id>https://dev-yakuza.posstree.com/feed.xml</id><title type="html">dev-yakuza</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">[Flutter] Camera 플러그인을 사용하여 사진 촬영하는 방법</title><link href="https://dev-yakuza.posstree.com/ko/flutter/camera/" rel="alternate" type="text/html" title="[Flutter] Camera 플러그인을 사용하여 사진 촬영하는 방법"/><published>2023-06-29T00:00:00+09:00</published><updated>2023-07-09T17:07:22+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/camera-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/camera/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#프로젝트-생성&quot;&gt;프로젝트 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#camera-플러그인-설치&quot;&gt;Camera 플러그인 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ios-설정&quot;&gt;iOS 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#안드로이드-설정&quot;&gt;안드로이드 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#사진-촬영-기능-구현&quot;&gt;사진 촬영 기능 구현&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#사진-촬영&quot;&gt;사진 촬영&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#사진-촬영-결과-표시&quot;&gt;사진 촬영 결과 표시&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#maindart&quot;&gt;main.dart&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#확인&quot;&gt;확인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 사진 촬영등 카메라 기능을 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용할 필요가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Camera 플러그인: &lt;a href=&quot;https://pub.dev/packages/camera&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/camera&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 사진 촬영하는 방법에 대해서 알아보도록 하겠습니다. 여기서 소개하는 소스코드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 확인하실 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/packages/camera_example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/packages/camera_example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;프로젝트-생성&quot;&gt;프로젝트 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 사진 촬영하는 방법을 알아보기 위해, 다음 명령어를 사용하여 새로운 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 프로젝트를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter create camera_example &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;camera-플러그인-설치&quot;&gt;Camera 플러그인 설치&lt;/h2&gt; &lt;p&gt;새로운 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 프로젝트가 생성되었다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add camera &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;ios-설정&quot;&gt;iOS 설정&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하기 위해서는 권한 설정을 해야 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ios/Runner/Info.plist&lt;/code&gt; 파일을 열고 다음과 같이 권한을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSCameraUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Camera permission is required.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;NSMicrophoneUsageDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Microphone permission is required.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;안드로이드-설정&quot;&gt;안드로이드 설정&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인은 안드로이드 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SDK 21&lt;/code&gt; 이상만을 지원합니다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 파일을 열고 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minSdkVersion&lt;/code&gt;을 수정해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minSdkVersion&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h2 id=&quot;사진-촬영-기능-구현&quot;&gt;사진 촬영 기능 구현&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플로그인을 사용하여 사진을 촬영하는 화면과 촬영한 사진을 보여주는 화면을 구현하는 방법에 대해서 소개하겠습니다.&lt;/p&gt; &lt;h3 id=&quot;사진-촬영&quot;&gt;사진 촬영&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 사진 촬영하는 화면을 구현하기 위해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/camera_screen.dart&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:camera/camera.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:camera_example/photo_preview.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter/material.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CameraScreen&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatefulWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CameraScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CameraScreenState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;_CameraScreenState&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CameraScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_isCameraReady&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availableCameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResolutionPreset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_isCameraReady&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_onTakePicture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takePicture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialPageRoute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;builder:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhotoPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;imagePath:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Take a photo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SafeArea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;children:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expanded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_isCameraReady&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;grey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EdgeInsets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_onTakePicture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Take a photo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하는 코드를 좀 더 자세히 살펴보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availableCameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cameras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResolutionPreset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_isCameraReady&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;availableCameras&lt;/code&gt; 함수를 사용하여 카메라가 사용 가능한지 확인합니다. 카메라가 사용 가능하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraController&lt;/code&gt;를 초기화합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Expanded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_isCameraReady&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;grey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 초기화한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraController&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인이 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraPreview&lt;/code&gt; 위젯을 사용하여 카메라 촬영 화면을 구성합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_onTakePicture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_cameraController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takePicture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialPageRoute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;builder:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhotoPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;imagePath:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraController&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;takePicture&lt;/code&gt; 함수를 사용하여 사진 촬영 기능을 구현합니다. 사진 촬영된 결과물은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XFile&lt;/code&gt;로 반환되며, 이렇게 반환된 사진 이미지의 경로를 사진 촬영 결과물을 표시하기 위한 화면으로 전달합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h3 id=&quot;사진-촬영-결과-표시&quot;&gt;사진 촬영 결과 표시&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 촬영한 사진을 화면에 표시하기 위해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/photo_preview.dart&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;dart:io&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter/material.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PhotoPreview&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhotoPreview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Preview&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;grey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인으로 촬영한 사진의 경로를 전달받으므로, 전달받은 사진의 경로를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.file&lt;/code&gt;을 사용하여 표시합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;maindart&quot;&gt;main.dart&lt;/h3&gt; &lt;p&gt;이렇게 만든 화면을 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/main.dart&lt;/code&gt; 파일을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:camera_example/camera_screen.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter/material.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyApp&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MaterialApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Camera Example&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;theme:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThemeData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;colorScheme:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ColorScheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromSeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;seedColor:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deepPurple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;useMaterial3:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;home:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CameraScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;확인&quot;&gt;확인&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 사진 촬영 기능을 구현해보았습니다. 이제 앱을 실행하여 사진 촬영 기능이 정상적으로 동작하는지 확인해보겠습니다.&lt;/p&gt; &lt;p&gt;카메라 기능은 시뮬레이터(에뮬레이터)에서는 사용할 수 없으므로, 실제 단말기를 사용하여 앱을 실행해야 합니다. 앱을 실행하면 다음과 같이 카메라의 권한을 물어보는 화면이 표시됩니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/camera_permission.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/camera_permission.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/camera/camera_permission.png&quot; alt=&quot;Flutter Camera plugin - camera permission on iOS&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OK&lt;/code&gt;를 눌러 권한을 설정하면, 다음과 같이 마이크에 대한 권한을 물어보는 화면이 표시됩니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/microphone_permission.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/microphone_permission.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/camera/microphone_permission.png&quot; alt=&quot;Flutter Camera plugin - microphone permission on iOS&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;p&gt;모든 권한을 설정하면 다음과 같이 카메라 촬영 화면이 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/take_photo_view.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/take_photo_view.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/camera/take_photo_view.png&quot; alt=&quot;Flutter Camera plugin - take a photo view on iOS&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;마지막으로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Take a photo&lt;/code&gt; 버튼을 눌러 사진을 촬영하면 다음과 같이 촬영된 사진이 화면에 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/image_preview.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/camera/image_preview.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/camera/image_preview.png&quot; alt=&quot;Flutter Camera plugin - image preview on iOS&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 사진 촬영 기능을 구현하는 방법에 대해서 알아보았습니다. 공식 문서에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Camera&lt;/code&gt; 플러그인을 사용하여 사진 촬영 기능을 구현하는 방법에 대해서 소개하고 있으니, 참고하시면 좋을 것 같습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식문서: &lt;a href=&quot;https://docs.flutter.dev/cookbook/plugins/picture-using-camera&quot;&gt;Take a picture using the camera&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Git] 폴더명과 파일명의 대소문자 구분하기</title><link href="https://dev-yakuza.posstree.com/ko/git/case-sensitive/" rel="alternate" type="text/html" title="[Git] 폴더명과 파일명의 대소문자 구분하기"/><published>2023-06-21T00:00:00+09:00</published><updated>2023-06-26T15:59:44+09:00</updated><id>https://dev-yakuza.posstree.com/git/case-sensitive-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/git/case-sensitive/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ignorecase&quot;&gt;ignorecase&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;을 사용하여 프로젝트를 관리할 때, 잘못하여 파일명 또는 폴더명을 소문자로 또는 대문자로 작성한 경우가 발생할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── test_File.txt 0 directories, 1 file &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이런 경우, 다음과 같이 파일명 또는 폴더명을 수정하고&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── test_file.txt 0 directories, 1 file &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;커밋을 시도하지만, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; 명령어로 확인을 하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서 이 변경을 인식하지 못하는 경우가 발생할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status On branch main nothing to commit, working tree clean &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 이와 같이 대소문자 인식을 하지 못하는 문제를 해결하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;의 설정을 수정하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;ignorecase&quot;&gt;ignorecase&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ignorecase&lt;/code&gt;라는 설정을 제공하고 있습니다. 이 설정은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서 파일명 또는 폴더명을 인식할 때 대소문자를 구분할 것인지를 설정하는 것입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ignorecase&lt;/code&gt;는 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;가 설정되어 있습니다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;은 기본적으로 대소문자를 구분하여 관리합니다. 하지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git init&lt;/code&gt;할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ignorecase&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; 설정할 때가 발생합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://www.git-scm.com/docs/git-config/2.14.6#Documentation/git-config.txt-coreignoreCase&quot; rel=&quot;nofollow noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://www.git-scm.com/docs/git-config/2.14.6#Documentation/git-config.txt-coreignoreCase&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이처럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;이 대소문자를 구분하지 못하는 문제가 발생한다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;이 대소문자를 구분할 수 있도록 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config core.ignorecase &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;이 대소문자를 구분하는지 확인해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 이전과는 다르게 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;이 대소문자를 잘 구분하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;On branch main Untracked files: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git add &amp;lt;file&amp;gt;...&quot;&lt;/span&gt; to include &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;what will be committed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; test_file.txt nothing added to commit but untracked files present &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; to track&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서 대소문자를 구분하는 방법에 대해서 알아보았습니다. 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ignorecase&lt;/code&gt;가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;이므로 이 문제가 발생하지 않지만, 혹시 이와 같은 문제가 발생한다면, 이 블로그를 참고하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ignorecase&lt;/code&gt;의 설정을 변경해보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="git"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/git/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/git/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[macOS] 명령어를 사용하여 macOS에서 슬립 모드 비활성화하기</title><link href="https://dev-yakuza.posstree.com/ko/environment/disable_sleep_mode_on_macos/" rel="alternate" type="text/html" title="[macOS] 명령어를 사용하여 macOS에서 슬립 모드 비활성화하기"/><published>2023-06-18T00:00:00+09:00</published><updated>2023-06-20T17:05:48+09:00</updated><id>https://dev-yakuza.posstree.com/environment/disable-sleep-mode-on-macos-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/environment/disable_sleep_mode_on_macos/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#슬립-모드-비활성화&quot;&gt;슬립 모드 비활성화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;는 기본적으로 슬립 모드가 설정되어 있어 일정 시간이 지나면 자동으로 슬립 모드로 전환됩니다. 하지만, 무언가를 설치할 때 또는 빌드할 때 등 일정 시간이 지나도 슬립 모드로 전환되지 않도록 하고 싶은 경우가 있습니다.&lt;/p&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;에서 명령어를 사용하여 슬립 모드를 비활성화하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;슬립-모드-비활성화&quot;&gt;슬립 모드 비활성화&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;는 전원 설정 관리를 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pmset&lt;/code&gt; 명령어를 제공하고 있습니다. 다음 명령어를 실행하면 현재 전원 설정 내용을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pmset &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같은 결과를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System-wide power settings: SleepDisabled 0 Currently &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;use: lidwake 1 lowpowermode 0 standbydelayhigh 86400 standbydelaylow 10800 standby 1 proximitywake 1 ttyskeepawake 1 hibernatemode 3 powernap 1 gpuswitch 2 hibernatefile /var/vm/sleepimage highstandbythreshold 50 displaysleep 10 womp 1 networkoversleep 0 &lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;1 acwake 0 halfdim 1 tcpkeepalive 1 disksleep 10 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;슬립 모드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SleepDisabled&lt;/code&gt; 항목으로 확인할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;이면 슬립 모드가 활성화되어 있고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;이면 슬립 모드가 비활성화되어 있습니다.&lt;/p&gt; &lt;p&gt;그럼 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pmset&lt;/code&gt; 명령어를 사용하여 슬립 모드를 비활성화하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SleepDisabled&lt;/code&gt; 항목을 변경하는 방법에 대해서 알아보겠습니다. 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pmset&lt;/code&gt; 명령어를 실행하여 슬립 모드를 비활성화할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pmset &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; disablesleep 1 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 다시 다음 명령어를 실행하여 슬립 모드가 비활성화되었는지 확인해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pmset &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SleepDisabled&lt;/code&gt; 항목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;로 변경되어 있는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;System-wide power settings: SleepDisabled 1 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;슬립 모드는 배터리에 영향을 주므로, 필요한 경우에만 슬립 모드를 비활성화하고 필요하지 않은 경우에는 다음 명령어를 실행하여 슬립 모드를 활성화하는 것이 좋습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pmset &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; disablesleep 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;에서 명령어를 사용하여 슬립 모드를 비활성화하는 방법에 대해서 알아보았습니다. 슬립 모드를 변경할 필요가 있을 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pmset&lt;/code&gt; 명령어를 사용하여 간단하게 슬립 모드를 변경해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/environment/macOS/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/environment/macOS/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] build_runner와 Mockito를 사용하여 lib 폴더에 Mock 파일 생성하기</title><link href="https://dev-yakuza.posstree.com/ko/flutter/make_mock_in_lib/" rel="alternate" type="text/html" title="[Flutter] build_runner와 Mockito를 사용하여 lib 폴더에 Mock 파일 생성하기"/><published>2023-06-14T00:00:00+09:00</published><updated>2023-07-03T20:19:49+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/make_mock_in_lib-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/make_mock_in_lib/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lib-폴더에서-mock-생성하기&quot;&gt;Lib 폴더에서 Mock 생성하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#buildyaml-파일&quot;&gt;build.yaml 파일&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt; 패키지를 사용하여 개발에 필요한 코드를 생성하곤 합니다. 특히, 테스트 코드에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mockito&lt;/code&gt;를 사용하여 테스트용 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 제작할 때 자주 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;build_runner: &lt;a href=&quot;https://pub.dev/packages/build_runner&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/build_runner&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Mockito: &lt;a href=&quot;https://pub.dev/packages/mockito&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/mockito&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mockito&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt; 파일을 생성하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;lib-폴더에서-mock-생성하기&quot;&gt;Lib 폴더에서 Mock 생성하기&lt;/h2&gt; &lt;p&gt;보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mockito&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 만들때에는 테스트용이므로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안에 파일에서는 사용할 수 없습니다. 하지만, 저처럼 다른 사용자를 위한 패키지를 만들때에는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안 파일에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 사용할 때가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/run_with_network_images/blob/main/lib/src/run_with_network_images.dart#LL10C8-L10C8&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;run_with_network_images/lib/src/run_with_network_images.dart&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@GenerateMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpClientRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpClientResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StreamSubscription&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runWithNetworkImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpOverrides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runZoned&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;createHttpClient:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_createMockImageHttpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 이와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 생성하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;buildyaml-파일&quot;&gt;build.yaml 파일&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.yaml&lt;/code&gt; 파일로 여러 설정을 할 수 있습니다. 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.yaml&lt;/code&gt; 파일을 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안에 있는 파일에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 생성할 수 있습니다.&lt;/p&gt; &lt;p&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안에 있는 파일에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 생성하기 위해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./build.yaml&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;builders&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mockito|mockBuilder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;generate_for&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;lib/src/run_with_network_images.dart&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;위와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mockito&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt; 파일을 만들 대상에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더 안에 파일을 지정하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더 안에 있는 파일에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 생성할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mockito&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더안에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mock&lt;/code&gt;을 생성하는 방법에 대해서 알아보았습니다. 이와 같은 일이 자주 있지는 않지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.yaml&lt;/code&gt; 파일을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_runner&lt;/code&gt;를 설정할 수 있다는 점을 알아두면 좋을거 같습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Trufflehog] Secrets와 Credentials 검사</title><link href="https://dev-yakuza.posstree.com/ko/code_quality/trufflehog/" rel="alternate" type="text/html" title="[Trufflehog] Secrets와 Credentials 검사"/><published>2023-06-10T00:00:00+09:00</published><updated>2023-06-27T16:43:20+09:00</updated><id>https://dev-yakuza.posstree.com/code_quality/trufflehog-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/code_quality/trufflehog/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#trufflehog&quot;&gt;TruffleHog&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#trufflehog-설치&quot;&gt;TruffleHog 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#trufflehog-실행&quot;&gt;TruffleHog 실행&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-acionts&quot;&gt;GitHub Acionts&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitlab-ci&quot;&gt;GitLab CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;로컬에서 개발을 하다보면 서버, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AWS&lt;/code&gt; 등의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;비밀 키(Secrets)&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;을 사용하게 됩니다. 이때, 실수로 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;를 커밋(Commit)하게 되면 보안에 매우 취약해지게 됩니다.&lt;/p&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;을 실행하여 커밋(Commit)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;가 포함되었는지 확인하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;trufflehog&quot;&gt;TruffleHog&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TruffleHog&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;700&lt;/code&gt;개 이상의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets / Credentials&lt;/code&gt; 검사기를 통해 코드에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets / Credentials&lt;/code&gt;가 포함되어 있는지 확인하는 도구입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/trufflesecurity/trufflehog&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;TruffleHog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;trufflehog-설치&quot;&gt;TruffleHog 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TruffleHog&lt;/code&gt;는 다음과 같이 다양한 방법으로 설치할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 1. MacOS users&lt;/span&gt; brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;trufflesecurity/trufflehog/trufflehog &lt;span class=&quot;c&quot;&gt;# 2. Docker&lt;/span&gt; docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/pwd&quot;&lt;/span&gt; trufflesecurity/trufflehog:latest github &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt; https://github.com/trufflesecurity/test_keys &lt;span class=&quot;c&quot;&gt;# 3. Docker for M1 and M2 Mac&lt;/span&gt; docker run &lt;span class=&quot;nt&quot;&gt;--platform&lt;/span&gt; linux/arm64 &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/pwd&quot;&lt;/span&gt; trufflesecurity/trufflehog:latest github &lt;span class=&quot;nt&quot;&gt;--repo&lt;/span&gt; https://github.com/trufflesecurity/test_keys &lt;span class=&quot;c&quot;&gt;# 4. Binary releases&lt;/span&gt; Download and unpack from https://github.com/trufflesecurity/trufflehog/releases &lt;span class=&quot;c&quot;&gt;# 5. Compile from source&lt;/span&gt; git clone https://github.com/trufflesecurity/trufflehog.git &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;trufflehog&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; go &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;trufflehog-실행&quot;&gt;TruffleHog 실행&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TruffleHog&lt;/code&gt;는 다음과 같이 다양한 방법으로 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 1. Scan a repo for only verified secrets&lt;/span&gt; trufflehog git https://github.com/trufflesecurity/test_keys &lt;span class=&quot;nt&quot;&gt;--only-verified&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 2. Scan a GitHub Org for only verified secrets&lt;/span&gt; trufflehog github &lt;span class=&quot;nt&quot;&gt;--org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;trufflesecurity &lt;span class=&quot;nt&quot;&gt;--only-verified&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 3. Scan a GitHub Repo for only verified keys and get JSON output&lt;/span&gt; trufflehog git https://github.com/trufflesecurity/test_keys &lt;span class=&quot;nt&quot;&gt;--only-verified&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--json&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 4. Scan an S3 bucket for verified keys&lt;/span&gt; trufflehog s3 &lt;span class=&quot;nt&quot;&gt;--bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;bucket name&amp;gt; &lt;span class=&quot;nt&quot;&gt;--only-verified&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 5. Scan a Github Repo using SSH authentication in docker&lt;/span&gt; docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.ssh:/root/.ssh:ro&quot;&lt;/span&gt; trufflesecurity/trufflehog:latest git ssh://github.com/trufflesecurity/test_keys &lt;span class=&quot;c&quot;&gt;# 6. Scan individual files or directories&lt;/span&gt; trufflehog filesystem path/to/file1.txt path/to/file2.txt path/to/dir &lt;span class=&quot;c&quot;&gt;# 7. Scan GCS buckets for verified secrets.&lt;/span&gt; trufflehog gcs &lt;span class=&quot;nt&quot;&gt;--project-id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;project-ID&amp;gt; &lt;span class=&quot;nt&quot;&gt;--cloud-environment&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--only-verified&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;github-acionts&quot;&gt;GitHub Acionts&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;을 실행하여, 커밋(Commit)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;가 포함되었는지 확인할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/scan_secrets.yml&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Scan secrets&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ScanSecrets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Scan secrets&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Scan secrets&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;trufflesecurity/trufflehog@main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;extra_args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--only-verified&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 생성하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull Request&lt;/code&gt;를 생성할 때마다 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;을 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;가 포함되었는지 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;gitlab-ci&quot;&gt;GitLab CI&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;을 실행하여, 커밋(Commit)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;가 포함되었는지 확인할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scan_secrets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scan&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;golang:latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone https://github.com/trufflesecurity/trufflehog.git&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd trufflehog; go install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd ..&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;trufflehog git file://. --only-verified --fail --no-update --since-commit=main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;merge_requests&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;를 생성하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull Request&lt;/code&gt;를 생성할 때마다 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;을 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credentials&lt;/code&gt;가 포함되었는지 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;를 사용하여 커밋(Commit)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credencials&lt;/code&gt;이 포함되었는지 확인하는 방법에 대해서 알아보았습니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;를 실행하는 방법에 대해서도 알아보았습니다.&lt;/p&gt; &lt;p&gt;여러분도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trufflehog&lt;/code&gt;를 적용하여 커밋(Commit)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credencials&lt;/code&gt;이 포함되었는지 확인해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/trufflehog/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/code_quality/trufflehog/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Dart] 테스트에서 print로 출력한 내용 확인하기</title><link href="https://dev-yakuza.posstree.com/ko/flutter/dart/run_with_print/" rel="alternate" type="text/html" title="[Dart] 테스트에서 print로 출력한 내용 확인하기"/><published>2023-05-20T00:00:00+09:00</published><updated>2023-06-09T13:03:17+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/dart/run_with_network_images-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/dart/run_with_print/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#runwithprint-패키지-설치&quot;&gt;runwithprint 패키지 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#runwithprint-패키지-사용&quot;&gt;runwithprint 패키지 사용&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;로 앱을 개발하다보면 테스트 코드에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; 함수의 결과값을 확인해야할 때가 있습니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;의 테스트 코드에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; 함수로 출력되는 값을 확인하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://pub.dev/packages/run_with_print&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/run_with_print&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;run_with_print-패키지-설치&quot;&gt;run_with_print 패키지 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 사용하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; run_with_print &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 프로젝트라면 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; run_with_print &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;run_with_print-패키지-사용&quot;&gt;run_with_print 패키지 사용&lt;/h2&gt; &lt;p&gt;테스트 코드에서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 사용하여, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; 함수의 출력값을 테스트할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ignore_for_file: avoid_print&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:run_with_print/run_with_print.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:test/test.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Check print contents&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runWithPrint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;test log&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;test log&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; 함수를 가지고 있는 함수나 위젯을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runWithPrint&lt;/code&gt; 함수로 감싸면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; 함수로 출력되는 내용을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runWithPrint&lt;/code&gt; 함수의 인자로 전달된 변수를 통해 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;의 테스트 코드에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;로 출력되는 내용을 검사하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지는 제가 개발한 패키지 입니다. 만약, 피드백이나 개선할 점이 있다면, &lt;a href=&quot;https://github.com/dev-yakuza/run_with_print&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;GitHub의 리포지토리&lt;/a&gt;에서 알려주세요.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] Image.network 테스트하기</title><link href="https://dev-yakuza.posstree.com/ko/flutter/run_with_network_images/" rel="alternate" type="text/html" title="[Flutter] Image.network 테스트하기"/><published>2023-05-19T00:00:00+09:00</published><updated>2023-06-08T17:37:44+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/run_with_print-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/run_with_network_images/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#runwithnetworkimages-패키지&quot;&gt;runwithnetworkimages 패키지&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#runwithnetworkimages-패키지-설치&quot;&gt;runwithnetworkimages 패키지 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#runwithnetworkimages-패키지-사용&quot;&gt;runwithnetworkimages 패키지 사용&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 외부 이미지를 불러오기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용합니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용하여 이미지를 표시하는 위젯을 테스트하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;run_with_network_images-패키지&quot;&gt;run_with_network_images 패키지&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용하는 위젯을 테스트하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;400&lt;/code&gt; 에러가 발생하여 테스트를 제대로 수행할 수 없습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dart:io&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpClient&lt;/code&gt;를 사용하고 있는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 위젯 테스트에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dart:io&lt;/code&gt;는 항상 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;400&lt;/code&gt; 에러를 반환하기 때문에 이런 문제가 발생합니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;의 테스트 코드에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지를 사용하면 이런 문제를 해결할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://pub.dev/packages/run_with_network_images&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/run_with_network_images&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;run_with_network_images-패키지-설치&quot;&gt;run_with_network_images 패키지 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지를 사용하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; run_with_network_images &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;run_with_network_images-패키지-사용&quot;&gt;run_with_network_images 패키지 사용&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용하는 위젯을 테스트하기 위해서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runWithNetworkImages&lt;/code&gt; 함수를 사용하여 다음과 같이 테스트 코드를 수정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter/material.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:flutter_test/flutter_test.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:run_with_network_images/run_with_network_images.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Network image is rendered in widget test&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runWithNetworkImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;https://dev-yakuza.posstree.com/assets/images/yakuza.jpg&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용하는 위젯의 테스트 코드를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;await runWithNetworkImages(() async {});&lt;/code&gt;로 감싸면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;400&lt;/code&gt; 에러가 발생하지 않고 테스트를 진행할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;의 테스트 코드에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용하는 위젯을 테스트하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용한다면 반드시 발생하는 문제이므로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Image.network&lt;/code&gt;를 사용한다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지 사용을 추천합니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_network_images&lt;/code&gt; 패키지는 제가 만든 패키지 입니다. 만약, 피드백이나 개선할 점이 있다면, &lt;a href=&quot;https://github.com/dev-yakuza/run_with_network_images&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;GitHub의 리포지토리&lt;/a&gt;에서 알려주세요.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Dart] 명령어(CLI) 툴 만들기</title><link href="https://dev-yakuza.posstree.com/ko/flutter/dart/create_cli_tool/" rel="alternate" type="text/html" title="[Dart] 명령어(CLI) 툴 만들기"/><published>2023-05-18T00:00:00+09:00</published><updated>2023-06-05T12:36:27+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/dart/create_cli_tool-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/dart/create_cli_tool/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#패키지-프로젝트-생성&quot;&gt;패키지 프로젝트 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#args-패키지-설치&quot;&gt;args 패키지 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#명령어-구현&quot;&gt;명령어 구현&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#명령어-추가&quot;&gt;명령어 추가&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#예제-작성&quot;&gt;예제 작성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#테스트-코드-작성&quot;&gt;테스트 코드 작성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#명령어-테스트&quot;&gt;명령어 테스트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#빌드&quot;&gt;빌드&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pubdev에-배포&quot;&gt;pub.dev에 배포&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#공식-문서-참고&quot;&gt;공식 문서 참고&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;로 앱을 개발하다보면, 명령어(CLI - Command Line Interface)로 무언가를 하는 기능이 필요할 때가 있습니다. 예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트할 때, 직접 수정하는 것도 가능하지만, 다음과 같이 명령어로 업데이트를 하도록 만들 수 도 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 2.5.7 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;를 사용하여 명령어(CLI) 툴을 개발하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;패키지-프로젝트-생성&quot;&gt;패키지 프로젝트 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;를 사용해서 명령어 툴을 만들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt; 패키지 프로젝트를 생성할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포할 필요가 없다면, 기존 프로젝트에서 명령어 툴을 제작하면 되므로 이 부분은 건너뛰어도 됩니다.&lt;/p&gt; &lt;p&gt;그럼 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt; 패키지를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# dart create --template=package [PACKAGE_NAME]&lt;/span&gt; dart create &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;package cli_example &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;프로젝트가 생성이 완료되면 다음과 같이 폴더와 파일들이 생성되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cli_example ├── CHANGELOG.md ├── README.md ├── analysis_options.yaml ├── example │   └── cli_example_example.dart ├── lib │   ├── cli_example.dart │   └── src │   └── cli_example_base.dart ├── pubspec.lock ├── pubspec.yaml └── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; └── cli_example_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;args-패키지-설치&quot;&gt;args 패키지 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; 패키지는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;로 명령어(CLI)를 제작하는 것을 도와주는 패키지입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;args: &lt;a href=&quot;https://pub.dev/packages/args&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/args&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; 패키지를 사용하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; 패키지를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub add args &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 프로젝트라면 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add args &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;명령어-구현&quot;&gt;명령어 구현&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;로 명령어(CLI)를 만들기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; 패키지의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; 클래스를 사용할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/src/cli_example_base.dart&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:args/command_runner.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Echo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;echo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Echo option&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addOption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;help:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;A message to echo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ignore: avoid_print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Message: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; 클래스를 상속받으면 3개의 멤버를 오버라이드(Override)해야 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;은 해당 명령어의 이름이고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;은 명령어의 설명문입니다. 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run()&lt;/code&gt; 함수는 해당 명령어를 구현하는 부분입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; 클래스에서는 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argParse&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argResults&lt;/code&gt; 변수를 사용할 수 있습니다. 생성자(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo()&lt;/code&gt;)에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argParser&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addOption&lt;/code&gt;을 통해 해당 명령어의 필요한 옵션명(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt;)과 설명문(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt;)을 추가하였습니다.&lt;/p&gt; &lt;p&gt;그리고 명령어의 구현 부분인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run()&lt;/code&gt; 함수에서 명령어 옵션에 설정된 값을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argResults?[&apos;message&apos;]&lt;/code&gt;을 통해 할당받았으며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;를 사용하여 해당 내용을 출력하도록 하였습니다.&lt;/p&gt; &lt;p&gt;실제 명령어를 구현할 때에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argParser&lt;/code&gt;에 다양한 옵션을 추가할 것이고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run()&lt;/code&gt; 함수에서 옵션에 따른 다양한 기능을 구현하게 될 것입니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h2 id=&quot;명령어-추가&quot;&gt;명령어 추가&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더 하위에 구현한 내용은, 패키지를 설치하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt; 파일안에서 패키지의 내용을 불러와 사용할 수 있습니다. 즉, 우리가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt;는 명령어로써 사용이 불가능하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dart&lt;/code&gt; 파일안에서만 사용이 가능합니다.&lt;/p&gt; &lt;p&gt;우리가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.dart&lt;/code&gt; 파일이 아닌 명령어로 사용할 수 있게 하려면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; 폴더를 만들고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어를 실행하는 파일을 만들어야 합니다.&lt;/p&gt; &lt;p&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin/cli_example.dart&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:args/command_runner.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:cli_example/cli_example.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cli_example&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dart CLI example&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;사용자가 명령어를 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; 함수가 실행되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arguments&lt;/code&gt;에 사용자가 입력한 옵션과 값이 설정됩니다.&lt;/p&gt; &lt;p&gt;이 파일에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt; 패키지를 사용하여 우리가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어를 등록(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addCommand&lt;/code&gt;)하고, 사용자가 입력한 값(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arguments&lt;/code&gt;)와 함께 실행(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt;)하도록 구성되었습니다.&lt;/p&gt; &lt;p&gt;이렇게 만든 파일은 다음과 같은 명령어로 실행이 가능합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart run cli_example &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같은 결과를 얻을 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Message: &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; 클래스를 사용하였기 때문에, 다음 명령어과 같은 명령어를 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart run cli_example &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 우리가 작성한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt; 메시지가 잘 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Dart CLI example Usage: cli_example &amp;lt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments] Global options: &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt; Print this usage information. Available commands: &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Echo option Run &lt;span class=&quot;s2&quot;&gt;&quot;cli_example help &amp;lt;command&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information about a command. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;물론, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt; 메시지도 출력이 가능합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart run cli_example &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같은 결과를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Echo option Usage: cli_example &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments] &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt; Print this usage information. &lt;span class=&quot;nt&quot;&gt;--message&lt;/span&gt; A message to &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;예제-작성&quot;&gt;예제 작성&lt;/h2&gt; &lt;p&gt;우리가 만든 명령어 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하기 위해서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어를 사용하는 예제를 만들어야 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example/cli_example_example.dart&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:args/command_runner.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:cli_example/cli_example.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cli_example&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dart CLI example&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)..&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;echo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;--message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우리는 현재 명령어 툴을 만들고 있기 때문에 사실 예제를 작성할 필요는 없습니다. 이 파일은 반대로 사용자에게 혼란을 줄 수 있으므로 제거하는 것을 추천합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h2 id=&quot;테스트-코드-작성&quot;&gt;테스트 코드 작성&lt;/h2&gt; &lt;p&gt;명령어를 실행하였을 때, 잘 동작하는지 확인하기 위한 테스트 코드를 작성할 수 있습니다. 테스트 코드를 작성하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/cli_example_test.dart&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:args/command_runner.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:cli_example/cli_example.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:run_with_print/run_with_print.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:test/test.dart&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;test&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;test&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)..&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Echo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Echo test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runWithPrint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;echo&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;--message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Message: test message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;우리가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Echo&lt;/code&gt; 명령어는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;를 사용하여 결과를 출력합니다. 이를 확인하기 위해서 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지를 설치하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; run_with_print &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;설치가 완료되었다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runWithPrint&lt;/code&gt; 함수를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;로 출력되는 내용을 체크하였습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_with_print&lt;/code&gt; 패키지에 대해서는 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/dart/run_with_print/&quot; target=&quot;_blank&quot;&gt;[Dart] 테스트에서 print로 출력한 내용 확인하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 다음 명령어를 실행하여 테스트 코드를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart &lt;span class=&quot;nb&quot;&gt;test test&lt;/span&gt;/cli_example_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 테스트가 잘 통과하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:00 +1: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;명령어-테스트&quot;&gt;명령어 테스트&lt;/h2&gt; &lt;p&gt;이제 이렇게 만든 명령어가 제대로 동작하는지 확인해 봅시다. 우선 명령어를 구현한 코드를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에 올립니다. 그리고 다음 명령어를 실행하여 명령어를 활성화 시킵니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub global activate &lt;span class=&quot;nt&quot;&gt;--source&lt;/span&gt; git https://github.com/dev-yakuza/cli_example &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에 올린 코드는 다음과 같이 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub global run cli_example &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test messsage&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 명령어가 잘 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Message: &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;messsage &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;빌드&quot;&gt;빌드&lt;/h2&gt; &lt;p&gt;이렇게 만든 명령어는 독립적인 실행 파일(Standalone executable)로 만들 수 있습니다. 다음 명령어를 실행하여 명령어를 독립적인 실행 파일로 만듭니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart compile exe bin/cli_example.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cli_example.exe&lt;/code&gt; 파일이 생성된 것을 확인할 수 있습니다. 이렇게 생성된 명령어 파일은 다음과 같이 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/cli_example.exe &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test message&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;명령어 확장자가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exe&lt;/code&gt;이지만, 이 명령어 파일은 윈도우뿐만 아니라, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt; 그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linux&lt;/code&gt;를 지원합니다.&lt;/p&gt; &lt;h2 id=&quot;pubdev에-배포&quot;&gt;pub.dev에 배포&lt;/h2&gt; &lt;p&gt;이렇게 만든 명령어 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하여 사용할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 패키지를 배포하는 방법에 대해서는 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/publish_pub_package/&quot; target=&quot;_blank&quot;&gt;[Flutter] 패키지를 pub.dev에 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;공식-문서-참고&quot;&gt;공식 문서 참고&lt;/h2&gt; &lt;p&gt;다음은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;로 명령어를 만들때, 도움이 되는 공식 문서입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Get started: Command-line and server apps&lt;/code&gt;: &lt;a href=&quot;https://dart.dev/tutorials/server/get-started&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://dart.dev/tutorials/server/get-started&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Write command-line apps&lt;/code&gt;: &lt;a href=&quot;https://dart.dev/tutorials/server/cmdline&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://dart.dev/tutorials/server/cmdline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;args package&lt;/code&gt;: &lt;a href=&quot;https://pub.dev/documentation/args/latest/index.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/documentation/args/latest/index.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;를 사용하여 명령어(CLI) 툴을 만드는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;로 앱을 개발하거나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;로 프로젝트를 개발할 때, 특정 명령어를 만들어야 할 때가 있습니다. 이때, 이번 포스트를 참고하여 명령어(CLI) 툴을 만들어 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Dart] Bull 패키지를 사용하여 pubspec.yaml 파일의 version 업데이트하기</title><link href="https://dev-yakuza.posstree.com/ko/flutter/dart/update_pubspec_version/" rel="alternate" type="text/html" title="[Dart] Bull 패키지를 사용하여 pubspec.yaml 파일의 version 업데이트하기"/><published>2023-05-17T00:00:00+09:00</published><updated>2023-06-03T20:15:06+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/dart/update_pubspec_version-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/dart/update_pubspec_version/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#bull-패키지&quot;&gt;Bull 패키지&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#bull-패키지-설치&quot;&gt;Bull 패키지 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#version-업데이트&quot;&gt;version 업데이트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;로 앱을 개발하다보면, 공통 라이브러리 또는 오픈소스화를 위해 패키지(Package)를 만들어서 &lt;a href=&quot;https://pub.dev/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/&lt;/a&gt;에 배포해야할 때가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/publish_pub_package/&quot; target=&quot;_blank&quot;&gt;[Flutter] 패키지를 pub.dev에 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트해야합니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 사용하여 명령어(CLI - Command Line Interface)로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;bull-패키지&quot;&gt;Bull 패키지&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;를 개발을 좀 더 편하게 도와주는 명령어들을 모아둔 패키지입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bull: &lt;a href=&quot;https://pub.dev/packages/bull&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/bull&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 패키지의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub_version&lt;/code&gt; 명령어를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;bull-패키지-설치&quot;&gt;Bull 패키지 설치&lt;/h2&gt; &lt;p&gt;그럼 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하기 위해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 설치해 봅시다. 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; bull &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 프로젝트인 경우, 다음 명령어를 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; bull &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또는, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일을 열고 직접 추가할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... dev_dependencies: bull: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;version] ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 일시적으로 사용하고 싶은 경우, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 활성화할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub global activate bull &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;version-업데이트&quot;&gt;version 업데이트&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 설치하였다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; build dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; patch dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; minor dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; major dart run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 2.5.7 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--version&lt;/code&gt; 옵션에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;major&lt;/code&gt; 및 특정 버전을 설정할 수 있습니다. 만약, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;global activate&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 사용하는 경우, 다음과 같이 명령어를 실행할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub global run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; build dart pub global run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; patch dart pub global run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; minor dart pub global run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; major dart pub global run bull:pub_version &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 2.5.7 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 사용하여 명령어(CLI)로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하는 방법에 대해서 알아보도록 하겠습니다. 이렇게 명령어로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하는 이유는 &lt;a href=&quot;https://pub.dev/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/&lt;/a&gt;에 패키지를 배포할 때, 자동화를 하기 위해서 입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 패키지를 배포하는 방법과 자동화에 관해 궁금하신 분들은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/publish_pub_package/&quot; target=&quot;_blank&quot;&gt;[Flutter] 패키지를 pub.dev에 배포하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/automate_publishing_package/&quot; target=&quot;_blank&quot;&gt;[Flutter] pub.dev 배포 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지는 제가 필요해서 만든 패키지입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart&lt;/code&gt;의 명령어(CLI) 툴을 만드는 방법에 대해서 궁금하신 분들은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/dart/create_cli_tool/&quot; target=&quot;_blank&quot;&gt;[Dart] 명령어(CLI) 툴 만들기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/2021/dart/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] pub.dev 배포 자동화</title><link href="https://dev-yakuza.posstree.com/ko/flutter/automate_publishing_package/" rel="alternate" type="text/html" title="[Flutter] pub.dev 배포 자동화"/><published>2023-05-16T00:00:00+09:00</published><updated>2023-06-01T20:10:52+09:00</updated><id>https://dev-yakuza.posstree.com/flutter/automate_publishing_package-ko</id><content type="html" xml:base="https://dev-yakuza.posstree.com/flutter/automate_publishing_package/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#automated-publishing-활성화&quot;&gt;Automated publishing 활성화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-작성&quot;&gt;GitHub Actions 작성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#문제점&quot;&gt;문제점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#changelog-자동화&quot;&gt;Changelog 자동화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pubspecyaml의-version-업데이트&quot;&gt;pubspec.yaml의 version 업데이트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;로 앱을 개발하다보면, 공통 라이브러리 또는 오픈소스화를 위해 패키지(Package)를 만들어서 &lt;a href=&quot;https://pub.dev/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/&lt;/a&gt;에 배포해야할 때가 있습니다.&lt;/p&gt; &lt;p&gt;이전 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에 필요한 패키지를 제작하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/publish_pub_package/&quot; target=&quot;_blank&quot;&gt;[Flutter] 패키지를 pub.dev에 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포된 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;automated-publishing-활성화&quot;&gt;Automated publishing 활성화&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포된 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 자동으로 배포하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Automated publishing&lt;/code&gt; 옵션을 활성화할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;브라우저에서 &lt;a href=&quot;https://pub.dev/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/&lt;/a&gt; 페이지를 열고, 배포 자동화를 하고자 하는 패키지의 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/pub_dev_package.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/pub_dev_package.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/automate_publishing_package/pub_dev_package.png&quot; alt=&quot;Automate publishing package - pub.dev package page&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;자신이 소유하고 있는 패키지라면 상단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Admin&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Activity log&lt;/code&gt; 탭이 활성화된 것을 확인할 수 있습니다. 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Admin&lt;/code&gt; 탭을 선택하여 관리자 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/automated_publishing_option.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/automated_publishing_option.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/automate_publishing_package/automated_publishing_option.png&quot; alt=&quot;Automate publishing package - automated publishing option&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;관리자 페이지에서 스크롤하여 하단으로 이동하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Automated publishing&lt;/code&gt; 옵션을 확인할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enable publishing from GitHub Actions&lt;/code&gt;를 선택하여 옵션을 활성화시킵니다.&lt;/p&gt; &lt;p&gt;그런 다음 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository&lt;/code&gt;에 해당 패키지의 코드를 저장하고 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;의 저장소를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;owner/repository&lt;/code&gt; 형식으로 입력합니다.&lt;/p&gt; &lt;p&gt;저는 다음과 같은 패키지를 가지고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dev-yakuza/bull&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/bull&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository&lt;/code&gt;에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev-yakuza/bull&lt;/code&gt;을 입력하였습니다.&lt;/p&gt; &lt;p&gt;그런 다음, 배포에 사용할 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git Tag&lt;/code&gt; 형식을 지정합니다. 보통은 패키지를 배포할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v2.5.7&lt;/code&gt;과 같은 형태의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git Tag&lt;/code&gt;를 사용합니다. 따라서 특별한 이유가 없다면 해당 태그를 그대로 사용합니다.&lt;/p&gt; &lt;h2 id=&quot;github-actions-작성&quot;&gt;GitHub Actions 작성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 패키지를 자동으로 배포할 준비가 되었습니다. 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Example workflow&lt;/code&gt;를 참고하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 제작할 필요가 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/example_workflow.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/automate_publishing_package/example_workflow.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/automate_publishing_package/example_workflow.png&quot; alt=&quot;Automate publishing package - GitHub Actions example workflow&quot; loading=&quot;lazy&quot; /&gt; &lt;/picture&gt; &lt;p&gt;또는 다음 링크를 참고하여 작성할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dart.dev/tools/pub/automated-publishing&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://dart.dev/tools/pub/automated-publishing&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; 파일을 생성하고 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actiosn&lt;/code&gt;를 작성하여 사용하였습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# For Flutter package&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart-lang/setup-dart@v1&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;subosito/flutter-action@v2.10.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flutter-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.7.12&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub get&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub publish --force&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# For Dart package&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# - uses: dart-lang/setup-dart@v1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# - name: Install dependencies&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# run: dart pub get&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# - name: Publish&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# run: dart pub publish --force&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이와 같이 작성한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 다음 명령어를 사용하여 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v2.5.7 git push origin v2.5.7 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt; &lt;p&gt;이전 블로그에서도 설명하였지만, 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;이 일치해야 하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포되지 않은 버전을 사용해야 합니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일의 버전 내용을 수정하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에 커밋을 한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git Tag&lt;/code&gt; 명령어로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포할 수 있습니다. 하지만 이는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;100%&lt;/code&gt; 자동화라고 볼 수 없습니다.&lt;/p&gt; &lt;h2 id=&quot;changelog-자동화&quot;&gt;Changelog 자동화&lt;/h2&gt; &lt;p&gt;이 문제를 해결하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;를 자동화하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일을 자동으로 업데이트시킬 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일의 업데이트를 자동화하는 방법에 대해서는 다음 링크를 참고하시 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/github_actions/conventional-pr-title-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Pull request 제목 검사&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/github_actions/release-drafter/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Release Drafter를 사용하여 GitHub의 Release note 자동화 하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/github_actions/pr-labels-checker/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Pull request 라벨 검사하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/github_actions/changelog-updater-action/&quot; target=&quot;_blank&quot;&gt;[GitHub Actions] Changelog 파일 자동 업데이트하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에 링크를 참고하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release note&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일을 자동화할 수 있습니다. 저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHANGELOG.md&lt;/code&gt; 파일의 자동화는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; 파일을 수정하여 사용하고 있습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;target_release_notes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/changelog-updater-action@v1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;latest-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release-notes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changelog&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CHANGELOG.md&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart-lang/setup-dart@v1&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;subosito/flutter-action@v2.10.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flutter-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.7.12&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub get&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart run bull pub_version --version=$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated pubspec&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;release&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pubspec.yaml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin $ -f&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub publish --force&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left in-feed-left-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; &lt;!-- &lt;div class=&quot;ads-block ads-center in-feed-center-ads&quot; aria-hidden=&quot;true&quot;&gt; &lt;/div&gt; --&gt; &lt;/div&gt; &lt;h2 id=&quot;pubspecyaml의-version-업데이트&quot;&gt;pubspec.yaml의 version 업데이트&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 사용하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bull: &lt;a href=&quot;https://pub.dev/packages/bull&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/bull&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dart pub add &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; bull &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; 파일을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;target_release_notes&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/changelog-updater-action@v1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;latest-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release-notes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated Changelog&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changelog&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CHANGELOG.md&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart-lang/setup-dart@v1&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;subosito/flutter-action@v2.10.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;flutter-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.7.12&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub get&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart run bull pub_version --version=$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated pubspec&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;release&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pubspec.yaml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin $ -f&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub publish --force&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;수정된 내용은 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 업데이트하는 코드와 수정된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt; 파일을 커밋하는 코드입니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dart run bull pub_version --version=$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated pubspec&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;release&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pubspec.yaml&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bull&lt;/code&gt; 패키지의 사용법에 관해서는 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dev-yakuza.posstree.com/flutter/dart/update_pubspec_version&quot; target=&quot;_blank&quot;&gt;[Dart] Bull 패키지를 사용하여 pubspec.yaml 파일의 version 업데이트하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;용으로 개발한 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt;에 배포하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;용 오픈소스나 공통 패키지를 만들어 배포하고 있다면 여기서 소개한 방법을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub.dev&lt;/code&gt; 배포를 자동화해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://dev-yakuza.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>