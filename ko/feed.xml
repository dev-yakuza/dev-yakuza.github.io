<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://deku.posstree.com/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://deku.posstree.com/ko/" rel="alternate" type="text/html"/><updated>2024-02-07T09:40:28+09:00</updated><id>https://deku.posstree.com/feed.xml</id><title type="html">Deku</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">[macOS] 절전 모드 전환 방지 명령어</title><link href="https://deku.posstree.com/ko/share/macos/caffeinate/" rel="alternate" type="text/html" title="[macOS] 절전 모드 전환 방지 명령어"/><published>2024-01-31T00:00:00+09:00</published><updated>2024-02-02T21:52:29+09:00</updated><id>https://deku.posstree.com/share/macos/caffeinate-ko</id><content type="html" xml:base="https://deku.posstree.com/share/macos/caffeinate/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate&quot;&gt;Caffeinate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate-%EC%A2%85%EB%A3%8C&quot;&gt;Caffeinate 종료&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0&quot;&gt;Caffeinate을 사용하는 이유&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;는 기본적으로 절전 모드가 설정되어 있습니다. 절전 모드는 일정 시간이 지나면 자동으로 화면을 끄거나, 잠자기 모드로 전환되며 이를 통해 전력 소모를 줄이고 노트북의 배터리 수명을 연장하거나 데스크톱의 에너지 효율을 높이는데 도움을 줍니다.&lt;/p&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 사용하여 절전 모드가 자동으로 전환되는 것을 방지하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;caffeinate&quot;&gt;Caffeinate&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어는 macOS에서 절전 모드가 자동으로 전환되는 것을 방지하는 명령어입니다. 이 명령어는 시스템이 활성화된 상태로 유지되도록 하여 화면이 꺼지거나 컴퓨터가 자동으로 절전 모드로 들어가지 않도록 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caffeinate &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;컴퓨터로 아무 동작도 하지 않을 때, 절전 모드로 전환되는 것을 방지하고 싶다면 다음과 같이 명령어를 실행하면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caffeinate &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 3600 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;: 화면이 꺼지는 것을 방지합니다.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-t&lt;/code&gt;: 몇 초 동안 활성화된 상태로 유지할지 설정합니다. 위의 명령어는 1시간 동안 활성화된 상태로 유지합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;터미널에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 실행한 후, 다른 터미널에서 긴 시간이 걸리는 작업을 실행하면 컴퓨터가 절전 모드로 전환되지 않고 계속 활성화 상태를 유지하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;caffeinate-종료&quot;&gt;Caffeinate 종료&lt;/h2&gt; &lt;p&gt;긴 시간이 걸리는 작업이 끝났다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 종료해야 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 실행한 터미널에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + C&lt;/code&gt;를 눌러 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 종료하거나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어가 실행된 터미널을 종료함으로써 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 종료할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;caffeinate을-사용하는-이유&quot;&gt;Caffeinate을 사용하는 이유&lt;/h2&gt; &lt;p&gt;설정에서 절전 모드를 비활성화하는 방법도 있지만, 절전 모드 비활성화는 전력 소모를 증가시키고 배터리 수명을 단축시킬 수 있으므로 기본적(default)으로 활성화를 해두는게 좋습니다. 설정에서 절전 모드를 비활성화한 후, 이를 잊어버리면 절전 모드가 계속 비활성화된 상태로 컴퓨터를 사용하게 되므로 배터리 수명이 단축되는 등의 문제가 발생할 수 있습니다.&lt;/p&gt; &lt;p&gt;또한, 회사 컴퓨터인 경우, 보안 상에 이유로 자리를 비우는 사이에 자동으로 화면이 꺼지는 등에 설정을 강제하고 있습니다.&lt;/p&gt; &lt;p&gt;이때, 일시적으로 긴 시간이 걸리는 작업(명령어)를 실행해야 하는 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 사용하여 절전 모드가 자동으로 전환되는 것을 방지하고 작업이 끝난 후에는 명령어를 종료함으로써, 기본 설정을 유지하면서도 절전 모드가 자동으로 전환되는 것을 방지할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;에서 절전 모드가 자동으로 전환되는 것을 방지하는 방법에 대해서 알아보았습니다. 여러분도 기본 설정을 유지한 채로 절전 모드가 자동으로 전환되는 것을 방지하고 싶다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; 명령어를 사용해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] Lexical or Preprocessor Issue (Xcode): *.h file not found 에러 수정</title><link href="https://deku.posstree.com/ko/flutter/error/lexical_or_preprocessor_file_not_found/" rel="alternate" type="text/html" title="[Flutter] Lexical or Preprocessor Issue (Xcode): *.h file not found 에러 수정"/><published>2024-01-26T00:00:00+09:00</published><updated>2024-02-01T11:50:51+09:00</updated><id>https://deku.posstree.com/flutter/error/test-concurrency-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/error/lexical_or_preprocessor_file_not_found/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%97%90%EB%9F%AC-%EC%9B%90%EC%9D%B8&quot;&gt;에러 원인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0&quot;&gt;에러 해결&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter 프로젝트를 진행하던 중, 갑자기 다음과 같은 에러가 발생했습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter Lexical or Preprocessor Issue &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Xcode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;&apos;FirebaseABTesting/FirebaseABTesting.h&apos;&lt;/span&gt; file not found &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;특별히 수정한 내용이 없기 때문에 에러가 발생할 이유가 없었지만, 이런 에러가 발생하여 iOS에서 프로젝트를 빌드할 수 없었습니다. 이번 블로그 포스트에서는 Flutter에서 갑자기 발생하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; 에러를 해결하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;에러-원인&quot;&gt;에러 원인&lt;/h2&gt; &lt;p&gt;Flutter에서 프로젝트를 개발하던 중, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; 에러가 발생하였다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;의 업데이트에 의한 문제일 가능성이 높습니다.&lt;/p&gt; &lt;p&gt;이 경우는 대부분 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;의 업데이트로 인해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;의 버전이 낮아져서 발생하는 문제입니다. 따라서 기존에 잘 빌드되던 프로젝트도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;의 업데이트로 인해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;의 버전이 낮아져서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; 에러가 발생할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;에러-해결&quot;&gt;에러 해결&lt;/h2&gt; &lt;p&gt;이때는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;의 버전을 업데이트하여 해결할 수 있습니다. 저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;을 설치하였기 때문에, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;의 버전을 업데이트하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade cocoapods &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;를 업데이트 한 후, 문제가 되는 프로젝트로 이동한 후, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pod&lt;/code&gt;을 재설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;필요하다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pods&lt;/code&gt; 폴더와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Podfile.lock&lt;/code&gt; 파일을 삭제한 후, 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt; 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pod&lt;/code&gt;을 재설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; Pods Podfile.lock pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 프로젝트를 다시 빌드하면 정상적으로 빌드되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 Flutter에서 갑자기 발생하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; 에러를 해결하는 방법에 대해서 알아보았습니다. 여러분도 Flutter 프로젝트를 진행하던 중, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; 에러가 발생하였다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;의 버전을 업데이트하여 해결해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] concurrency 옵션을 통해 테스트 속도 개선하기</title><link href="https://deku.posstree.com/ko/flutter/test/concurrency/" rel="alternate" type="text/html" title="[Flutter] concurrency 옵션을 통해 테스트 속도 개선하기"/><published>2024-01-26T00:00:00+09:00</published><updated>2024-01-28T20:31:50+09:00</updated><id>https://deku.posstree.com/flutter/test/test-concurrency-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/test/concurrency/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#concurency-%EC%98%B5%EC%85%98&quot;&gt;concurency 옵션&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%BD%94%EC%96%B4-%EC%88%98-%ED%99%95%EC%9D%B8&quot;&gt;코어 수 확인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EC%86%8D%EB%8F%84-%EB%B9%84%EA%B5%90&quot;&gt;테스트 실행 속도 비교&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions%EC%97%90%EC%84%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EC%86%8D%EB%8F%84-%EB%B9%84%EA%B5%90&quot;&gt;GitHub Actions에서 테스트 실행 속도 비교&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter에서 앱을 개발할 때, 테스트 코드를 작성하고 이를 실행하여 서비스의 안정성을 높이게 됩니다. 하지만, 프로젝트의 규모가 커지면 테스트 코드량도 많아지게 되고, 이에 따라 테스트 코드를 실행하는데 걸리는 시간도 증가하게 됩니다.&lt;/p&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하여 테스트 코드를 병렬로 실행하여 테스트 속도를 개선하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;concurency-옵션&quot;&gt;concurency 옵션&lt;/h2&gt; &lt;p&gt;Flutter에서 test를 실행할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하여 테스트 코드를 병렬로 실행할 수 있습니다. 이를 통해 테스트 코드를 실행하는데 걸리는 시간을 줄일 수 있습니다.&lt;/p&gt; &lt;p&gt;다음 명령어를 실행하면 Flutter의 test 명령어에서 사용할 수 있는 옵션을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;여러 옵션중에 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--concurrency&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; The number of concurrent &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;processes to run. This will be ignored when running integration tests. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;공식 문서에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 확인할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://pub.dev/packages/test#test-concurrency&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Test concurrency&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;코어-수-확인&quot;&gt;코어 수 확인&lt;/h2&gt; &lt;p&gt;Flutter의 Test 명령어는 기본적으로 호스트 CPU 코어의 절반을 사용하도록 설정되어 있습니다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Test suites run concurrently by default, using half of the host’s CPU cores.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;그러므로 머신의 코어 수의 절반 이하를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션에 설정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 설정하지 않고 실행할 때 보다 성능이 떨어질 수 있습니다.&lt;/p&gt; &lt;p&gt;그러므로 현재 머신의 코어수를 확인하고, 적절한 코어수를 설정할 필요가 있습니다. 다음 명령어를 실행하면 머신의 코어 수를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;테스트-실행-속도-비교&quot;&gt;테스트 실행 속도 비교&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 통해 어느정도 테스트 코드 실행 속도가 향상되는지 확인해 봅시다. Flutter 프로젝트에서 다음 명령어를 사용하여 테스트 코드를 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 테스트 코드가 실행된 후, 테스트 코드를 실행하는데 걸린 시간을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;02:10 +657: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션없이 테스트 코드를 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2분10초&lt;/code&gt; 걸리는 것을 확인할 수 있습니다. 이제 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하여 테스트 코드를 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--concurrency&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 테스트 코드가 실행된 후, 테스트 코드를 실행하는데 걸린 시간을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;02:02 +657: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8초&lt;/code&gt; 정도 테스트 코드를 실행하는데 걸리는 시간이 단축되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;github-actions에서-테스트-실행-속도-비교&quot;&gt;GitHub Actions에서 테스트 실행 속도 비교&lt;/h2&gt; &lt;p&gt;제 경우는 로컬 머신의 성능(12 cores)이 워낙 좋아서 큰 효과를 확인할 수 없지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; 환경에서는 좀 더 큰 효과를 확인할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하지 않고 테스트 코드를 실행한 경우, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7분&lt;/code&gt; 정도 걸리는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.png&quot; alt=&quot;Flutter - test without concurrency option&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하여 테스트 코드를 실행한 경우, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4분&lt;/code&gt; 정도 걸리는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.png&quot; alt=&quot;Flutter - test with concurrency option&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;의 테스트에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하여 테스트 속도를 개선하는 방법에 대해서 알아보았습니다. 아직 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 사용하고 있지 않다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; 옵션을 추가하여 테스트 속도를 개선해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Monoepo] Symlink</title><link href="https://deku.posstree.com/ko/environment/monorepo/symlink/" rel="alternate" type="text/html" title="[Monoepo] Symlink"/><published>2024-01-17T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-symlink-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/symlink/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink&quot;&gt;Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%98%88%EC%A0%9C&quot;&gt;예제&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%EC%83%9D%EC%84%B1&quot;&gt;Symlink 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%ED%99%95%EC%9D%B8&quot;&gt;Symlink 확인&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;모노레포에서 여러 모듈들의 의존성을 연결할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 활용하게 됩니다. 이번 블로그 포스트에서는 모노레포를 이해하기 위한 기본 지식인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink(Symbolic Link)&lt;/code&gt;에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monoepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] Symlink&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;symlink&quot;&gt;Symlink&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symbolic Link&lt;/code&gt;의 줄임말로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;파일&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;디렉토리&lt;/code&gt;에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;바로가기(System shortcut)&lt;/code&gt;라고 생각하시면 됩니다.&lt;/p&gt; &lt;p&gt;Symlink는 주요 OS(macOS, Windows, Linux)에서 지원하는 기본 기능입니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;의 패키지 매니저인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;에서도 지원하고 있습니다.&lt;/p&gt; &lt;h2 id=&quot;예제&quot;&gt;예제&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;이 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 기능을 확인하기 위한 예제를 만들어 봅시다. 우선, 다음과 같이 폴더와 파일 구조를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 파일을 구성한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;symlink-생성&quot;&gt;Symlink 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 기능을 확인하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt; 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이동한 후, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 사용할 준비를 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# yarn link&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 사용하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더로 이동합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .. &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;module-a &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더로 이동하였다면, 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;에 대한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link&lt;/code&gt; 명령어를 실행하면 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더가 생성되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modules-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;가 생성된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ├── index.js ├── node_modules │ └── module-b -&amp;gt; ../../module-b └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt; 폴더는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 복사한 것이 아니라 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt; 자체와 연동이 되어 있습니다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일을 수정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일도 같이 수정이 되며, 반대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일을 수정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일도 같이 수정이 됩니다.&lt;/p&gt; &lt;h2 id=&quot;symlink-확인&quot;&gt;Symlink 확인&lt;/h2&gt; &lt;p&gt;이제 프로젝트의 루트 폴더(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;)로 이동한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ../..&lt;/span&gt; node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 문제없이 잘 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt; 파일 내용을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b!!!!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;수정후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt; 파일을 열어보면 위에서 수정한 내용이 반영되어 있는 것을 확인할 수 있습니다. 물론, 다음 명령어를 실행하면, 변경된 내용이 잘 출력되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js module-a module-b!!!! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 모노레포를 사용하기 위한 기초 지식인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;에 대해서 알아보았습니다. 모노레포에서 여러 모듈들의 의존성을 연결할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 활용하므로 이번 블로그 포스트를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;를 이해해 두면 모노레포를 사용하는데 도움이 될 것입니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Monorepo] NodeJS의 모듈 불러오기</title><link href="https://deku.posstree.com/ko/environment/monorepo/module-resolutions/" rel="alternate" type="text/html" title="[Monorepo] NodeJS의 모듈 불러오기"/><published>2024-01-16T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-resolution-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/module-resolutions/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88&quot;&gt;모듈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0&quot;&gt;모듈 불러오기&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#file-path&quot;&gt;File path&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#package-name&quot;&gt;Package name&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84&quot;&gt;모듈 불러오기 우선순위&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%98%88%EC%A0%9C&quot;&gt;예제&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 모노레포를 이해하기 위한 기본 지식으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모듈&quot;&gt;모듈&lt;/h2&gt; &lt;p&gt;자바스크립트에서 모듈은 코드를 구성하고 재사용 가능한 단위로 분리하는 데 사용되는 기능입니다. 모듈을 사용하면 코드를 더 쉽게 유지보수하고 확장할 수 있습니다. ECMAScript 2015(ES6)부터 자바스크립트에 원래 없었던 모듈 시스템이 도입되었습니다.&lt;/p&gt; &lt;p&gt;모듈은 파일 수준에서 코드를 캡슐화하고, 필요한 기능을 다른 파일에서 가져와 사용할 수 있도록 해줍니다. 모듈을 사용하면 전역 스코프의 충돌을 방지하고, 코드의 의존성을 명확하게 관리할 수 있습니다.&lt;/p&gt; &lt;p&gt;JavaScript에서 모듈을 사용하기 위해 다음과 같은 키워드를 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;: 다른 모듈에서 내보낸 기능을 현재 모듈에서 가져옵니다.&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export&lt;/code&gt;: 현재 모듈에서 외부로 내보낼 함수, 변수, 클래스 등을 지정합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;JavaScript에서 다음과 같이 모듈을 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// math.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 만든 모듈은 다음과 같이 사용이 가능합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;모듈-불러오기&quot;&gt;모듈 불러오기&lt;/h2&gt; &lt;p&gt;JavaScript에서 모듈을 불러오는 방법은 크게 두 가지가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;를 이용하는 방법&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;을 이용하는 방법&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;file-path&quot;&gt;File path&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;를 이용하여 모듈을 추가할 때는 다음과 같이 상대 경로(Relative path)와 절대 경로(Absolute path)를 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Relative path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../some/file/path/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Absolute path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/src/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;package-name&quot;&gt;Package name&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더 하위에 있는 모듈은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;을 이용하여 불러올 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// react module exists in node_modules&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;모듈-불러오기-우선순위&quot;&gt;모듈 불러오기 우선순위&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;에서 모듈을 불러올 때, 우선 동일한 폴더에서 해당 모듈이 있는지, 동일한 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에 모듈이 확인합니다. 만약, 동일한 폴더에 존재하지 않는다면, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더를 찾게 되고, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에도 존재하지 않는 경우, 부모 폴더의 상위 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에서 모듈을 찾게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;예제&quot;&gt;예제&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법을 확인하기 위해 다음과 같은 폴더 구조를 만들어 보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;은 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;는 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 파일을 구성한 후, 다음 명령어를 실행하여 모듈을 잘 불러오는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더명을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;로 변경하고 다시 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node node_modules/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 문제없이 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;폴더명이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;인 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require(&apos;module-b&apos;);&lt;/code&gt;을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 불러올 때, 파일 경로가 아니므로 동일한 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;를 찾게 됩니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 현재 폴더에 존재하지 않으므로, 부모 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;를 확인합니다. 부모 폴더에도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 없기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MODULE_NOT_FOUND&lt;/code&gt; 에러가 발생하는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;p&gt;폴더명을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;로 변경한 후, 동일한 코드를 실행하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 존재하지 않기 때문에, 부모 폴더에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;를 찾게 됩니다. 부모 폴더에는 우리가 이름을 변경한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;가 존재하고, 해당 폴더의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;가 존재하기 때문에 문제가 발생하지 않고 잘 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법은 모노레포로 프로젝트를 구성하는데 도움이 되는 지식이므로 이번 블로그 포스트에서 소개해 보았습니다. 여러분도 이번 기회에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;가 모듈을 불러오는 방법에 대해서 다시 한번 이해해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[JavaScript] 모노레포(Monorepo)를 위한 도구들</title><link href="https://deku.posstree.com/ko/environment/monorepo/tools/" rel="alternate" type="text/html" title="[JavaScript] 모노레포(Monorepo)를 위한 도구들"/><published>2024-01-11T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo_tools-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/tools/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95&quot;&gt;모노레포를 시작하는 방법&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80&quot;&gt;패키지 매니저&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9A%A9-%ED%88%B4&quot;&gt;모노레포용 툴&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#lerna&quot;&gt;Lerna&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#nx&quot;&gt;Nx&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#turborepo&quot;&gt;Turborepo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript로 개발할 프로젝트에서 모노레포(Monorepo)를 사용하기 위해 필요한 도구들을 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[프로젝트 관리] 리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모노레포를-시작하는-방법&quot;&gt;모노레포를 시작하는 방법&lt;/h2&gt; &lt;p&gt;모노레포를 시작하는 방법은 크게 두 가지가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;패키지 매니저를 이용하는 방법&lt;/li&gt; &lt;li&gt;모노레포용 툴을 사용하는 방법&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript 프로젝트에서 모노레포를 지원하는 패키지 매니저와 모노레포 툴에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;패키지-매니저&quot;&gt;패키지 매니저&lt;/h2&gt; &lt;p&gt;JavaScript 프로젝트에서 모노레포를 구성하기 위해서는 모노레포를 지원하는 패키지 매니저를 사용할 수 있습니다. 모노레포를 지원하는 패키지 매니저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;이 있습니다.&lt;/p&gt; &lt;p&gt;모노레포를 지원하는 패키지매니저인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;은 다음과 같은 특성을 가지고 있습니다.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;기능&lt;/th&gt; &lt;th&gt;pnpm&lt;/th&gt; &lt;th&gt;yarn&lt;/th&gt; &lt;th&gt;npm&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;workspace 제공&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;고립된 node_modules&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;호이스팅된 node_modules&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;피어 자동 설치&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plug’n’Play&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Zero-Installs&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;종속 패치&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;NodeJS 버전 관리&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lockfile&lt;/td&gt; &lt;td&gt;✅(pnpm-lock.yaml)&lt;/td&gt; &lt;td&gt;✅(yarn.lock)&lt;/td&gt; &lt;td&gt;✅(package-lock.json)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;덮어쓰기 지원&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(resolution 사용)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Content-addressable 리포지토리&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;동적 패키지 실행&lt;/td&gt; &lt;td&gt;✅(pnpm dlx)&lt;/td&gt; &lt;td&gt;✅(yarn dlx)&lt;/td&gt; &lt;td&gt;✅(npx)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Listing licenses&lt;/td&gt; &lt;td&gt;✅(pnpm licenses list)&lt;/td&gt; &lt;td&gt;✅(Via a plugin)&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;모노레포용-툴&quot;&gt;모노레포용 툴&lt;/h2&gt; &lt;p&gt;패키지 매니저가 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspace&lt;/code&gt; 기능만으로도 충분히 모노레포를 구성할 수 있지만, 모노레포용 툴을 사용하면 보다 쉽게 모노레포를 구성할 수 있습니다. 또한, 모노레포용 툴이 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache&lt;/code&gt; 기능을 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build&lt;/code&gt;나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 등을 보다 빠르게 수행할 수 있습니다.&lt;/p&gt; &lt;p&gt;JavaScript 프로젝트를 위한 모노레포용 툴에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;가 있습니다.&lt;/p&gt; &lt;h3 id=&quot;lerna&quot;&gt;Lerna&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;는 오픈소스로 개발, 관리되고 있습니다. 오픈소스 커뮤니티만으로는 관리가 어려워 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;에 인수되었습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lerna: &lt;a href=&quot;https://lerna.js.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://lerna.js.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;현재도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 사용할 수 있지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;에 인수되었기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;가 자신들의 툴만큼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 지원할지 확실하지 않기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;를 사용할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;를 사용하는 것을 고려하거나, 좀 더 추이를 지켜보는 것이 좋을 것 같습니다.&lt;/p&gt; &lt;h3 id=&quot;nx&quot;&gt;Nx&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Narwhal Technologies Inc.&lt;/code&gt;라는 회사에서 개발하여 제공하고 있습니다. 이 회사는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크와 관련된 도구 및 서비스를 제공하는 회사입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크 관련 도구를 개발하는 회사가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;이기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 애플리케이션을 위한 모노레포 관리 도구로 시작되었습니다. 현재는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 등 다른 프레임워크도 지원하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Nx: &lt;a href=&quot;https://nx.dev/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크로 프로젝트를 개발할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 훌륭한 선택일 것입니다. 물론 다른 프레임워크에서도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 좋은 선택지일 수 있지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크를 중심으로 개발된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 중심의 툴을 개발하는 회사가 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt; 프레임워크에서 더 좋은 성능을 발휘할 것입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;가 지원하는 프레임워크는 다음 링크를 통해서 확인 가능합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Recipes: &lt;a href=&quot;https://nx.dev/recipes&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/recipes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;turborepo&quot;&gt;Turborepo&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;는 &lt;a href=&quot;https://twitter.com/jaredpalmer&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Jared Palmer&lt;/a&gt;가 개발하였지만, 2021년 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;를 만들고 운영하는 &lt;a href=&quot;https://vercel.com/blog/vercel-acquires-turborepo&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Vercel&lt;/a&gt;이 인수하여 개발, 관리하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turbo: &lt;a href=&quot;https://turbo.build/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;만약, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;로 프로젝트를 개발할 예정이라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;는 훌륭한 선택일 것입니다. 특히, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;를 사용하면 같은 회사가 개발, 관리하고 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;를 사용하는 것이 다른 툴을 사용하는 것보다 좋을 것입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;가 지원하는 프레임워크는 다음 링크를 통해서 확인 가능합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turborepo Examples: &lt;a href=&quot;https://turbo.build/repo/docs/getting-started/from-example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/repo/docs/getting-started/from-example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 JavaScript로 개발할 프로젝트에서 모노레포(Monorepo)를 사용하기 위해 필요한 도구들을 알아보도록 하겠습니다. 패키지 매니저가 제공하는 기능으로도 충분히 모노레포를 구성할 수 있지만, 모노레포용 툴을 사용하면 좀 더 편하고 다양한 기능들을 사용할 수 있습니다.&lt;/p&gt; &lt;p&gt;모노레포로 프로젝트를 구성할 예정이시라면 패키지 매니저의 기능뿐만 아니라 모노레포용 툴의 도입도 고려해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[프로젝트 관리] 리포지토리 전략</title><link href="https://deku.posstree.com/ko/environment/repository_strategy/" rel="alternate" type="text/html" title="[프로젝트 관리] 리포지토리 전략"/><published>2024-01-04T00:00:00+09:00</published><updated>2024-01-23T21:02:40+09:00</updated><id>https://deku.posstree.com/environment/repository_strategy-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/repository_strategy/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A6%AC%ED%8F%AC%EC%A7%80%ED%86%A0%EB%A6%AC-%EC%A0%84%EB%9E%B5&quot;&gt;리포지토리 전략&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4monolith&quot;&gt;모놀리스Monolith&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;모놀리스의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;모놀리스의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%86%80%EB%A6%AC%EC%8A%A4-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;모놀리스 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%ACmulti-repo&quot;&gt;멀티 레포Multi Repo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;멀티 레포의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;멀티 레포의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%A9%80%ED%8B%B0-%EB%A0%88%ED%8F%AC-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;멀티 레포 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%ACmonorepo&quot;&gt;모노레포Monorepo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9D%98-%EC%9E%A5%EC%A0%90&quot;&gt;모노레포의 장점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC%EC%9D%98-%EB%8B%A8%EC%A0%90&quot;&gt;모노레포의 단점&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A8%EB%85%B8%EB%A0%88%ED%8F%AC-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4-%EC%82%AC%ED%95%AD&quot;&gt;모노레포 도입시 고려 사항&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;프로젝트를 개발할 때, 하나의 리포지토리로 구성할지, 여러 리포지토리로 구성할지 리포지토리 전략을 정하게 됩니다. 이번 블로그 포스트에서는 프로젝트를 관리하기 위한 리포지토리 전략인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모놀리스(Monolith)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;멀티 레포(Multi Repo)&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; 모노레포(Monorepo)&lt;/code&gt;에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[프로젝트 관리] 리포지토리 전략&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] 모노레포(Monorepo)를 위한 도구들&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS의 모듈 불러오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;리포지토리-전략&quot;&gt;리포지토리 전략&lt;/h2&gt; &lt;p&gt;리포지토리 전략에는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모놀리스(Monolith)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;멀티 레포(Multi Repo)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;모노레포(Monorepo)&lt;/code&gt;가 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.jpg&quot; alt=&quot;Repository strategy&quot; /&gt; &lt;/picture&gt; &lt;ul&gt; &lt;li&gt;모놀리스: 모놀리스는 하나의 서비스를 하나의 프로젝트로 만들고 하나의 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;li&gt;멀티 레포: 멀티 레포는 하나의 서비스를 여러 프로젝트로 나누고 여러 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;li&gt;모노레포: 모노레포는 하나의 서비스를 여러 프로젝트로 나누고 하나의 리포지토리로 관리하게 됩니다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;모놀리스monolith&quot;&gt;모놀리스(Monolith)&lt;/h2&gt; &lt;p&gt;모놀리스(Monolith)는 소프트웨어 프로젝트를 단일한 코드베이스로 구성된 단일 애플리케이션으로 설계하는 프로젝트 관리 기법입니다. 모놀리스 아키텍처에서는 애플리케이션의 모든 컴포넌트가 하나의 코드베이스에 통합되어 개발, 배포, 운영이 이루어집니다.&lt;/p&gt; &lt;h3 id=&quot;모놀리스의-장점&quot;&gt;모놀리스의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;간편한 관리와 유지보수: 단일 코드베이스로 구성되어 있기 때문에 전반적인 관리와 유지보수가 비교적 간편합니다.&lt;/li&gt; &lt;li&gt;통합 테스트 용이성: 전체 시스템이 하나의 단일 애플리케이션으로 구성되어 있어 통합 테스트가 용이합니다.&lt;/li&gt; &lt;li&gt;초기 개발 속도 향상: 처음에는 모든 것이 한 곳에 있어 개발이 빠르게 진행될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모놀리스의-단점&quot;&gt;모놀리스의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;확장성 제약: 애플리케이션의 크기가 커질수록 확장이 어려워질 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 종속성: 단일 기술 스택에 의존하게 되어 다양한 기술 도입이 어려울 수 있습니다.&lt;/li&gt; &lt;li&gt;배포의 어려움: 전체 애플리케이션을 수정하고 배포해야 하기 때문에 작은 변경 사항의 배포가 어려울 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모놀리스-도입시-고려-사항&quot;&gt;모놀리스 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우라면, 모놀리스 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;작은 규모의 프로젝트: 작은 프로젝트라면 초기에 개발 속도를 높일 수 있습니다.&lt;/li&gt; &lt;li&gt;쉬운 유지보수가 필요한 경우: 간단한 애플리케이션에서는 유지보수가 편리할 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택이 명확한 경우: 특정 기술 스택에 대한 확고한 결정이 내려진 경우 모놀리스가 유용할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 규모가 작은 경우: 작은 팀이 협업하고 개발하는 경우에는 모놀리스가 효과적일 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그러나 프로젝트의 규모와 요구사항이 증가할수록, 분산 아키텍처나 마이크로서비스 아키텍처 등 다른 아키텍처도 고려해야 합니다. 이는 애플리케이션의 확장성, 유연성, 독립성 등을 높여줄 수 있습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;멀티-레포multi-repo&quot;&gt;멀티 레포(Multi Repo)&lt;/h2&gt; &lt;p&gt;멀티 레포(Multi Repo)는 소프트웨어 프로젝트를 여러 개의 독립적인 저장소(리포지토리)로 나누어 개발하는 프로젝트 관리 기법입니다. 각각의 저장소는 특정 기능, 모듈 또는 서비스에 대응하며, 개발, 배포, 운영이 분리되어 이루어집니다.&lt;/p&gt; &lt;h3 id=&quot;멀티-레포의-장점&quot;&gt;멀티 레포의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;독립적인 개발 및 배포: 각 저장소는 독립적으로 개발, 테스트, 배포될 수 있어 빠른 개발 주기가 가능합니다.&lt;/li&gt; &lt;li&gt;스케일링 용이성: 특정 모듈이나 서비스의 부하가 증가하면 해당 저장소만 확장하여 시스템의 전반적인 성능을 향상시킬 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 다양성: 각 저장소는 독립적인 기술 스택을 선택할 수 있어, 특정 기술에 의존하지 않고 여러 기술을 조합하여 사용할 수 있습니다.&lt;/li&gt; &lt;li&gt;분리된 코드베이스: 각 저장소는 특정 기능이나 업무 영역에 집중되어 코드의 가독성과 유지보수가 향상될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;멀티-레포의-단점&quot;&gt;멀티 레포의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;종속성 관리의 어려움: 다양한 저장소 간에 종속성을 관리하는 것이 복잡할 수 있습니다.&lt;/li&gt; &lt;li&gt;전체 시스템 통합의 어려움: 각 저장소가 독립적으로 개발되다가 통합할 때 충돌이 발생할 수 있으며, 이를 해결하는 데 시간이 소요될 수 있습니다.&lt;/li&gt; &lt;li&gt;종합적인 시각의 부재: 전체 시스템을 이해하고 관리하기 어려울 수 있으며, 특히 통합된 시각이 필요한 경우에는 어려움이 있을 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;멀티-레포-도입시-고려-사항&quot;&gt;멀티 레포 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우, 멀티 레포 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;대규모 프로젝트: 프로젝트가 크고 다양한 기능이나 모듈을 포함하는 경우, 각각을 독립적으로 관리할 필요가 있을 때 사용할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 간 협업: 여러 개의 팀이 동시에 작업을 수행하고 서로 독립적으로 개발하려는 경우, 멀티 레포가 효과적일 수 있습니다.&lt;/li&gt; &lt;li&gt;서비스 지향 아키텍처(SOA) 또는 마이크로서비스 아키텍처: 멀티 레포는 각각의 서비스를 독립적으로 관리하는데 유용하며, 이는 SOA 또는 마이크로서비스 아키텍처와 잘 맞을 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;멀티 레포는 분산된 환경에서 팀의 협업과 빠른 개발 주기를 지원하는데 적합하며, 특히 서비스 지향 아키텍처에서는 각각의 서비스를 개별적으로 관리하는 것이 중요하게 여겨집니다.&lt;/p&gt; &lt;p&gt;하지만, 팀 규모가 작거나 프로젝트 규모가 작은 경우, 너무 많은 기술 스택과 리포지토리 관리의 어려움이 발생할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;모노레포monorepo&quot;&gt;모노레포(Monorepo)&lt;/h2&gt; &lt;p&gt;모노레포(Mono-repo)는 소프트웨어 프로젝트를 하나의 대규모 코드 저장소(리포지토리)로 구성하여 개발하는 프로젝트 관리 기법입니다. 이 방식에서는 모든 소스 코드, 라이브러리, 모듈이 하나의 중앙 위치에 저장되고 관리됩니다.&lt;/p&gt; &lt;h3 id=&quot;모노레포의-장점&quot;&gt;모노레포의 장점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;종속성 관리 용이: 하나의 코드베이스에서 모든 종속성을 관리하므로 의존성 충돌 및 버전 관리가 용이합니다.&lt;/li&gt; &lt;li&gt;전체 시스템 이해 용이: 프로젝트의 전반적인 구조와 동작을 이해하기 쉽습니다. 전체 시스템을 한눈에 파악할 수 있습니다.&lt;/li&gt; &lt;li&gt;코드 재사용성: 모든 모듈 및 라이브러리가 하나의 저장소에 있으므로 코드 재사용이 쉽습니다.&lt;/li&gt; &lt;li&gt;통합 테스트 용이성: 전체 시스템에 대한 통합 테스트가 간편하게 수행될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모노레포의-단점&quot;&gt;모노레포의 단점&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;대규모 프로젝트 관리 어려움: 프로젝트의 규모가 커질수록 빌드 시간이 증가하고, 모든 코드에 대한 팀 간의 협업이 어려워질 수 있습니다.&lt;/li&gt; &lt;li&gt;기술 스택 선택의 제약: 하나의 저장소에서 작업하기 때문에 특정 기술 스택에 제약을 받을 수 있습니다.&lt;/li&gt; &lt;li&gt;CI/CD 성능 저하: 대규모 모노레포에서는 지속적 통합 및 배포 성능이 저하될 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;모노레포-도입시-고려-사항&quot;&gt;모노레포 도입시 고려 사항&lt;/h3&gt; &lt;p&gt;다음과 같은 경우, 모노레포 도입을 고려해볼 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;프로젝트가 중소 규모일 때: 규모가 작은 프로젝트에서는 하나의 저장소로 관리하는 것이 편리할 수 있습니다.&lt;/li&gt; &lt;li&gt;팀 간 협업이 필요한 경우: 모든 팀이 하나의 저장소에서 작업하면 코드 공유 및 협업이 용이합니다.&lt;/li&gt; &lt;li&gt;종속성 관리가 중요한 경우: 프로젝트 내에서 종속성이 복잡하게 얽혀 있을 때 모노레포가 관리하기 쉽습니다.&lt;/li&gt; &lt;li&gt;단일 기술 스택 사용이 필요한 경우: 특정 기술 스택을 일관되게 사용해야 할 때 모노레포가 적합할 수 있습니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;모노레포는 특히 작은 규모의 프로젝트나 팀 간 협업이 필요한 경우에 유용하며, 특정 기술 스택을 통일해야 하는 경우에도 효과적일 수 있습니다. 그러나 프로젝트의 규모나 복잡성이 증가하면서 모노레포의 한계가 나타날 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 프로젝트 관리 기법인 리포지토리 전략에 대해서 알아보았습니다. 특정 전략이 좋고 나쁘고는 없습니다. 자신의 프로젝트의 규모와 요구사항에 맞게 적절한 전략을 선택하시면 됩니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[GitHub Actions] Pull request의 Label 검사</title><link href="https://deku.posstree.com/ko/share/github-actions/pr-labels-checker/" rel="alternate" type="text/html" title="[GitHub Actions] Pull request의 Label 검사"/><published>2023-12-25T00:00:00+09:00</published><updated>2024-02-03T12:32:44+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-pr-labels-checker-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/pr-labels-checker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pr-labels-checker&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%EC%9E%91%EC%84%B1&quot;&gt;GitHub Actions 작성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt; 기능을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 관리합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/pr-labels-checker/pull_request_labels.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/pr-labels-checker/pull_request_labels.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/pr-labels-checker/pull_request_labels.png&quot; alt=&quot;GitHub Actions - PR Labels Checker, pull request labels&quot; /&gt; &lt;/picture&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;중 하나인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-title-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Pull request 제목 검사&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[GitHub Actions] Pull request의 라벨 검사&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;pr-labels-checker&quot;&gt;PR Labels Checker&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;중 하나로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 기능을 제공하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/danielchabr/pr-labels-checker&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;PR Labels Checker&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;github-actions-작성&quot;&gt;GitHub Actions 작성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 작성해 보겠습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/pr-labels-checker.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PR Labels Checker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;labeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unlabeled&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pr_labels_checker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;가 생성되거나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 추가, 해제할 때, 실행됩니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;labeled&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unlabeled&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checks&lt;/code&gt;에 대한 권한이 필요합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pr_labels_checker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사할 때는 다음과 같은 조건을 사용할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;hasSome: 콤마로 구분된 Label 리스트로, PR은 이 중 하나를 반드시 포함해야 합니다.&lt;/li&gt; &lt;li&gt;hasAll: 콤마로 구분된 Label 리스트로, PR은 이 리스트 모두 포함해야 합니다.&lt;/li&gt; &lt;li&gt;hasNone: 콤마로 구분된 Label 리스트로, PR은 이 리스트중 그 어떤 것도 포함해서는 안됩니다.&lt;/li&gt; &lt;li&gt;hasNotAll: 콤마로 구분된 Label 리스트로, PR은 이 리스트 모두를 포함해서는 안됩니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hasSome&lt;/code&gt; 조건을 사용하였습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;조건에 포함된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes 자동화&lt;/code&gt;하기 위해 필요한 리스트입니다. 자세한 내용은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label&lt;/code&gt;을 검사하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Token&lt;/code&gt;을 사용합니다. 따라서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_TOKEN&lt;/code&gt;을 설정해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;release-drafter&quot;&gt;Release Drafter&lt;/h2&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;의 자동화를 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하고 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;를 자동으로 작성합니다. 또한, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목을 보고 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 설정하는 기능도 가지고 있습니다.&lt;/p&gt; &lt;p&gt;그래서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;가 중요하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;가 자동으로 설정해 주지만, 이를 확실하게 하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 다시 한번 검사하고 있습니다.&lt;/p&gt; &lt;p&gt;이를 위한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;와 다음과 같습니다.&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;danielchabr/pr-labels-checker@v3.1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hasSome&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;breaking change,feature,bug,style,refactor,test,chore,docs,ci,dependencies&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;githubToken&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;에 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 설정하고, 자동으로 설정된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 다시 한번 검사하도록 했습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;에 관한 자세한 내용은 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 검사하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Labels&lt;/code&gt;를 사용하여 관리하는 경우나, 저처럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;를 자동화하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;를 사용하는 분들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; 도입을 고려해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="en"><title type="html">[GitHub Actions] Automate Release notes</title><link href="https://deku.posstree.com/ko/share/github-actions/release-drafter/" rel="alternate" type="text/html" title="[GitHub Actions] Automate Release notes"/><published>2023-12-07T00:00:00+09:00</published><updated>2023-12-30T08:43:28+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-release-drafter-en</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/release-drafter/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#contents&quot;&gt;Contents&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#outline&quot;&gt;Outline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog-series&quot;&gt;Blog series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#what-is-release-notes&quot;&gt;What is Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#release-drafter-settings&quot;&gt;Release Drafter settings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#write-release-notes-draft&quot;&gt;Write Release notes Draft&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#publish-release-notes&quot;&gt;Publish Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#completed&quot;&gt;Completed&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;outline&quot;&gt;Outline&lt;/h2&gt; &lt;p&gt;When managing a project on GitHub, you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; to record the features added, bugs fixed, improvements, and deleted features in that version.&lt;/p&gt; &lt;p&gt;In this blog post, I will introduce how to automate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; that is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;blog-series&quot;&gt;Blog series&lt;/h2&gt; &lt;p&gt;This blog post is part of a series. Please check out the other blog posts through the following link.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-title-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request title&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Automate Release notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request labels&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;what-is-release-notes&quot;&gt;What is Release notes&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; is a document provided to users or developers when a new version or update is released in software development. This document contains information such as new features, fixed bugs, improvements, and deleted features in that version. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; helps users or other developers easily identify changes in a new version.&lt;/p&gt; &lt;p&gt;If you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, you can check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Releases&lt;/code&gt; section of the repository.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.png&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes.png&quot; alt=&quot;GitHub Actions - Release Drafter, GitHub Releases&quot; /&gt; &lt;/picture&gt; &lt;p&gt;When you click the link of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;, you can see the details of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; as follows.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/share/github-actions/release-drafter/github_release_notes_details.png&quot; alt=&quot;GitHub Actions - Release Drafter, GitHub Release notes details&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;release-drafter&quot;&gt;Release Drafter&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; is one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; that provides a feature to write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/release-drafter/release-drafter&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Release Drafter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;release-drafter-settings&quot;&gt;Release Drafter settings&lt;/h2&gt; &lt;p&gt;To use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;, you need to add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch.&lt;/p&gt; &lt;p&gt;In order to add it, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/release-drafter.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🧩&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Dependency&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Updates&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;deps&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bump&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Let’s take a closer look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v$RESOLVED_VERSION&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version-resolver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;major&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;minor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;patch&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;patch&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This part is to specify the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$RESOLVED_VERSION&lt;/code&gt; is used to determine the version based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version-resolver&lt;/code&gt; is the part that specifies the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt; used to raise the version by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. If no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; is specified, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt; version will be raised.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;⚠️&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;changes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🚀&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Features&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🐛&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Bug&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Fixes&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;📃&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Documents&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🧩&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Dependency&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Updates&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;deps&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bump&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;🔬&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Others&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collapse-after&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; is the part that specifies the category of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. If there is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; specified in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;labels&lt;/code&gt;, the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; will be recorded in the category specified by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collapse-after&lt;/code&gt; is an option that folds and shows the contents of the category if there are more than the specified number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;autolabeler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;breaking&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;change&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/!:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;feature&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/feat:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bug&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/fix:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;style&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/style:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;refactor&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/refactor:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/test:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/chore:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docs&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/docs:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ci&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/ci:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dependencies&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/deps:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/dependencies:/i&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bump:/i&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; provides a feature that automatically assigns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt; based on the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; is the part that assigns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; based on the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commitish&lt;/code&gt; is the part that specifies the branch to check the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;change-template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$TITLE&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@$AUTHOR&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(#$NUMBER)&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-template&lt;/code&gt; is the part that specifies the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$TITLE&lt;/code&gt; is the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$AUTHOR&lt;/code&gt; is the user who created the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$NUMBER&lt;/code&gt; is the number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;change-title-escapes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;\&amp;lt;*_&amp;amp;&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-title-escapes&lt;/code&gt; is the part that specifies the characters to escape from the title of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$CHANGES&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; is the part that specifies the entire template of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$CHANGES&lt;/code&gt; represents the contents specified in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change-template&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; settings file written like this is used when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action is executed, so it must be added to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch before writing and executing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;write-release-notes-draft&quot;&gt;Write Release notes Draft&lt;/h2&gt; &lt;p&gt;Next, let’s write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; that uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;. Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release-drafter.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release Drafter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update_release_draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;When the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is created, this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autolabeler&lt;/code&gt; to automatically assign the appropriate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; to the title of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;And then, when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;merge&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; action is executed to write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;publish-release-notes&quot;&gt;Publish Release notes&lt;/h2&gt; &lt;p&gt;So far, we have looked at how to write the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;. Now let’s look at how to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Publish&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To publish the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt;, create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; file and modify it as follows.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get variables&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;release-drafter/release-drafter@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;These &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; operate on the &lt;a href=&quot;https://semver.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Semantic Version&lt;/a&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt; and distribute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; written in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Draft&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publsih&lt;/code&gt; option of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt;.&lt;/p&gt; &lt;h2 id=&quot;completed&quot;&gt;Completed&lt;/h2&gt; &lt;p&gt;Done! We’ve seen how to automate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release Drafter&lt;/code&gt; operates based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;. Therefore, it is important to check whether the appropriate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; is set in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;On the next blog post, we will see how to check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;label&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PR Labels Checker&lt;/code&gt; action.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Check Pull request labels&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[GitHub Actions] Pull request 제목 검사</title><link href="https://deku.posstree.com/ko/share/github-actions/pr-title-checker/" rel="alternate" type="text/html" title="[GitHub Actions] Pull request 제목 검사"/><published>2023-12-06T00:00:00+09:00</published><updated>2023-12-27T20:11:23+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-pr-title-checker-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/pr-title-checker/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EB%A6%AC%EC%A6%88&quot;&gt;블로그 시리즈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-commits%EC%9D%B4%EB%9E%80&quot;&gt;Conventional Commits이란&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%EC%83%9D%EC%84%B1&quot;&gt;GitHub Actions 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.conventionalcommits.org/en/v1.0.0/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Conventional Commits&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;블로그-시리즈&quot;&gt;블로그 시리즈&lt;/h2&gt; &lt;p&gt;이 블로그는 시리즈로 제작되었습니다. 다음 링크를 통해 다른 블로그 포스트도 확인해 보시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[GitHub Actions] Pull request 제목 검사&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/pr-labels-checker/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Pull request의 라벨 검사&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conventional-commits이란&quot;&gt;Conventional Commits이란&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;은 소프트웨어 개발에서 사용되는 커밋 메시지를 표준화하기 위한 규칙입니다. 이것은 코드 변경 사항을 더 읽기 쉽고 자동화된 버전 관리 시스템과 통합하기 쉽도록 만들기 위한 목적이 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;은 다음과 같은 구조를 가지고 있습니다.&lt;/p&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt; [optional body] [optional footer(s)] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;타입(Type): 커밋의 의도를 나타내는 단어로, 주로 feat(기능 추가), fix(버그 수정), chore(빌드 및 도구 관련 변경) 등이 사용됩니다.&lt;/li&gt; &lt;li&gt;범주(Scope): 변경 사항이 어떤 부분에 영향을 미치는지를 지정하는 옵션입니다. Optional이므로 생략할 수 있습니다.&lt;/li&gt; &lt;li&gt;커밋 메시지(description): 변경 사항의 간결한 설명을 담고 있는 부분으로, 명령문 형태로 작성되어야 합니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;여기서 타입은 다음과 같은 종류를 사용할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;feat: 새로운 기능을 추가할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;fix: 버그를 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;chore: 빌드 프로세스나 도구 관련 작업을 수행할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;docs: 문서를 변경할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;style: 코드 스타일을 변경하거나 포맷을 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;refactor: 코드 리팩토링을 수행할 때 사용됩니다. 기능의 변경 없이 코드의 구조를 개선하는 경우에 해당합니다.&lt;/li&gt; &lt;li&gt;test: 테스트 관련 코드를 추가하거나 수정할 때 사용됩니다.&lt;/li&gt; &lt;li&gt;build: 빌드 시스템 또는 외부 종속성에 대한 변경을 나타낼 때 사용됩니다.&lt;/li&gt; &lt;li&gt;ci: CI/CD 파이프라인에 대한 변경을 나타냅니다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 만들 때, 브랜치의 첫 커밋 메시지를 기본적으로 사용하게 됩니다. 따라서 커밋을 할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키도록 하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;를 만들 때, 좀 더 의미 있는 제목을 사용할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;conventional-pr-title-action&quot;&gt;Conventional PR Title Action&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt;을 사용하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/aslafy-z/conventional-pr-title-action/tree/v3/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Conventional PR Title Action&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;github-actions-생성&quot;&gt;GitHub Actions 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional PR Title Action&lt;/code&gt;을 사용하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/pr-title-checker.yml&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Check PR title&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reopened&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;edited&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;synchronize&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lint&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aslafy-z/conventional-pr-title-action@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;가 생성되거나 수정될 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 방법에 대해서 알아보았습니다.&lt;/p&gt; &lt;p&gt;제가 이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Conventional Commits&lt;/code&gt;을 지키는지 검사하는 이유는, 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;의 제목을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; 작성을 자동화하기 위해서 입니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Release notes&lt;/code&gt; 작성을 자동화하는 방법에 대해서는 다음 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/github-actions/release-drafter/&quot; target=&quot;\_blank&quot;&gt;[GitHub Actions] Release notes 자동화&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>