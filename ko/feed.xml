<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://deku.posstree.com/ko/feed.xml" rel="self" type="application/atom+xml"/><link href="https://deku.posstree.com/ko/" rel="alternate" type="text/html"/><updated>2023-11-12T20:24:21+09:00</updated><id>https://deku.posstree.com/feed.xml</id><title type="html">Deku</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ko"><title type="html">[GitHub Actions] NPM 패키지 배포 자동화</title><link href="https://deku.posstree.com/ko/share/github-actions/deploy-npm-library/" rel="alternate" type="text/html" title="[GitHub Actions] NPM 패키지 배포 자동화"/><published>2023-10-23T00:00:00+09:00</published><updated>2023-11-12T20:17:44+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-deploy-npm-package-ko</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/deploy-npm-library/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EB%AA%A9%EC%B0%A8&quot;&gt;목차&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#npm-access-token&quot;&gt;NPM access token&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-variables&quot;&gt;GitHub Actions variables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC&quot;&gt;배포&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;이전 블로그 포스트에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 배포하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 배포하는 방법에서는 아래의 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/deploy-npm-library/&quot; target=&quot;\_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Publishing Node.js packages&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;npm-access-token&quot;&gt;NPM access token&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;이 필요합니다. 다음 링크를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트로 이동한 후, 로그인을 합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;로그인한 후, 오른쪽 상단의 프로필 이미지를 선택하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt;를 눌러 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt; 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/access_token.png&quot; alt=&quot;NPM access token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Tokens&lt;/code&gt; 페이지에서 오른쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generate New Token&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Classic Token&lt;/code&gt; 버튼을 눌러 새로운 토큰을 생성하는 페이지로 이동합니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.png&quot; alt=&quot;NPM generate new classic token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Access Token&lt;/code&gt; 페이지에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Automation&lt;/code&gt;을 선택하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt;을 입력하여 새로운 토큰을 생성합니다. 저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;For GitHub&lt;/code&gt;이라는 이름으로 새로운 토큰을 생성하였습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/generate_new_token.png&quot; alt=&quot;NPM generate new classic token&quot; /&gt; &lt;/picture&gt; &lt;p&gt;새로운 토큰이 생성되면 토큰을 복사할 수 있는 화면이 나옵니다. 해당 토큰을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 사용할 예정이므로 잘 복사해둡니다.&lt;/p&gt; &lt;h2 id=&quot;github-actions-variables&quot;&gt;GitHub Actions variables&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지의 배포 자동화를 하고자 하는 저장소(Repository)로 이동 한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secrets and variables&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Actions&lt;/code&gt; 메뉴를 선택하면 다음과 같은 화면을 볼 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/npm_token.png&quot; alt=&quot;Set NPM token to GitHub Actions variables&quot; /&gt; &lt;/picture&gt; &lt;p&gt;여기서 오른쪽 상단의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New repository secret&lt;/code&gt; 버튼을 누르면 다음과 같은 화면을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/github_actions_new_secret.png&quot; alt=&quot;Add NPM token to GitHub Actions new secret&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name&lt;/code&gt;에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM_TOKEN&lt;/code&gt;을 입력하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secret&lt;/code&gt;은 앞서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트에서 복사한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;을 입력합니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h2&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 만들어 봅시다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/release.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Release&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull-requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v${{ steps.semver.outputs.version }}&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3.6.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20.3.0&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;registry-url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://registry.npmjs.org&apos;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm version ${{ steps.semver.outputs.version }} --no-git-tag-version&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag ${{ github.ref_name }} -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin ${{ github.ref_name }} -f&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;NODE_AUTH_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.NPM_TOKEN }}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;좀 더 자세히 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 확인해 보도록 하겠습니다.&lt;/p&gt; &lt;p&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;는 &lt;a href=&quot;https://semver.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;시맨틱 버전(Semantic Version)&lt;/a&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;에 동작합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v[0-9]+.[0-9]+.[0-9]+&apos;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;시멘틱 버전에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; 문자를 제거한 버전을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 사용할 수 있도록 변수에 저장합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Get semantic version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;semver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;::set-output name=version::${GITHUB_REF#refs/tags/v}&quot;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;시멘틱 버전의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;된 코드를 가져옵니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v$&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 배포를 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Node&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3.6.0&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20.3.0&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;registry-url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://registry.npmjs.org&apos;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;을 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt; 버전으로 업데이트합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm version $ --no-git-tag-version&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 업데이트 한 버전을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;에서 관리하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit &amp;amp; push&lt;/code&gt; 합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Commit updated package version&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stefanzweifel/git-auto-commit-action@v4&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;chore:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 업데이트 된 소스코드를 최종 코드로 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git tag&lt;/code&gt;를 강제로 변경합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update Git tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git tag $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git push origin $ -f&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access token&lt;/code&gt;을 사용하여 현재 패키지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;raw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm publish&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;NODE_AUTH_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;endraw %&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;배포&quot;&gt;배포&lt;/h2&gt; &lt;p&gt;이렇게 완성한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포해 봅시다. 다음 명령어를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지를 자동으로 배포할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v0.1.0 git push origin v0.1.0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;로 자동으로 배포된 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 사이트로 이동하면 다음과 같이 패키지가 잘 배포된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2023/github-actions/deploy-npm-library/package_deployed_to_npm.png&quot; alt=&quot;pakcage is deployed to NPM&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 자신이 개발한 JavaScript 라이브러리를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 자동으로 배포하는 방법에 대해서 알아보았습니다. 여러분도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 패키지를 배포하고 관리하고 있는 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt; 패키지 배포를 자동화해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/2020/deploy-npm-library/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/2020/deploy-npm-library/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">create-react-app용 커스텀 템플릿</title><link href="https://deku.posstree.com/ko/react/create-react-app/template/" rel="alternate" type="text/html" title="create-react-app용 커스텀 템플릿"/><published>2023-10-21T00:00:00+09:00</published><updated>2023-10-30T15:47:21+09:00</updated><id>https://deku.posstree.com/react/create-react-app/template-ko</id><content type="html" xml:base="https://deku.posstree.com/react/create-react-app/template/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#create-react-app-%ED%85%9C%ED%94%8C%EB%A6%BF-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1&quot;&gt;create-react-app 템플릿 프로젝트 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#react-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98-%EC%BB%A4%EC%8A%A4%ED%85%80%ED%99%94&quot;&gt;React 프로젝트의 커스텀화&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#package-lockjson-%ED%8C%8C%EC%9D%BC%EA%B3%BC-node_modules&quot;&gt;package-lock.json 파일과 node_modules&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#template-%ED%8F%B4%EB%8D%94&quot;&gt;template 폴더&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitignore&quot;&gt;gitignore&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#templatejson&quot;&gt;template.json&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%ED%85%8C%EC%8A%A4%ED%8A%B8&quot;&gt;테스트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC-%EC%A4%80%EB%B9%84&quot;&gt;배포 준비&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC&quot;&gt;배포&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;을 사용하면 간단하게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성하는 것이 가능합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션을 제공하여 미리 제작된 템플릿을 활용할 수 있는 기능을 제공하고 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;은 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TypeScript&lt;/code&gt;용 템플릿을 제공하고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/tree/main/packages/cra-template-typescript&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;cra-template-typescript&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그래서 우리는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-reat-app&lt;/code&gt; 명령어를 사용하여 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TypeScript&lt;/code&gt;가 적용된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 간단하게 생성할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;YOUR_PROJECT_NAME] &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; typescript &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;의 템플릿 기능을 활용하여 나만의 템플릿을 만드는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;공식 문서: &lt;a href=&quot;https://create-react-app.dev/docs/custom-templates/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Custom Templates&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;create-react-app-템플릿-프로젝트-생성&quot;&gt;create-react-app 템플릿 프로젝트 생성&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;의 템플릿을 만들기 위해서는 프로젝트를 생성할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cra-template-&lt;/code&gt; prefix를 붙여서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app cra-template-[템플릿명] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cra-template-deku&lt;/code&gt;라는 이름으로 프로젝트를 생성하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app cra-template-deku &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 생성한 템플릿 프로젝트는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM(Node Package Manager)&lt;/code&gt;에 배포할 예정입니다. 따라서 다음 명령어를 실행하여 중복된 이름의 패키지가 배포되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm info cra-template-[템플릿명] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약 다음과 같이 동일한 이름의 패키지가 이미 존재한다면, 다른 이름으로 프로젝트를 생성할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku@0.0.2 | MIT | deps: none | versions: 2 DeKu template &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;create-react-app https://github.com/dev-yakuza/cra-template-deku keywords: react, create-react-app, cra, template dist .tarball: https://registry.npmjs.org/cra-template-deku/-/cra-template-deku-0.0.2.tgz .shasum: 89c7f5797c9bf12cfa45dee3de7c29867cc8e371 .integrity: sha512-9HAfk9OkBVfaJHcoIjuCZhQry64UU4OOlNNmUYvhtXrr0xoxzeq6jo1OgjU97Fav2kkyjmYupgmy4GYNAWWFHQ&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; .unpackedSize: 275.8 kB maintainers: - dev-yakuza &amp;lt;dev.yakuza@gmail.com&amp;gt; dist-tags: latest: 0.0.2 published yesterday by dev-yakuza &amp;lt;dev.yakuza@gmail.com&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404&lt;/code&gt; 에러가 나온다면, 해당 이름으로 프로젝트를 진행하면 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm ERR! code E404 npm ERR! 404 Not Found - GET https://registry.npmjs.org/cra-template-yakuza - Not found npm ERR! 404 npm ERR! 404 &lt;span class=&quot;s1&quot;&gt;&apos;cra-template-yakuza@*&apos;&lt;/span&gt; is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this registry. npm ERR! 404 npm ERR! 404 Note that you can also &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;from a npm ERR! 404 tarball, folder, http url, or git url. npm ERR! A &lt;span class=&quot;nb&quot;&gt;complete &lt;/span&gt;log of this run can be found &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;: /.npm/_logs/2023-10-22T06_20_21_911Z-debug-0.log &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;react-프로젝트의-커스텀화&quot;&gt;React 프로젝트의 커스텀화&lt;/h2&gt; &lt;p&gt;이렇게 생성된 프로젝트에 필요한 라이브러리를 설치하고, 예제 코드, 폴더 구조 등 자신이 원하는 스타일로 프로젝트를 구성합니다.&lt;/p&gt; &lt;p&gt;저는 다음과 같은 라이브러리를 설치하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;React UI library: &lt;a href=&quot;https://mui.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;MUI&lt;/a&gt;, &lt;a href=&quot;https://emotion.sh/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Emotion&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Component driven development: &lt;a href=&quot;https://storybook.js.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Calling API: &lt;a href=&quot;https://axios-http.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Axios&lt;/a&gt;, &lt;a href=&quot;https://tanstack.com/query/v4/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;React Query&lt;/a&gt;&lt;/li&gt; &lt;li&gt;State management: &lt;a href=&quot;https://recoiljs.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;Recoil&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Routing: &lt;a href=&quot;https://reactrouter.com/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;React Router&lt;/a&gt;&lt;/li&gt; &lt;li&gt;i18n: &lt;a href=&quot;https://github.com/i18next/react-i18next&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;react-i18next&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 다음과 같이 폴더를 구성하였습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── public ├── src │   ├── api │   ├── components │   │   ├── atoms │   │   ├── molecules │   │   ├── organisms │   │   ├── pages │   │   └── templates │   ├── data │   ├── locales │   ├── types │   ├── utils │   └── ... └── ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;package-lockjson-파일과-node_modules&quot;&gt;package-lock.json 파일과 node_modules&lt;/h2&gt; &lt;p&gt;템플릿 구성이 완료되었다면, 이제 불필요한 파일과 폴더를 삭제할 필요가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더는 더 이상 필요 없으므로 다음 명령어를 실행하여 삭제합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; package-lock.json node_modules &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;template-폴더&quot;&gt;template 폴더&lt;/h2&gt; &lt;p&gt;현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 템플릿으로 제공하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더를 생성하고 모든 파일, 폴더들을 이동 시킬 필요가 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더를 만들고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일 이외에 모든 내용을 해당 폴더로 이동 시킵니다. 그럼 템플릿 프로젝트는 다음과 같은 구조를 가지게 될 것입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json └── template    ├── README.md    ├── .gitignore    ├── public    ├── src    └── tsconfig.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;gitignore&quot;&gt;.gitignore&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더안의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitignore&lt;/code&gt;로 이름을 변경할 필요가 있습니다. 이름을 변경하지 않으면 해당 템플릿을 사용하여 프로젝트를 생성할 때, 다음과 같은 에러가 발생합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: ENOENT: no such file or directory, open &lt;span class=&quot;s1&quot;&gt;&apos;/projects/temp/gitignore&apos;&lt;/span&gt; at Object.openSync &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:fs:592:3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.readFileSync &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:fs:460:35&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at module.exports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/projects/temp/node_modules/react-scripts/scripts/init.js:260:21&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:3:14 at Script.runInThisContext &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:vm:122:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.runInThisContext &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:vm:298:38&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at node:internal/process/execution:83:21 at &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-wrapper&lt;/span&gt;:6:24 at runScript &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/process/execution:82:62&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at evalScript &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/process/execution:104:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; errno: &lt;span class=&quot;nt&quot;&gt;-2&lt;/span&gt;, syscall: &lt;span class=&quot;s1&quot;&gt;&apos;open&apos;&lt;/span&gt;, code: &lt;span class=&quot;s1&quot;&gt;&apos;ENOENT&apos;&lt;/span&gt;, path: &lt;span class=&quot;s1&quot;&gt;&apos;/projects/temp/gitignore&apos;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일명에서 반드시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;을 제거한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitignore&lt;/code&gt;로 변경해야 합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json └── template    ├── README.md    ├── gitignore    ├── public    ├── src    └── tsconfig.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;templatejson&quot;&gt;template.json&lt;/h2&gt; &lt;p&gt;템플릿 프로젝트를 구성하기 위해 설치한 라이브러리들은 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 기록되어 있습니다. 이 내용들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일을 생성하고 해당 파일 안으로 옮길 필요가 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일 안에서 커스텀화 한 부분을 잘라서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일안에 붙여 넣습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eslintConfig&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 템플릿 프로젝트를 생성할 때, 특정 명령어(ex&amp;gt; ESLint, Prettier 등)를 추가하였기 때문에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt;도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;또한, 개발에 필요한 라이브러리, 프로젝트를 구성하기 위해 여러 라이브러리를 설치하였으므로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devDependencies&lt;/code&gt;도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;마지막으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일안에 설정한 내용(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eslintConfig&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jest&lt;/code&gt;)도 잘라서 붙여넣었습니다.&lt;/p&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template.json&lt;/code&gt; 파일로 필요한 내용을 옮기고 나면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일은 다음과 같은 내용이 남게 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;cra-template-deku&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;private&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;browserslist&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;0.2%&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;not dead&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;not op_mini all&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;last 1 chrome version&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;last 1 firefox version&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;last 1 safari version&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 파일 폴더 구조는 다음과 같은 형태를 가지게 됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── package.json ├── template │   ├── README.md │   ├── gitignore │   ├── public │   ├── src │   └── tsconfig.json └── template.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;테스트&quot;&gt;테스트&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;용 커스텀 템플릿 준비가 끝났습니다. 이제 이 템플릿이 정상적으로 동작하는지 확인할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;현재 작업중인 폴더 밖에서 다음 명령어를 실행하여 커스텀 템플릿이 잘 동작하는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx create-react-app &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;YOUR_REACT_PROJECT_NAME] &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; file:./cra-template-deku &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 프로젝트가 잘 생성되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Creating a new React app &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /projects/temp. Installing packages. This might take a couple of minutes. Installing react, react-dom, and react-scripts with cra-template-deku... added 1463 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;2m 242 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details Initialized a git repository. Installing template dependencies using npm... npm WARN deprecated @babel/plugin-proposal-private-property-in-object@7.21.11: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel/plugin-transform-private-property-in-object instead. added 1139 packages, and changed 4 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;2m 514 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details Removing template package using npm... removed 1 package, and audited 2603 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8s 514 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details 8 vulnerabilities &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2 moderate, 6 high&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; To address all issues &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;including breaking changes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, run: npm audit fix &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; Run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm audit&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details. Created git commit. Success! Created temp at /projects/temp Inside that directory, you can run several commands: npm start Starts the development server. npm run build Bundles the app into static files &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;production. npm &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;Starts the &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;runner. npm run eject Removes this tool and copies build dependencies, configuration files and scripts into the app directory. If you &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;this, you can’t go back! We suggest that you begin by typing: &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;temp npm start Happy hacking! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 위와 같이 프로젝트가 제대로 생성되지 않고 에러가 발생한다면, 해당 에러를 해결할 필요가 있습니다. 해당 에러를 해결하지 않으면 커스텀 템플릿을 배포해도 제대로 동작하지 않게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;배포-준비&quot;&gt;배포 준비&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;용 커스텀 테플릿이 완성되었습니다. 이제 이 프로젝트를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하여 사용할 수 있도록 할 필요가 있습니다.&lt;/p&gt; &lt;p&gt;다음은 배포를 위한 파일들을 추가한 폴더 구조입니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cra-template-deku ├── CHANGELOG.md ├── LICENSE ├── README.md ├── package.json ├── template │   ├── README.md │   ├── gitignore │   ├── public │   ├── src │   └── tsconfig.json └── template.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;루트 폴더에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하기 위한 파일입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션으로 프로젝트를 생성할 때에는 이 내용들은 포함되지 않습니다.&lt;/p&gt; &lt;p&gt;반대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;template&lt;/code&gt; 폴더안에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--template&lt;/code&gt; 옵션으로 생성된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트에 포함되게 됩니다.&lt;/p&gt; &lt;h2 id=&quot;배포&quot;&gt;배포&lt;/h2&gt; &lt;p&gt;오픈소스를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NPM&lt;/code&gt;에 배포하는 방법에 대해서는 다음 블로그 포스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/share/deploy-npm-library/&quot; target=&quot;_blank&quot;&gt;NPM에 자신의 라이브러리 배포하기&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 때, 사용할 수 있는 커스텀 템플릿을 생성하는 방법에 대해서 알아보았습니다. 여러분도 자신만의 템플릿을 제작하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 프로젝트를 생성할 때, 자신만의 템플릿을 활용해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="react"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/react/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/react/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Code Quality] Stylelint V15</title><link href="https://deku.posstree.com/ko/code_quality/stylelint/v15/" rel="alternate" type="text/html" title="[Code Quality] Stylelint V15"/><published>2023-10-03T00:00:00+09:00</published><updated>2023-10-05T20:38:25+09:00</updated><id>https://deku.posstree.com/code_quality/stylelint/stylelint-v15-ko</id><content type="html" xml:base="https://deku.posstree.com/code_quality/stylelint/v15/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%EA%B0%9C%EC%9A%94&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#css%EB%A5%BC-%EC%9C%84%ED%95%9C-stylelint&quot;&gt;CSS를 위한 Stylelint&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#scss%EB%A5%BC-%EC%9C%84%ED%95%9C-stylelint&quot;&gt;SCSS를 위한 Stylelint&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#css-in-js%EB%A5%BC-%EC%9C%84%ED%95%9C-stylelint&quot;&gt;CSS-in-JS를 위한 Stylelint&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#stylelint-order&quot;&gt;stylelint-order&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%EC%99%84%EB%A3%8C&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;웹 개발을 하면, 웹의 스타일을 관리하기 위해 CSS(Cascading Style Sheets)를 사용하게 됩니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 사용하여 CSS, SCSS 와 CSS-in-JS의 코드 스타일을 검사해 보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://stylelint.io/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Stylelint&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;css를-위한-stylelint&quot;&gt;CSS를 위한 Stylelint&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; 파일안의 스타일 내용을 검사할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; 파일안의 스타일을 검사하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; stylelint stylelint-config-standard &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 설치한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.stylelintrc.json&lt;/code&gt; 파일을 생성하고 다음과 같이 수정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-config-standard&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;의 설치와 설정이 끝났다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; 파일의 내용을 검사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx stylelint &lt;span class=&quot;s2&quot;&gt;&quot;**/*.css&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일을 수정하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 실행하는 명령어를 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint:css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint --ignore-path .gitignore &apos;**/*.css&apos;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint:css&lt;/code&gt; 명령어는 다음과 같이 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lint:css &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;scss를-위한-stylelint&quot;&gt;SCSS를 위한 Stylelint&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SCSS&lt;/code&gt; 파일안의 스타일 내용을 검사할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SCSS&lt;/code&gt; 파일안의 스타일을 검사하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; stylelint stylelint-config-standard-scss &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 설치한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.stylelintrc.json&lt;/code&gt; 파일을 생성하고 다음과 같이 수정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-config-standard-scss&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;의 설치와 설정이 끝났다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SCSS&lt;/code&gt; 파일의 내용을 검사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx stylelint &lt;span class=&quot;s2&quot;&gt;&quot;**/*.scss&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일을 수정하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 실행하는 명령어를 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint:css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint --ignore-path .gitignore &apos;**/*.scss&apos;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint:css&lt;/code&gt; 명령어는 다음과 같이 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lint:css &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;css-in-js를-위한-stylelint&quot;&gt;CSS-in-JS를 위한 Stylelint&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS(JavaScript)&lt;/code&gt; 파일안의 스타일 내용을 검사할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt; 파일안의 스타일을 검사하기 위해 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; stylelint stylelint-config-standard postcss-styled-syntax &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 설치한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 사용하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.stylelintrc.json&lt;/code&gt; 파일을 생성하고 다음과 같이 수정할 필요가 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-config-standard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;customSyntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;postcss-styled-syntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;의 설치와 설정이 끝났다면, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JS&lt;/code&gt; 파일의 내용을 검사할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx stylelint &lt;span class=&quot;s2&quot;&gt;&quot;**/*.(css|tsx)&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;또는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일을 수정하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 실행하는 명령어를 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint:css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint --ignore-path .gitignore &apos;**/*.(css|tsx)&apos;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 만든 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lint:css&lt;/code&gt; 명령어는 다음과 같이 실행할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lint:css &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;stylelint-order&quot;&gt;stylelint-order&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt;를 작성할 때, 스타일의 속성(Property)의 순서는 작성할 때마다 다른 경우가 많습니다. 이때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stylelint-order&lt;/code&gt;를 사용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt;의 속성을 알파벳순으로 정렬할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;stylelint-order: &lt;a href=&quot;https://github.com/hudochenkov/stylelint-order&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/hudochenkov/stylelint-order&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stylelint-order&lt;/code&gt;를 사용하기 위해서는 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stylelint-order&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;stylelint-order &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.stylelintrc.json&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-config-standard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;customSyntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;postcss-styled-syntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;plugins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylelint-order&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;order/properties-alphabetical-order&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 다음 명령어를 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;가 스타일의 속성이 알파벳순이 아닌 경우 에러를 발생시키는 것을 알 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lint:css &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stylelint&lt;/code&gt;를 사용하여 CSS, SCSS 파일의 스타일 내용을 검사하는 방법에 대해서 알아보았습니다. 또한, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;styled-components&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Emotion&lt;/code&gt;과 같은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS-in-JS&lt;/code&gt; 형식의 스타일도 검사하는 방법에 대해서 살펴보았습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/code_quality/stylelint/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/code_quality/stylelint/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Web] Google Web Font 로드 최적화</title><link href="https://deku.posstree.com/ko/web/optimization_load_google_font/" rel="alternate" type="text/html" title="[Web] Google Web Font 로드 최적화"/><published>2023-03-12T00:00:00+09:00</published><updated>2023-03-19T09:12:05+09:00</updated><id>https://deku.posstree.com/web/optimization-load-font-ko</id><content type="html" xml:base="https://deku.posstree.com/web/optimization_load_google_font/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preconnect&quot;&gt;Preconnect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#preload&quot;&gt;Preload&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chrome&lt;/code&gt; 브라우저에서는 웹 페이지의 성능을 측정할 수 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;라는 기능을 제공하고 있습니다. 이 기능을 사용하면 웹 페이지의 전반적인 성능을 확인할 수 있고, 다음과 같이 문제점도 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/web/2023/optimization_load_google_font/render_blocking_resources_issue_of_google_web_font.png&quot; alt=&quot;Optimization loading Google web font - Lighthouse Eliminate render-blocking resources issue of google web font&quot; /&gt; &lt;/picture&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;의 로딩을 최적화하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eliminate render-blocking resources&lt;/code&gt; 문제를 해결하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;preconnect&quot;&gt;Preconnect&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt;는 현재 페이지에서 외부 도메인의 리소스를 가져올 때, 웹 브라우저에 미리 외부 도메인과 연결을 하도록 도와줍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preconnect: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preconnect&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preconnect&lt;/code&gt;는 다음과 같이 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이를 활용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 가져오는 속도를 향상시킬 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 가져오는 속도를 향상시키기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head /&amp;gt;&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 불러오는 코드보다 상위에 다음과 같이 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preconnect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.gstatic.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;preload&quot;&gt;Preload&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt;는 현재 웹 페이지에서 사용할 리소스들을 웹 브라우저에게 페이지를 렌더링하기 전에 미리 불러오도록 알려줍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preload: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/docs/Web/HTML/Attributes/rel/preload&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Preload&lt;/code&gt;는 다음과 같이 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.js&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이를 활용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 가져오는 속도를 향상시킬 수 있으며, 웹 페이지의 렌더링전에 미리 가져오므로 페이지 렌더링시 미리 준비된 폰트를 사용할 수 있게 됩니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 가져오는 속도를 향상시키기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;를 가져오는 코드를 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://fonts.googleapis.com/css?family=Noto+Sans&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 웹 페이지 성능 향상을 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Web Font&lt;/code&gt;의 로딩을 최적화하는 방법에 대해서 알아보았습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;에서 자주 발생하는 지적 사항이므로 이번 기회에 잘 기억해 두면 좋을 거 같습니다. 혹시 브라우저가 아닌 로컬이나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 환경에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행시키는 방법에 대해 궁금하신 분들은 아래 링크를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/code_quality/lighthouse_ci/&quot; target=&quot;_blank&quot;&gt;[Code Quality] Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="web"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/web/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/web/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Code Quality] Lighthouse CI</title><link href="https://deku.posstree.com/ko/code_quality/lighthouse_ci/" rel="alternate" type="text/html" title="[Code Quality] Lighthouse CI"/><published>2023-03-11T00:00:00+09:00</published><updated>2023-10-17T10:00:58+09:00</updated><id>https://deku.posstree.com/code_quality/lighthouse-ci-ko</id><content type="html" xml:base="https://deku.posstree.com/code_quality/lighthouse_ci/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-ci&quot;&gt;Lighthouse CI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-ci-설치&quot;&gt;Lighthouse CI 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-ci-설정&quot;&gt;Lighthouse CI 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#대상-설정&quot;&gt;대상 설정&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#정적-파일&quot;&gt;정적 파일&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#특정-url-설정&quot;&gt;특정 URL 설정&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#하위-폴더-문제&quot;&gt;하위 폴더 문제&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#lighthouse-실행&quot;&gt;Lighthouse 실행&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ci-환경에서-실행&quot;&gt;CI 환경에서 실행&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitlab-ci&quot;&gt;GitLab CI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#basic-authentication&quot;&gt;Basic authentication&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Chrome&lt;/code&gt; 브라우저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;라는 기능을 제공하며, 이를 통해 웹 앱 또는 웹 페이지의 성능을 측정할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/code_quality/lighthouse_ci/google_chrome_lighthouse.png&quot; alt=&quot;Lighthouse CI - Google Chrome Lighthouse&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;는 웹 앱 또는 웹 페이지를 분석하여, 웹 사이트의 성능과 모범 사례(Best practices)를 확인할 수 있게 도와주는 툴입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 로컬 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 환경에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;lighthouse-ci&quot;&gt;Lighthouse CI&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI(Continuous Integration)&lt;/code&gt; 환경에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 실행과 결과를 확인할 수 있도록 도와주는 툴 입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lighthosue CI: &lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-ci&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;를 로컬 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 환경에서 실행시키기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16&lt;/code&gt; 버전 이상의 환경이 구성되어있어야 합니다.&lt;/p&gt; &lt;h2 id=&quot;lighthouse-ci-설치&quot;&gt;Lighthouse CI 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt; 환경 위에서 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 없는 경우, 다음 명령어를 실행하여 전역 환경에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; @lhci/cli &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;lighthouse-ci-설정&quot;&gt;Lighthouse CI 설정&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;를 사용하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 설정할 필요가 있습니다. 프로젝트 루트 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 설정하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;가 제공하는 추천 설정을 그대로 사용할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;대상-설정&quot;&gt;대상 설정&lt;/h2&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;가 검사할 대상을 설정해야 합니다. 검사 대상은 정적 파일이나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;을 설정할 수 있습니다.&lt;/p&gt; &lt;h3 id=&quot;정적-파일&quot;&gt;정적 파일&lt;/h3&gt; &lt;p&gt;정적 파일은 개발중인 웹 사이트나 웹 페이지의 빌드 결과를 검사하는 방법입니다. 정적 파일을 검사하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 설정 파일인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;저는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;을 사용하여 블로그를 관리하고 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt;라는 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Markdown&lt;/code&gt;으로 작성한 블로그 포스트들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 파일로 빌드할 수 있습니다. 이렇게 빌드된 파일들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;라는 폴더에 생성됩니다.&lt;/p&gt; &lt;p&gt;이렇게 생성된 정적 파일들의 폴더를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;collect&lt;/code&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt; 옵션에 설정함으로써, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt;가 검사할 대상을 설정할 수 있습니다.&lt;/p&gt; &lt;h3 id=&quot;특정-url-설정&quot;&gt;특정 URL 설정&lt;/h3&gt; &lt;p&gt;정적 파일을 생성할 수 없는 경우, 검사 대상이 되는 페이지의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;을 입력하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행할 수 있습니다. 특정 URL을 검사하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 설정 파일인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이와같이 설정하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;는 해당 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;들을 검사하게 됩니다.&lt;/p&gt; &lt;h3 id=&quot;하위-폴더-문제&quot;&gt;하위 폴더 문제&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staticDistDir&lt;/code&gt;을 사용하여 폴더를 지정하였지만, 지정한 폴더의 하위 폴더에 있는 파일들을 검사하지 않는 문제가 발생하였습니다. 저는 이를 해결하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;을 활용하였습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt; 파일을 읽기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; 라이브러리를 사용하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;xml-js: &lt;a href=&quot;https://github.com/nashwaan/xml-js&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/nashwaan/xml-js&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xml-js&lt;/code&gt; 라이브러리를 설치하기 위해 다음 명령어를 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; xml-js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xml-js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/sitemap.xml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITEMAP_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml2json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;spaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;staticDistDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./_site/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITEMAP_PATH&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt;을 자신에 프로젝트에 맞게 수정하여 사용하시기 바랍니다. 이렇게 파일을 수정하고 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;에 작성된 URL을 읽어와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITE_URL&lt;/code&gt;을 사용하여 불필요한 URL을 제거한 후, 해당 URL을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 옵션에 설정함으로써, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;가 검사할 수 있도록 만들었습니다.&lt;/p&gt; &lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 수정하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;에 기록된 모든 페이지가 잘 검사되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;lighthouse-실행&quot;&gt;Lighthouse 실행&lt;/h2&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 사용하기 위한 모든 설정이 끝났습니다. 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일을 열고 다음과 같이 실행 스크립트를 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lighthouse&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lhci autorun&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@lhci/cli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.11.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음, 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run lighthouse &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 없는 경우, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt; 명령어를 직접 실행합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lhci autorun &lt;span class=&quot;c&quot;&gt;# npx lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;문제없이 실행되었다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; 폴더가 생성되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 결과가 저장되는 것을 확인할 수 있습니다. 또한, 터미널에서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;의 결과가 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... ✘ viewport failure &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;minScore assertion Does not have a &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; tag with &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;width&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; or &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;initial-scale&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; https://web.dev/viewport/ expected: &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;0.9 found: 0 all values: 0, 0, 0 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 터미널 결과를 보면서 문제를 수정하거나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouseci&lt;/code&gt; 폴더 안에 생성된 결과 파일(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.html&lt;/code&gt;)을 브라우저에서 열어 문제를 확인하여 수정할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;ci-환경에서-실행&quot;&gt;CI 환경에서 실행&lt;/h2&gt; &lt;p&gt;이렇게 설정한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 환경에서 실행하여 성능을 측정할 수 있습니다.&lt;/p&gt; &lt;h3 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하는 방법에 대해서 알아봅시다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/ci.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CI&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lighthouseci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v3&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 없는 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 부분과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; 부분을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 정적 파일들을 검사하도록 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 설정한 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; 명령어를 실행하기 전에 반드시 정적 파일들을 생성하는 명령어를 추가하시기 바랍니다.&lt;/p&gt; &lt;h3 id=&quot;gitlab-ci&quot;&gt;GitLab CI&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab CI&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthosue&lt;/code&gt;를 실행하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; 파일을 만들고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;lighthouse&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node:16-slim&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get update&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apt-get install -y libgtk-3.0 libgbm-dev libnss3 libatk-bridge2.0-0 libasound2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install --global npm@latest&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm run lighthouse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;merge_requests&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일이 없는 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 부분과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; 부분을 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install -g @lhci/cli&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;lhci autorun&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;만약, 정적 파일들을 검사하도록 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 설정한 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run lighthouse&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lhci autorun&lt;/code&gt; 명령어를 실행하기 전에 반드시 정적 파일들을 생성하는 명령어를 추가하시기 바랍니다.&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;basic-authentication&quot;&gt;Basic authentication&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;로 웹 페이지를 검사하도록 설정한 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt;이 설정된 웹 페이지를 검사해야할 경우가 있습니다.&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt;이 설정된 웹 페이지를 검사하기 위해서는 몇가지 추가적인 설정을 할 필요가 있습니다. 우선, 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt;을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; puppeteer &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음, 프로젝트의 루트 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteerScript.js&lt;/code&gt; 파일을 생성하고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_USER_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASIC_AUTH_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;환경 변수 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_USER_NAME&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC_AUTH_PASSWORD&lt;/code&gt;에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt;의 아이디와 암호를 저장합니다. 그런 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.lighthouserc.js&lt;/code&gt; 파일을 열고 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puppeteer&lt;/code&gt;을 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ci&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Korean&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/ko/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// English&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/en/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Japanese&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/flutter/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/react/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://deku.posstree.com/react-native/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./puppeteerScript.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;puppeteerLaunchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultViewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;--no-sandbox&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;lighthouse:recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이와같이 수정한 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하면 문제없이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic authentication&lt;/code&gt;가 설정된 웹 페이지가 잘 검사되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse CI&lt;/code&gt;를 사용하여 로컬 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt; 환경에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 실행하는 방법에 대해서 알아보았습니다. 빠른 웹 페이지 또는 웹 앱은 사용자 경험(UX)에 큰 영향을 줍니다. 또한, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;에서 측정하는 항목들은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SEO&lt;/code&gt;에도 큰 영향을 주므로, 여러분도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lighthouse&lt;/code&gt;를 사용하여 관리중인 웹 페이지 또는 웹 앱의 성능을 개선해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="code_quality"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/code_quality/lighthouse_ci/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] 서버 데이터의 한글, 일본어 깨짐 수정</title><link href="https://deku.posstree.com/ko/flutter/http_response_decode/" rel="alternate" type="text/html" title="[Flutter] 서버 데이터의 한글, 일본어 깨짐 수정"/><published>2023-03-05T00:00:00+09:00</published><updated>2023-03-10T17:44:48+09:00</updated><id>https://deku.posstree.com/flutter/http_response_decode-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/http_response_decode/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#http로-데이터-가져오기&quot;&gt;http로 데이터 가져오기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#한글이나-일본어가-포함된-경우&quot;&gt;한글이나 일본어가 포함된 경우&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#utf8decode&quot;&gt;utf8.decode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter에서 서버와 통신을 할 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 패키지를 사용합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;http 패키지: &lt;a href=&quot;https://pub.dev/packages/http&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://pub.dev/packages/http&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 때, 서버로부터 전달받은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 데이터의 한글이나 일본어를 화면에 표시할 때, 글자가 깨지는 문제가 발생할 때가 있습니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 패키지를 사용하여 서버로부터 전달받은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 데이터의 한글이나 일본어가 깨져서 표시되는 문제를 해결하는 방법에 대해서 알아보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;http로-데이터-가져오기&quot;&gt;http로 데이터 가져오기&lt;/h2&gt; &lt;p&gt;Flutter에서는 보통 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 패키지를 사용하여 서버로부터 데이터를 받아오게 됩니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;package:http/http.dart&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${ENV.apiServer}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/data&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;headers:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Authorization&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Bearer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;application/json; charset=UTF-8&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonEncode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이때, 서버로부터 받은 데이터가 영어인 경우, 다음과 같이 문제없이 데이터가 표시됩니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: server error &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;한글이나-일본어가-포함된-경우&quot;&gt;한글이나 일본어가 포함된 경우&lt;/h2&gt; &lt;p&gt;하지만, 서버로부터 전달받은 데이터가 한글 또는 일본어인 경우, 다음과 같이 문자가 깨져서 표시되는 것을 확인할 수 있습니다. 이번 블로그 포스트에서는 서버 에러(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;サーバーエラー&lt;/code&gt;)를 일본어로 전달받은 경우에 대해서 알아보겠습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# flutter: サーバーエラー&lt;/span&gt; flutter: ãµã¼ãã¼ã¨ã©ã¼ &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;utf8decode&quot;&gt;utf8.decode&lt;/h2&gt; &lt;p&gt;이와 같이 서버로부터 전달받은 데이터의 문자가 깨지는 경우, 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt;를 사용하여 문제를 해결할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;dart:convert&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonDecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bodyBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;error_message&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이렇게 코드를 수정하고, 데이터를 확인해 보면 다음과 같이 데이터가 잘 표시되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter: サーバーエラー &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http&lt;/code&gt; 패키지를 사용하여 서버로부터 전달받은 데이터안의 한글 또는 일본어가 깨지는 문제를 해결하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt;을 사용하는 방법에 대해서 알아보았습니다. 혹시 서버로부터 전달받은 데이터의 문자가 제대로 표시되지 않는 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf8.decode&lt;/code&gt;을 사용해 보시기 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] 자식 위젯의 크기와 상관없이 스크롤하기</title><link href="https://deku.posstree.com/ko/flutter/AlwaysScrollableScrollPhysics/" rel="alternate" type="text/html" title="[Flutter] 자식 위젯의 크기와 상관없이 스크롤하기"/><published>2023-03-04T00:00:00+09:00</published><updated>2023-10-16T20:32:23+09:00</updated><id>https://deku.posstree.com/flutter/AlwaysScrollableScrollPhysics-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/AlwaysScrollableScrollPhysics/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#alwaysscrollablescrollphysics&quot;&gt;AlwaysScrollableScrollPhysics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter에서 리스트가 있는 앱을 개발할 때, 우리는 종종 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; 위젯을 사용합니다. 이때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;당겨서 새로고침(Pull to refresh)&lt;/code&gt;과 같이 특정 기능을 사용하기 위해, 자식 위젯의 크기와 상관없이 항상 스크롤을 할 수 있게 만들 필요가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/flutter/widget/RefreshIndicator/&quot; target=&quot;_blank&quot;&gt;[Flutter] 당겨서 새로고침&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; 위젯에서 자식 위젯의 크기와 상관없이 스크롤이 가능하도록 만드는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;h2 id=&quot;alwaysscrollablescrollphysics&quot;&gt;AlwaysScrollableScrollPhysics&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; 위젯은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; 옵션을 가지고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;SingleChildScrollView: &lt;a href=&quot;https://api.flutter.dev/flutter/widgets/SingleChildScrollView/physics.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/widgets/SingleChildScrollView/physics.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이 옵션을 사용하면 자식 위젯의 크기와 상관없이 스크롤의 동작을 조절할 수 있습니다. 이 옵션에 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AlwaysScrollableScrollPhysics&lt;/code&gt;를 사용하면 자식 위젯의 크기와 상관없이 항상 스크롤이 가능하도록 만들 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SingleChildScrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;physics:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlwaysScrollableScrollPhysics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; 위젯 이외에도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ListView&lt;/code&gt; 위젯과 같이 스크롤이 가능한 위젯에는 대부분 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; 옵션을 가지고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ScrollView: &lt;a href=&quot;https://api.flutter.dev/flutter/widgets/ScrollView/physics.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/widgets/ScrollView/physics.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;따라서 스크롤의 동작을 변경할 필요가 있는 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; 옵션을 살펴보면 도움이 됩니다.&lt;/p&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SingleChildScrollView&lt;/code&gt; 위젯에서 자식 위젯의 크기와 상관없이 항상 스크롤이 가능하도록 만들기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;physics&lt;/code&gt; 옵션에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AlwaysScrollableScrollPhysics&lt;/code&gt;을 설정하는 방법에 대해서 알아보았습니다. 이 옵션을 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;당겨서 새로고침&lt;/code&gt; 기능을 구현할 수 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;당겨서 새로고침&lt;/code&gt;의 구현에 관해 궁금하신 분들은 이전 블로그 포스트를 참고하시기 바랍니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/flutter/widget/RefreshIndicator/&quot; target=&quot;_blank&quot;&gt;[Flutter] 당겨서 새로고침(Pull to refresh)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">pyenv를 사용하여 Python 버전 관리하기</title><link href="https://deku.posstree.com/ko/environment/pyenv/" rel="alternate" type="text/html" title="pyenv를 사용하여 Python 버전 관리하기"/><published>2023-02-26T00:00:00+09:00</published><updated>2023-03-02T17:54:07+09:00</updated><id>https://deku.posstree.com/environment/pyenv-ko</id><content type="html" xml:base="https://deku.posstree.com/environment/pyenv/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-설치&quot;&gt;pyenv 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-virtualenv-설치&quot;&gt;pyenv-virtualenv 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-버전-리스트&quot;&gt;Python 버전 리스트&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-399-설치&quot;&gt;Python 3.9.9 설치&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-versions&quot;&gt;pyenv versions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pyenv-version&quot;&gt;pyenv version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#설치한-python-버전-사용하기&quot;&gt;설치한 Python 버전 사용하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-가상-환경-생성&quot;&gt;Python 가상 환경 생성&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-version-파일&quot;&gt;.python-version 파일&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-버전-삭제하기&quot;&gt;Python 버전 삭제하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;여러 Python 프로젝트를 하나의 머신(PC)에서 개발하다보면, 각각의 프로젝트에서 사용하는 Python 버전에 따라 개발 환경을 구축해야할 경우가 있습니다.&lt;/p&gt; &lt;p&gt;이때, 매번 Python을 지우고 해당 프로젝트에 필요한 Python 버전을 설치할 수는 없습니다. 이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;를 사용하여 하나의 머신에서 다양한 Python 버전을 설치하고 관리하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;pyenv: &lt;a href=&quot;https://github.com/pyenv/pyenv&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/pyenv/pyenv&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;pyenv-설치&quot;&gt;pyenv 설치&lt;/h2&gt; &lt;p&gt;다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;macOS: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install pyenv&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Windwos: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;choco install pyenv-win&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;인 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 파일을 열고 다음과 같은 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;# pyenv setting&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv init &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;pyenv-virtualenv-설치&quot;&gt;pyenv-virtualenv 설치&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;의 플러그인으로 Python의 가상 환경을 만들 수 있게 도와주는 플러그인입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;pyenv-virtualenv: &lt;a href=&quot;https://github.com/pyenv/pyenv-virtualenv&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/pyenv/pyenv-virtualenv&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그럼 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;를 설치합니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;macOS: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install pyenv-virtualenv&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Windows: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install pyenv-virtualenv&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt;인 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 파일을 열고 다음과 같은 내용을 추가합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# code ~/.zshrc&lt;/span&gt; ... &lt;span class=&quot;c&quot;&gt;# pyenv-virtualenv setting&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;python-버전-리스트&quot;&gt;Python 버전 리스트&lt;/h2&gt; &lt;p&gt;다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;로 설치 가능한 Python 버전을 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 설치 가능한 Python의 버전 리스트를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... stackless-3.2.5 stackless-3.3.5 stackless-3.3.7 stackless-3.4-dev stackless-3.4.2 stackless-3.4.7 stackless-3.5.4 stackless-3.7.5 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;python-399-설치&quot;&gt;Python 3.9.9 설치&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; 버전을 설치해 보도록 하겠습니다. 다음 명령어를 실행하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt; 버전을 설치합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;pyenv-versions&quot;&gt;pyenv versions&lt;/h2&gt; &lt;p&gt;설치가 완료되었다면, 다음 명령어를 실행하여 설치된 Python 버전을 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 방금 설치한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt;를 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;pyenv-version&quot;&gt;pyenv version&lt;/h2&gt; &lt;p&gt;다음 명령어를 실행하면 현재 사용중인 Python 버전을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv version &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 현재 사용중인 버전을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /Users/dev-yakuza/.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;설치한-python-버전-사용하기&quot;&gt;설치한 Python 버전 사용하기&lt;/h2&gt; &lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;로 설치한 Python 버전을 사용하는 방법에 대해서 알아봅시다. 다음 명령어를 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 3.9.9&lt;/code&gt;를 전역적으로 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv global 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다음 명령어를 사용하면 현재 프로젝트에만 적용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이 명령어는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; 파일을 생성하고 개발 환경에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;가 활성화되어 있는 경우, 자동으로 해당 버전을 사용하도록 변경해 줍니다.&lt;/p&gt; &lt;p&gt;다음 명령어를 사용하면 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell&lt;/code&gt;에서만 해당 버전을 사용할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv shell 3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;python-가상-환경-생성&quot;&gt;Python 가상 환경 생성&lt;/h2&gt; &lt;p&gt;여러 프로젝트가 동일한 Python 버전을 사용하지만, 설치하는 라이브러리의 버전이 다를 수 있습니다. 이럴 경우, 의도하지 않은 버전의 라이브러리가 사용되어 문제를 발생 시킬 수 있습니다.&lt;/p&gt; &lt;p&gt;이럴 때, 동일한 버전의 Python을 사용하여 각각의 프로젝트용 가상 환경을 만들고, 그 가상 환경위에서 개발을 하면 이 문제를 해결할 수 있습니다.&lt;/p&gt; &lt;p&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;을 사용하여 가상 환경을 만들어 봅시다. 다음 명령어를 사용하여 Python 가상 환경을 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# pyenv virtualenv VERSION NAME&lt;/span&gt; pyenv virtualenv 3.9.9 venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;생성이 완료되었다면 다음 명령어를 사용하여 Python 가상 환경이 잘 생성되었는지 확인합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 가상 환경이 잘 생성된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 3.9.9/envs/venv venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이제 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt;로 생성한 가상 환경을 활성화 시켜봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv activate venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그런 다음 다시 다음 명령어를 실행하여 가상 환경이 활성화되었는지 확인해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;문제가 없다면 다음과 같이 가상 환경이 잘 활성화된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; system 3.9.9 3.9.9/envs/venv &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; venv &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by PYENV_VERSION environment variable&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;가상 환경위에서 모든 작업을 끝냈다면, 다음 명령어를 실행하여 가상 환경을 비활성화시킬 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv deactivate &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;다시 다음 명령어를 실행하여 가상 환경이 잘 비활성화되었는지 확인해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 가상 환경이 비활성화된 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 3.9.9 3.9.9/envs/venv venv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;python-version-파일&quot;&gt;.python-version 파일&lt;/h2&gt; &lt;p&gt;앞서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv local&lt;/code&gt; 명령어를 실행하면 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; 파일이 생성되는 것을 확인할 수 있었습니다. 이를 통해, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;를 사용하는 개발 환경에서는 자동으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt;의 버전을 변경해 줍니다. 만약 해당 Python 버전이 없는 경우 다음 명령어를 사용하여 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt;에 작성된 Python 버전을 설치할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그러므로 이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; 파일을 사용하면 해당 프로젝트를 실행하기 위한 Python의 버전을 공유할 수 있습니다. 만약, 현재 프로젝트의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; 파일이 없는 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.python-version&lt;/code&gt; 파일을 만들고 다음과 같이 해당 프로젝트에서 필요로 하는 Python의 버전을 작성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3.9.9 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;python-버전-삭제하기&quot;&gt;Python 버전 삭제하기&lt;/h2&gt; &lt;p&gt;머신에서 더이상 사용하지 않는 Python 버전이나 Python 가상 환경이 있는 경우, 다음 명령어를 사용하여 해당 버전(가상 환경)을 제거할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv uninstall 3.9.9 &lt;span class=&quot;c&quot;&gt;# pyenv uninstall venv&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이것으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;를 사용하여 동일한 머신에 다양한 Python 버전을 사용하는 방법에 대해서 알아보았습니다. 또한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv-virtualenv&lt;/code&gt; 플러그인을 사용하여 Python의 가상 환경을 구성하는 방법에 대해서도 알아보았습니다. 만약, 여러분이 다양한 Python 버전의 개발 환경이 필요한 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyenv&lt;/code&gt;를 사용하여 버전 관리를 해보시길 바랍니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2020/nvm/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2020/nvm/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] 테스트 코드에서 부모 위젯이나 자식 위젯 찾기</title><link href="https://deku.posstree.com/ko/flutter/test/find_child_and_parent_widget/" rel="alternate" type="text/html" title="[Flutter] 테스트 코드에서 부모 위젯이나 자식 위젯 찾기"/><published>2023-02-25T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://deku.posstree.com/flutter/test/find_child_and_parent_widget-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/test/find_child_and_parent_widget/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#프로젝트-준비하기&quot;&gt;프로젝트 준비하기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#부모-위젯-찾기&quot;&gt;부모 위젯 찾기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#자식-위젯-찾기&quot;&gt;자식 위젯 찾기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter에서 테스트 코드를 작성하다보면 부모 위젯을 찾거나 자식 위젯을 찾아 위젯의 값을 확인해야할 때가 있습니다.&lt;/p&gt; &lt;p&gt;이번 블로그 포스트에서는 테스트 코드에서 부모 위젯 또는 자식 위젯을 찾아 값을 확인하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;p&gt;여기서 소개하는 소스코드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 확인하실 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/test/find_child_and_parent_widget&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/test/find_child_and_parent_widget&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;프로젝트-준비하기&quot;&gt;프로젝트 준비하기&lt;/h2&gt; &lt;p&gt;테스트 코드에서 부모 위젯이나 자식 위젯을 찾는 방법을 알아보기 위해, 다음 명령어를 실행하여 새로운 프로젝트를 생성합니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter create find_child_and_parent_widget &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;이번 블로그 포스트에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter create&lt;/code&gt; 명령어로 생성된 기본 앱의 테스트 코드를 수정하여 부모나 자식 위젯에 접근하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/find_child_and_parent_widget/basic_app.png&quot; alt=&quot;Flutter find child and parent widget - basic_app&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;부모-위젯-찾기&quot;&gt;부모 위젯 찾기&lt;/h2&gt; &lt;p&gt;테스트 코드에서 부모 위젯을 찾기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findAncestorWidgetOfExactType&lt;/code&gt;을 사용해야 합니다. 부모 위젯을 찾는 방법에 대해 알아보기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/widget_test.dart&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Find parent widget&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;You have pushed the button this many times:&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAncestorWidgetOfExactType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;You have pushed the button this many times:&lt;/code&gt; 문자열을 가지는 요소(Element)를 찾고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findAncestorWidgetOfExactType&lt;/code&gt; 함수를 통해, 가장 가까운 부모 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Column&lt;/code&gt; 위젯을 찾습니다.&lt;/p&gt; &lt;p&gt;그런 다음 자식 위젯의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt; 위젯에 표시되는 문자열을 확인하는 테스트 코드를 작성하였습니다. 이렇게 테스트 코드를 작성하였다면 다음 명령어를 실행하여 테스트 코드를 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test test&lt;/span&gt;/widget_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼, 다음과 같이 문제없이 테스트 코드가 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:04 +1: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;자식-위젯-찾기&quot;&gt;자식 위젯 찾기&lt;/h2&gt; &lt;p&gt;테스트 코드에서 자식 위젯을 찾기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;descendant&lt;/code&gt;을 사용해야 합니다. 자식 위젯을 찾는 방법을 알아보기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test/widget_test.dart&lt;/code&gt; 파일을 열고 다음과 같이 수정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;testWidgets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Find child widget&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WidgetTester&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pumpWidget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;descendant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;of:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;matching:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;byType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Icons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scaffold&lt;/code&gt; 위젯을 기준으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Icon&lt;/code&gt; 타입의 자식 위젯을 찾고, 해당 위젯의 아이콘이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add&lt;/code&gt;인지 확인하는 테스트 코드를 작성하였습니다. 이렇게 테스트 코드를 작성하였다면 다음 명령어를 실행하여 테스트 코드를 실행해 봅니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test test&lt;/span&gt;/widget_test.dart &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼, 다음과 같이 문제없이 테스트 코드가 실행되는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:03 +2: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그 포스트에서는 Flutter에서 테스트 코드를 작성할 때, 부모 위젯이나 자식 위젯을 찾는 방법에 대해서 알아보았습니다. 종종 부모 위젯이나 자식 위젯을 찾아 테스트를 해야할 경우가 발생하므로, 이 부분을 잘 기억해 두면 도움이 될거 같습니다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ko"><title type="html">[Flutter] AppBar의 뒤로가기 버튼 없애기</title><link href="https://deku.posstree.com/ko/flutter/widget/hide_back_button/" rel="alternate" type="text/html" title="[Flutter] AppBar의 뒤로가기 버튼 없애기"/><published>2023-02-22T00:00:00+09:00</published><updated>2023-03-18T10:37:27+09:00</updated><id>https://deku.posstree.com/flutter/widget/hide-back-button-ko</id><content type="html" xml:base="https://deku.posstree.com/flutter/widget/hide_back_button/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;목차&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;개요&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#뒤로가기-버튼-없애기&quot;&gt;뒤로가기 버튼 없애기&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#완료&quot;&gt;완료&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;Flutter에서 화면을 전환하면, 아무런 설정을 하지 않아도 다음과 같이 두번째 화면의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt;에 뒤로가기 버튼이 자동으로 생기는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - back button&quot; /&gt; &lt;/picture&gt; &lt;p&gt;이번 블로그 포스트에서는 자동으로 생성된 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt;의 뒤로가기 버튼을 숨기는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt; &lt;p&gt;여기서 소개하는 소스코드는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 확인하실 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/dev-yakuza/study-flutter/tree/main/widget/hide_back_button&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/dev-yakuza/study-flutter/tree/main/widget/hide_back_button&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;뒤로가기-버튼-없애기&quot;&gt;뒤로가기 버튼 없애기&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; 위젯에서는 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;leading&lt;/code&gt;가 설정이 되어 있지 않아도 뒤로가기 버튼이 표시됩니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecondScreen&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecondScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Second Screen&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Go Back&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - back button&quot; /&gt; &lt;/picture&gt; &lt;p&gt;이렇게 표시된 뒤로가기 버튼을 없애기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; 위젯의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt;을 사용할 필요가 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;automaticallyImplyLeading: &lt;a href=&quot;https://api.flutter.dev/flutter/material/AppBar/automaticallyImplyLeading.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot;&gt;https://api.flutter.dev/flutter/material/AppBar/automaticallyImplyLeading.html&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;뒤로가기 버튼을 없애고자 하는 화면에서 다음과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; 위젯의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt;을 설정합니다.&lt;/p&gt; &lt;div class=&quot;language-dart highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecondScreen&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecondScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Scaffold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;appBar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;automaticallyImplyLeading:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Second Screen&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElevatedButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;onPressed:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Navigator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;child:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Go Back&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;그럼 다음과 같이 뒤로가기 버튼이 없어지는 것을 확인할 수 있습니다.&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2023/hide_back_button/hide_back_button.png&quot; alt=&quot;Flutter automaticallyImplyLeading - hide back button&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;완료&quot;&gt;완료&lt;/h2&gt; &lt;p&gt;이번 블로그에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppBar&lt;/code&gt; 위젯에서 자동으로 표시되는 뒤로가기 버튼을 없애는 방법에 대해서 알아보았습니다. 자동으로 뒤로가기 버튼을 만들어주므로 편하지만, 불필요한 경우도 있으니 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automaticallyImplyLeading&lt;/code&gt; 옵션을 잘 기억해 둡시다.&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>