[ { "title": "[Trufflehog] Secrets와 Credentials 검사", "description": "Trufflehog을 사용하여 코드에 Secrets와 Credentials가 포함되어 있는지 검사하는 방법에 대해서 알아보도록 하겠습니다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/trufflehog/","date": "2023-06-27T16:43:20+09:00", "category": "code_quality" },{ "title": "[GitHub Actions] Changelog 파일 자동 업데이트하기", "description": "GitHub Actions의 changelog-updater Action를 사용하여 Release note에 작성된 내용을 자동으로 CHANGELOG.md 파일로 복사하는 방법에 대해서 알아보도록 하겠습니다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/github_actions/changelog-updater-action/","date": "2023-05-25T17:13:30+09:00", "category": "code_quality" },{ "title": "[GitHub Actions] Pull request 라벨 검사하기", "description": "GitHub Actions의 PR Labels Checker를 사용하여 Pull request에 라벨이 설정되었는지 확인하는 방법에 대해서 알아보도록 하겠습니다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/github_actions/pr-labels-checker/","date": "2023-05-11T20:09:41+09:00", "category": "code_quality" },{ "title": "[GitHub Actions] Release Drafter를 사용하여 GitHub의 Release note 자동화 하기", "description": "GitHub Actions의 Release Drafter을 사용하여 Pull request의 제목으로 Release note를 자동으로 작성하는 방법에 대해서 알아보도록 하겠습니다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/github_actions/release-drafter/","date": "2023-05-25T17:13:30+09:00", "category": "code_quality" },{ "title": "[GitHub Actions] Pull request 제목 검사", "description": "GitHub Actions의 Conventional PR Title Action을 사용하여 Pull request의 제목이 규칙에 맞게 작성되었는지를 검사하는 방법에 대해서 알아보도록 하겠습니다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/github_actions/conventional-pr-title-action/","date": "2023-05-11T15:07:02+09:00", "category": "code_quality" },{ "title": "[Code Quality] Lighthouse CI", "description": "Google Chrome에서 제공하는 Lighthouse 기능을 로컬 또는 CI 환경에서 실행하는 방법에 대해서 알아보고, CI 환경에서 Lighthouse를 사용하여 웹 페이지의 성능을 자동으로 측정하도록 만드는 방법에 대해서 알아봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/lighthouse_ci/","date": "2023-03-15T21:30:55+09:00", "category": "code_quality" },{ "title": "[GitLab] Dependabot", "description": "GitLab에 Dependabot을 추가하여 프로젝트에서 사용하는 라이브러리 버전 업데이트를 자동화하는 방법에 대해서 설명합니다.","url": "https://dev-yakuza.posstree.com/ko/gitlab/dependabot/","date": "2023-03-15T21:30:55+09:00", "category": "code_quality" },{ "title": "[ESLint] eslint-plugin-import", "description": "ESLint의 eslint-plugin-import을 사용하여 import 부분을 정리하는 방법에 대해서 알아봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/eslint/eslint-plugin-import/","date": "2023-05-26T14:22:04+09:00", "category": "code_quality" },{ "title": "[Code Quality] Lefthook", "description": "Lefthook을 사용하여 Git의 commit을 실행할 때, 테스트나 Linter를 실행하도록 설정해 봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/lefthook/","date": "2023-03-11T21:17:54+09:00", "category": "code_quality" },{ "title": "[Code Quality] CSpell", "description": "CSpell을 사용하여 오탈자를 검사하는 방법에 대해서 알아봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/cspell/","date": "2023-03-11T21:17:54+09:00", "category": "code_quality" },{ "title": "[Code Quality] Stylelint", "description": "Stylelint를 사용하여 CSS, SCSS 파일의 코드 스타일과 CSS-in-JS의 코드 스타일을 검사해 봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/stylelint/","date": "2023-03-11T21:17:54+09:00", "category": "code_quality" },{ "title": "[Code Quality] remark-lint", "description": "remark-lint를 사용하여 마크다운(Markdown) 파일의 작성 스타일을 검사해 봅시다.","url": "https://dev-yakuza.posstree.com/ko/code_quality/remark-lint/","date": "2023-03-11T21:17:54+09:00", "category": "code_quality" }]