<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://deku.posstree.com/feed.xml" rel="self" type="application/atom+xml"/><link href="https://deku.posstree.com/" rel="alternate" type="text/html"/><updated>2024-04-01T08:04:53+09:00</updated><id>https://deku.posstree.com/feed.xml</id><title type="html">Deku</title><subtitle>『Programming Artist, DeKu』</subtitle><author><name>dev.yakuza@gmail.com</name></author><entry xml:lang="ja"><title type="html">[GitHub Actions] Reivewers自動設定</title><link href="https://deku.posstree.com/share/github-actions/set-reviewers/" rel="alternate" type="text/html" title="[GitHub Actions] Reivewers自動設定"/><published>2024-02-03T00:00:00+09:00</published><updated>2024-02-23T11:35:27+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-set-reviewers-ja</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/set-reviewers/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#dependabot-%E7%94%A8-github-actions&quot;&gt;Dependabot 用 GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#actionsgithub-script&quot;&gt;actions/github-script&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を生成すると、次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;に手動でレビュアーを設定していました。&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2024/set-reviewers/pull_request_reviewers.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2024/set-reviewers/pull_request_reviewers.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2024/set-reviewers/pull_request_reviewers.png&quot; alt=&quot;GitHub Actions - Set reviewers&quot; /&gt; &lt;/picture&gt; &lt;p&gt;今回のブログポストでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を使って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reiewers&lt;/code&gt;にレビュアーを自動で設定する方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;にレビュアーを自動で設定するためには、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/set_reviewers.yml&lt;/code&gt;ファイルを生成して次のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set-reviewers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout-minutes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actor=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=(&quot;USER_1&quot; &quot;USER_2&quot; &quot;USER_3&quot;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=($(printf &quot;%s\n&quot; &quot;${reviewers[@]}&quot; | grep -v &quot;$actor&quot; | shuf -n 2))&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=$(printf &apos;%s\n&apos; &quot;${reviewers[@]}&quot; | jq -R . | jq -s .)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl -X POST \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Content-Type: application/json&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Authorization: token $&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-d &quot;{ \&quot;reviewers\&quot;: $reviewers }&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://api.github.com/repos/$/pulls/$/requested_reviewers&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER_1&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER_2&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER_3&lt;/code&gt;の中から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を生成した人を除外してランダムに 2 人を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;に設定するように作りました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;reviewers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USER_1&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;USER_2&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;USER_3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;reviewers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;reviewers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$actor&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;shuf&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 2&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;には基本的に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を生成した人は設定できません。&lt;/p&gt; &lt;p&gt;この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を使うと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を生成するたびにランダムにレビュアーを設定してレビュアーを選ぶ時間を短縮することができます。&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;dependabot-用-github-actions&quot;&gt;Dependabot 用 GitHub Actions&lt;/h2&gt; &lt;p&gt;先ほど作成した&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;が作った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;では動かないです。この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;でも動作するようにするためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request&lt;/code&gt;部分を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request_target&lt;/code&gt;に修正する必要があります。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/set_reviewers.yml&lt;/code&gt;ファイルを開いて次のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request_target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set-reviewers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout-minutes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actor=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=(&quot;USER_1&quot; &quot;USER_2&quot; &quot;USER_3&quot;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=($(printf &quot;%s\n&quot; &quot;${reviewers[@]}&quot; | grep -v &quot;$actor&quot; | shuf -n 2))&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers=$(printf &apos;%s\n&apos; &quot;${reviewers[@]}&quot; | jq -R . | jq -s .)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl -X POST \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Content-Type: application/json&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Authorization: token $&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-d &quot;{ \&quot;reviewers\&quot;: $reviewers }&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://api.github.com/repos/$/pulls/$/requested_reviewers&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;が作った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;ではセキュリティ上の理由でどのような&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sercrets&lt;/code&gt;も使うことができず、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readonly&lt;/code&gt;動作のみが可能なためエラーが発生します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;GitHub Actions: Workflows triggered by Dependabot PRs will run with read-only permissions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://securitylab.github.com/research/github-actions-preventing-pwn-requests/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;これを修正するためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on&lt;/code&gt;の部分を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request_target&lt;/code&gt;に修正する必要があります。&lt;/p&gt; &lt;h2 id=&quot;actionsgithub-script&quot;&gt;actions/github-script&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;が提供している&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;actions/github-script&lt;/code&gt;を使うともっと読みやすいコードを書くことができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/actions/github-script&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;actions/github-script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;actions/github-script&lt;/code&gt;を使うと次のように修正することができます。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request_target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set-reviewers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout-minutes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set reviewers&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/github-script@v5&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;github-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const reviewers = [&quot;USER_1&quot;, &quot;USER_2&quot;, &quot;USER_3&quot;];&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const actor = context.payload.pull_request.user.login;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const { owner, repo } = context.repo;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const prNumber = context.payload.pull_request.number;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const { data: assignedReviewers } = await github.rest.pulls.listRequestedReviewers({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;owner,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pull_number: prNumber,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if (assignedReviewers.length === 0) {&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const filteredReviewers = reviewers.filter(reviewer =&amp;gt; reviewer !== actor);&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const selectedReviewers = filteredReviewers.sort(() =&amp;gt; Math.random() - 0.5).slice(0, 2);&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const prNumber = context.payload.pull_request.number;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;await github.rest.pulls.requestReviewers({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;owner,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pull_number: prNumber,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;reviewers: selectedReviewers&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;を自動で設定する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を作成することができました。この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を使うと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reviewers&lt;/code&gt;を設定する時間を減らすことができるし、特定のユーザーにレビューリクエストが集中させることを防ぐことができます。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[GitHub Actions] Assignees 自動設定</title><link href="https://deku.posstree.com/share/github-actions/set-assignees/" rel="alternate" type="text/html" title="[GitHub Actions] Assignees 自動設定"/><published>2024-02-03T00:00:00+09:00</published><updated>2024-02-20T19:51:52+09:00</updated><id>https://deku.posstree.com/share/github-actions/github-actions-set-assignees-ja</id><content type="html" xml:base="https://deku.posstree.com/share/github-actions/set-assignees/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%E4%BD%9C%E6%88%90&quot;&gt;GitHub Actions 作成&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#dependabot-%E7%94%A8-github-actions&quot;&gt;Dependabot 用 GitHub Actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#actionsgithub-script&quot;&gt;actions/github-script&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成する際、次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;を手動で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を設定していました。&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/share/2024/set-assignees/pull_request_assignees.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/share/2024/set-assignees/pull_request_assignees.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/share/2024/set-assignees/pull_request_assignees.png&quot; alt=&quot;GitHub Actions - Set assignees&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;は結局&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人なので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成するたびに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を自動で設定したいと思いました。&lt;/p&gt; &lt;p&gt;今回のブログポストでは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を使って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を自動で設定する方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;github-actions-作成&quot;&gt;GitHub Actions 作成&lt;/h2&gt; &lt;p&gt;それでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を自動で設定する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を作ってみましょう。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/set_assignees.yml&lt;/code&gt;ファイルを作成し、次のように修正します。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assigness&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set-assignees&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assignees&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout-minutes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assignees&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;OWNER=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;REPOSITORY=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TOKEN=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PULL_REQUEST_NUMBER=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ASSIGNEES=$(curl -s \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://api.github.com/repos/$OWNER/$REPOSITORY/issues/$PULL_REQUEST_NUMBER&quot; | \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jq --raw-output &apos;.assignees // [] | .[].login&apos;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [ -z &quot;$ASSIGNEES&quot; ]; then&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ASSIGNEE=$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl -X POST \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Content-Type: application/json&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Authorization: token $TOKEN&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-d &quot;{ \&quot;assignees\&quot;: \&quot;${ASSIGNEE}\&quot; }&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://api.github.com/repos/$REPOSITORY/issues/$PULL_REQUEST_NUMBER/assignees&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;が提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API&lt;/code&gt;を使って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.actor&lt;/code&gt;)を設定するようにしました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;公式ドキュメント: &lt;a href=&quot;https://docs.github.com/en/rest/issues/assignees?apiVersion=2022-11-28#list-assignees&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;List assignees&lt;/a&gt;&lt;/li&gt; &lt;li&gt;公式ドキュメント: &lt;a href=&quot;https://docs.github.com/en/rest/issues/assignees?apiVersion=2022-11-28#add-assignees-to-an-issue&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Add assignees to an issue&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;dependabot-用-github-actions&quot;&gt;Dependabot 用 GitHub Actions&lt;/h2&gt; &lt;p&gt;私は個人プロジェクトで&lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/working-with-dependabot&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Dependabot&lt;/a&gt;を使ってます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;が作った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;にプロジェクト&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Owner&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に設定したかったです。&lt;/p&gt; &lt;p&gt;このために&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を次のように修正しました。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assigness&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set-assignees&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assignees&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout-minutes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assignees&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;OWNER=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;REPOSITORY=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TOKEN=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PULL_REQUEST_NUMBER=&quot;$&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ASSIGNEES=$(curl -s \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://api.github.com/repos/$OWNER/$REPOSITORY/issues/$PULL_REQUEST_NUMBER&quot; | \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jq --raw-output &apos;.assignees // [] | .[].login&apos;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [ -z &quot;$ASSIGNEES&quot; ]; then&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ASSIGNEE=$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;BRANCH_NAME=$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ &quot;${BRANCH_NAME}&quot; == &quot;dependabot/&quot;* ]]; then&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ASSIGNEE=$OWNER&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;curl -X POST \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Content-Type: application/json&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-H &quot;Authorization: token $TOKEN&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-d &quot;{ \&quot;assignees\&quot;: \&quot;${ASSIGNEE}\&quot; }&quot; \&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://api.github.com/repos/$REPOSITORY/issues/$PULL_REQUEST_NUMBER/assignees&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;追加した内容は次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;branch&lt;/code&gt;名が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependabot/&lt;/code&gt;で始まる場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.repository_owner&lt;/code&gt;を設定するようにしました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;BRANCH_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BRANCH_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dependabot/&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ASSIGNEE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OWNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;しかし、この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;で正常に動作しませんでした。セキュリティーの理由で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dependabot&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;ではどの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sercrets&lt;/code&gt;も使用できないし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readonly&lt;/code&gt;の動作しかできないためエラーが発生しました。&lt;/p&gt; &lt;p&gt;これを修正するためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request&lt;/code&gt;ではなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pull_request_target&lt;/code&gt;を使用するように修正する必要があります。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;GitHub Actions: Workflows triggered by Dependabot PRs will run with read-only permissions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://securitylab.github.com/research/github-actions-preventing-pwn-requests/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assigness&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pull_request_target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;opened&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;actionsgithub-script&quot;&gt;actions/github-script&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;が提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;actions/github-script&lt;/code&gt;を使うともっと読みやすいコードを作成することができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/actions/github-script&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;actions/github-script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;actions/github-script&lt;/code&gt;を使うと次のように修正することができます。&lt;/p&gt; &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;assignees&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;assignees&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;automatically&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pull&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;request.&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;GitHub&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;token&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;composite&apos;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set assignees&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/github-script@v6&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;github-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const { owner, repo } = context.repo;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const prNumber = context.payload.pull_request.number;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const response = await github.request(`GET /repos/${owner}/${repo}/issues/${prNumber}`);&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const assignees = response.data.assignees.map(assignee =&amp;gt; assignee.login);&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if (assignees.length === 0) {&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;let assignee = context.actor;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;const branchName = context.payload.pull_request.head.ref;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if (branchName.startsWith(&apos;dependabot/&apos;)) {&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;assignee = owner;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;await github.rest.issues.addAssignees({&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;owner: owner,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo: repo,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;issue_number: prNumber,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;assignees: [assignee]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を自動で設定する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を作成しました。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成するたびに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignees&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pull request&lt;/code&gt;を作成した人を手動で設定してる場合、この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt;を使用して自動化してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/github-actions/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[macOS] スリープモードを防ぐコマンド</title><link href="https://deku.posstree.com/share/macos/caffeinate/" rel="alternate" type="text/html" title="[macOS] スリープモードを防ぐコマンド"/><published>2024-01-31T00:00:00+09:00</published><updated>2024-02-02T21:52:29+09:00</updated><id>https://deku.posstree.com/share/macos/caffeinate-ja</id><content type="html" xml:base="https://deku.posstree.com/share/macos/caffeinate/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate&quot;&gt;Caffeinate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate-%E7%B5%82%E4%BA%86&quot;&gt;Caffeinate 終了&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#caffeinate-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E7%90%86%E7%94%B1&quot;&gt;Caffeinate を使用する理由&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt; はデフォルトで省エネモードが設定されています。省エネモードは一定時間が経過すると自動的に画面を消したり、スリープモードに切り替えることで、電力消費を抑えたりノートパソコンのバッテリー寿命を延ばしたり、デスクトップのエネルギー効率を高めるのに役立ちます。&lt;/p&gt; &lt;p&gt;このブログポストでは &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを使って省エネモードが自動的に切り替わるのを防ぐ方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;caffeinate&quot;&gt;Caffeinate&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドは macOS で省エネモードが自動的に切り替わるのを防ぐコマンドです。このコマンドはシステムがアクティブな状態を維持することで、画面が消えたりコンピュータが自動的に省エネモードに入らないようにします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caffeinate &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;コンピュータで何も操作をしないとき、省エネモードに切り替わるのを防ぎたい場合は、次のようにコマンドを実行します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;caffeinate &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 3600 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;: 画面が消えるのを防ぎます。&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-t&lt;/code&gt;: 何秒間アクティブな状態を維持するか設定します。上記のコマンドは 1 時間アクティブな状態を維持します。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;ターミナルで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを実行した後、別のターミナルで時間がかかる作業を実行するとコンピュータが省エネモードに切り替わらずにアクティブな状態を維持することを確認できます。&lt;/p&gt; &lt;h2 id=&quot;caffeinate-終了&quot;&gt;Caffeinate 終了&lt;/h2&gt; &lt;p&gt;時間がかかる作業が終わったら、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを終了しなければなりません。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを実行したターミナルで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + C&lt;/code&gt; を押して &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを終了するか、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドが実行されたターミナルを終了することで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを終了できます。&lt;/p&gt; &lt;h2 id=&quot;caffeinate-を使用する理由&quot;&gt;Caffeinate を使用する理由&lt;/h2&gt; &lt;p&gt;設定で省エネモードを無効にする方法もありますが、省エネモードを無効にすると電力消費が増加し、バッテリー寿命が短くなる可能性があるため、基本的には有効にしておくのが良いです。設定で省エネモードを無効にした後、これを忘れてしまうと省エネモードが継続的に無効になった状態でコンピュータを使用することになり、バッテリー寿命が短くなるなどの問題が発生する可能性があります。&lt;/p&gt; &lt;p&gt;また、会社のコンピュータの場合、セキュリティ上の理由で席を空ける間に自動的に画面が消えるなどの設定を強制しています。&lt;/p&gt; &lt;p&gt;このとき、一時的に時間がかかる作業(コマンド)を実行しなければならない場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを使用して省エネモードが自動的に切り替わるのを防ぎ、作業が終わった後にコマンドを終了することで、基本設定を維持しながらも省エネモードが自動的に切り替わるのを防ぐことができます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを使って &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;macOS&lt;/code&gt; で省エネモードが自動的に切り替わるのを防ぐ方法について説明しました。皆さんも基本設定を維持しながらも省エネモードが自動的に切り替わるのを防ぎたい場合は &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caffeinate&lt;/code&gt; コマンドを使用してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="share"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/share/background/caffeinate.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/share/background/caffeinate.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[Flutter] Lexical or Preprocessor Issue (Xcode): *.h file not found エラー修正</title><link href="https://deku.posstree.com/flutter/error/lexical_or_preprocessor_file_not_found/" rel="alternate" type="text/html" title="[Flutter] Lexical or Preprocessor Issue (Xcode): *.h file not found エラー修正"/><published>2024-01-26T00:00:00+09:00</published><updated>2024-02-01T11:50:51+09:00</updated><id>https://deku.posstree.com/flutter/error/test-concurrency-ja</id><content type="html" xml:base="https://deku.posstree.com/flutter/error/lexical_or_preprocessor_file_not_found/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AE%E5%8E%9F%E5%9B%A0&quot;&gt;エラーの原因&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AE%E8%A7%A3%E6%B1%BA&quot;&gt;エラーの解決&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;Flutter プロジェクトを進行中、突然次のようなエラーが発生しました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter Lexical or Preprocessor Issue &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Xcode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;&apos;FirebaseABTesting/FirebaseABTesting.h&apos;&lt;/span&gt; file not found &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;特に修正した内容がないため、エラーが発生する理由がなかったが、このようなエラーが発生して iOS でプロジェクトをビルドできませんでした。今回のブログポストでは、Flutter で突然発生する &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; エラーを解決する方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;エラーの原因&quot;&gt;エラーの原因&lt;/h2&gt; &lt;p&gt;Flutter でプロジェクトを開発中、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; エラーが発生した場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt; のアップデートによる問題である可能性が高いです。&lt;/p&gt; &lt;p&gt;この場合は、ほとんどが &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt; のアップデートにより &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; のバージョンが低くなって発生する問題です。したがって、正常にビルドされていたプロジェクトも &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt; のアップデートにより &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; のバージョンが低くなって &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; エラーが発生することがあります。&lt;/p&gt; &lt;h2 id=&quot;エラーの解決&quot;&gt;エラーの解決&lt;/h2&gt; &lt;p&gt;この場合は &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; のバージョンを更新して解決することができます。私は &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt; で &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; をインストールしたため、次のように &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt; を使って &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; のバージョンを更新しました。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew upgrade cocoapods &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; を更新した後、問題があるプロジェクトに移動した後、次のコマンドを実行して &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pod&lt;/code&gt; を再インストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;必要であれば &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pods&lt;/code&gt; フォルダと &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Podfile.lock&lt;/code&gt; ファイルを削除した後、再度 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt; コマンドを実行して &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pod&lt;/code&gt; を再インストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; Pods Podfile.lock pod &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;これでプロジェクトを再ビルドすると正常にビルドされることを確認できます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これで Flutter で突然発生する &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; エラーを解決する方法について説明しました。皆さんも Flutter プロジェクトを進行中、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter Lexical or Preprocessor Issue (Xcode): *.h file not found&lt;/code&gt; エラーが発生した場合は、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt; のバージョンを更新して解決してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[Flutter] concurrencyオプションを使ってテストの実行速度を改善する</title><link href="https://deku.posstree.com/flutter/test/concurrency/" rel="alternate" type="text/html" title="[Flutter] concurrencyオプションを使ってテストの実行速度を改善する"/><published>2024-01-26T00:00:00+09:00</published><updated>2024-01-28T20:31:50+09:00</updated><id>https://deku.posstree.com/flutter/test/test-concurrency-ja</id><content type="html" xml:base="https://deku.posstree.com/flutter/test/concurrency/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#concurency-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3&quot;&gt;concurency オプション&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%82%B3%E3%82%A2%E6%95%B0%E7%A2%BA%E8%AA%8D&quot;&gt;コア数確認&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BC%83&quot;&gt;テストの実行速度比較&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#github-actions-%E3%81%A7%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BC%83&quot;&gt;GitHub Actions でテストの実行速度比較&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;Flutter でアプリを開発する時、テストコードを作成してこれを実行してサービスの安定性を高めます。しかし、プロジェクトの規模が大きくなるとテストコードの量も増え、それに伴ってテストコードを実行するのにかかる時間も増えてしまいます。&lt;/p&gt; &lt;p&gt;今回のブログポストでは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;オプションを使ってテストコードを並列で実行してテストの実行速度を改善する方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;concurency-オプション&quot;&gt;concurency オプション&lt;/h2&gt; &lt;p&gt;Flutter で test を実行する時、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;オプションを使ってテストコードを並列で実行することができます。これによってテストコードを実行するのにかかる時間を短縮することができます。&lt;/p&gt; &lt;p&gt;次のコマンドを実行すると Flutter の test コマンドで使えるオプションを確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;色んなオプションの中で次のように &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--concurrency&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; The number of concurrent &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;processes to run. This will be ignored when running integration tests. &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;公式ドキュメントでも &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを確認することができます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;公式ドキュメント: &lt;a href=&quot;https://pub.dev/packages/test#test-concurrency&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Test concurrency&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;コア数確認&quot;&gt;コア数確認&lt;/h2&gt; &lt;p&gt;Flutter の Test コマンドはデフォルトでホスト CPU コアの半分を使うように設定されています。.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Test suites run concurrently by default, using half of the host’s CPU cores.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;そのため、マシンのコア数の半分以下を &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションに設定すると、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを設定しないで実行する時よりも性能が落ちることがあります。&lt;/p&gt; &lt;p&gt;なので、現在のマシンのコア数を確認して、適切なコア数を設定する必要があります。次のコマンドを実行するとマシンのコア数を確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;テストの実行速度比較&quot;&gt;テストの実行速度比較&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使ってどの程度テストコードの実行速度が向上するのか確認してみましょう。Flutter プロジェクトで次のコマンドを使ってテストコードを実行してみます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら次のようにテストコードが実行された後、テストコードを実行するのにかかった時間を確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;02:10 +657: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使わずにテストコードを実行すると &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2分10秒&lt;/code&gt; かかることが確認できます。次に次のように &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使ってテストコードを実行してみます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--concurrency&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nproc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら次のようにテストコードが実行された後、テストコードを実行するのにかかった時間を確認することができます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;02:02 +657: All tests passed! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使うと &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8秒&lt;/code&gt; 程度テストコードの実行速度が向上することが確認できます。&lt;/p&gt; &lt;h2 id=&quot;github-actions-でテストの実行速度比較&quot;&gt;GitHub Actions でテストの実行速度比較&lt;/h2&gt; &lt;p&gt;私の場合ロカルマシンの性能(12 cores)が良いため、大きな効果を確認することができませんでしたが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; 環境ではもっと大きな効果を確認することができます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; で &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使わずにテストコードを実行した場合、次のように &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7分&lt;/code&gt; 程度かかることが確認できます。&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2024/test-concurrency/time_without_concurrency_option.png&quot; alt=&quot;Flutter - test without concurrency option&quot; /&gt; &lt;/picture&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Actions&lt;/code&gt; で &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt; オプションを使ってテストコードを実行した場合、次のように &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4分&lt;/code&gt; 程度かかることが確認できます。&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/flutter/2024/test-concurrency/time_with_concurrency_option.png&quot; alt=&quot;Flutter - test with concurrency option&quot; /&gt; &lt;/picture&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今回のブログポストでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;のテストで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;オプションを使ってテストの実行速度を改善する方法について説明しました。まだ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;オプションを使っていない場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;オプションを追加してテストの実行速度を改善してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="flutter"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/flutter/background.png"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/flutter/background.png" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[Monoepo] Yarn Workspaces</title><link href="https://deku.posstree.com/environment/monorepo/yarn_workspaces/" rel="alternate" type="text/html" title="[Monoepo] Yarn Workspaces"/><published>2024-01-18T00:00:00+09:00</published><updated>2024-03-10T11:36:58+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-yarn_workspaces-ja</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/yarn_workspaces/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E7%9B%AE%E6%AC%A1&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA&quot;&gt;ブログシリーズ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#yarn-workspaces&quot;&gt;Yarn Workspaces&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E4%BE%8B%E9%A1%8C&quot;&gt;例題&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#yarn-workspaces-%E3%81%AE%E8%A8%AD%E5%AE%9A&quot;&gt;Yarn Workspaces の設定&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#yarn-workspaces-%E7%A2%BA%E8%AA%8D&quot;&gt;Yarn Workspaces 確認&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gitignore&quot;&gt;gitignore&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;このブログポストでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使ってモノレポを構成する方法について紹介します。&lt;/p&gt; &lt;h2 id=&quot;ブログシリーズ&quot;&gt;ブログシリーズ&lt;/h2&gt; &lt;p&gt;このブログはシリーズで作成されました。次のリンクを通じて他のブログポストも確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[プロジェクト管理] リポジトリ戦略&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS のモジュールの読み込み&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] Yarn Workspaces&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;yarn-workspaces&quot;&gt;Yarn Workspaces&lt;/h2&gt; &lt;p&gt;前回のブログポストである&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;モノレポを使うためのツール&lt;/code&gt;で JavaScript パッケージマネージャである&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を紹介しました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;今回のブログポストでは実際に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;機能を使ってモノレポを構成する方法について紹介します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;公式ドキュメント: &lt;a href=&quot;https://yarnpkg.com/features/workspaces&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;は前回のブログポストで紹介した&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を使って複数のプロジェクトを単一のコードベースで管理できるようにしてくれる機能です。この機能を使えば簡単にモノレポを構成できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;例題&quot;&gt;例題&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;が提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspace&lt;/code&gt;機能を確認するための例題を作成してみましょう。まず、次のようにフォルダとファイル構造を作成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;最後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このようにファイルを構成した後、次のコマンドを実行してモジュールを正しく読み込めるか確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら次のようにエラーが発生することを確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;yarn-workspaces-の設定&quot;&gt;Yarn Workspaces の設定&lt;/h2&gt; &lt;p&gt;次は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;を使えるようにしてみます。まずルートフォルダ(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;)で次のコマンドを使って&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使えるようにします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn init &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そうするとルートフォルダに次のような内容を含んだ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;が作成されることを確認できます。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;monorepo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使うためにはこの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;ファイルを次のように修正する必要があります。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;monorepo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;private&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;workspaces&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;packages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;モノレポは複数のプロジェクトを持っている単一のコードベースであるため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;レジストリなどにデプロイする必要はありません。そのため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;に設定してモノレポがデプロイされないようにします。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn V1&lt;/code&gt;では必須ですが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn V2&lt;/code&gt;からは設定する必要はありません。安全に管理するために&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;に設定することをお勧めします。もちろん、モノレポ内の個々のプロジェクトはデプロイできるため、それぞれのプロジェクトは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt;を設定する必要はありません。&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;は配列(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;)またはオブジェクト(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;)を設定できます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;ではオブジェクト形式で作成することを推奨しています。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;の中に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;packages&lt;/code&gt;というキーで配列を作成し、それぞれのモジュールを追加しました。このようにそれぞれ指定してもよいですが、次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;を使って簡単にすべてのモジュールを指定することもできます。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;monorepo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;private&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;workspaces&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;packages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;yarn-workspaces-確認&quot;&gt;Yarn Workspaces 確認&lt;/h2&gt; &lt;p&gt;これで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使う準備が整いました。次のコマンドを実行してパッケージをインストールします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;フォルダがルートフォルダに作成され、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を使ってそれぞれのモジュールが接続されていることを確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ├── node_modules │ ├── module-a -&amp;gt; ../src/module-a │ └── module-b -&amp;gt; ../src/module-b ├── package.json ├── src │ ├── module-a │ │ ├── index.js │ │ └── package.json │ └── module-b │ ├── index.js │ └── package.json └── yarn.lock &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;これで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;を使えるようになりました。次のコマンドを実行して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;が正しく動作するか確認してみましょう。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すると次のように問題なく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;が実行されることを確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;もちろん&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;で接続されているため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;のコードを修正すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;でも修正されたコードを使うことができます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt;ファイルを開いて次のように修正します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console.log&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;module-b!!!&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして次のコマンドを実行して修正された内容が正しく表示されるか確認してみましょう。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すると次のように修正された内容が正しく表示されることを確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b!!! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;gitignore&quot;&gt;.gitignore&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;でソースコードを管理している場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;ファイルを作成して次のように修正して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;フォルダを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;から除外するようにします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# .gitignore&lt;/span&gt; node_modules &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでモノレポを使うため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使う方法についてみてみました。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;は基本的に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;で動作するため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;について理解するとよいでしょう。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;について詳しく知りたい場合は前回のブログポストを参照してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;皆さんも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yarn&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspaces&lt;/code&gt;を使ってモノレポを構成してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[Monoepo] Symlink</title><link href="https://deku.posstree.com/environment/monorepo/symlink/" rel="alternate" type="text/html" title="[Monoepo] Symlink"/><published>2024-01-17T00:00:00+09:00</published><updated>2024-03-10T11:36:58+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-symlink-ja</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/symlink/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E7%9B%AE%E6%AC%A1&quot;&gt;目次&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA&quot;&gt;ブログシリーズ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink&quot;&gt;Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E4%BE%8B%E9%A1%8C&quot;&gt;例題&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%E7%94%9F%E6%88%90&quot;&gt;Symlink 生成&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#symlink-%E7%A2%BA%E8%AA%8D&quot;&gt;Symlink 確認&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;モノレポで色んなモジュールの依存関係を連結する時、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を活用します。今回のブログポストではモノレポを理解するための基本知識である&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink(Symbolic Link)&lt;/code&gt;について説明します。&lt;/p&gt; &lt;h2 id=&quot;ブログシリーズ&quot;&gt;ブログシリーズ&lt;/h2&gt; &lt;p&gt;このブログはシリーズで制作されています。次のリンクを通じて他のブログポストも確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[プロジェクト管理] リポジトリ戦略&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS のモジュールの読み込み&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] Symlink&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/yarn_workspaces/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Yarn Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;symlink&quot;&gt;Symlink&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symbolic Link&lt;/code&gt;の略で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ファイル&lt;/code&gt;または&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ディレクトリ&lt;/code&gt;に対する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ショートカット(System shortcut)&lt;/code&gt;と考えれば良いです。&lt;/p&gt; &lt;p&gt;Symlink は主要 OS(macOS, Windows, Linux)でサポートする基本機能です。また、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;のパッケージマネージャーである&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;でもサポートしています。&lt;/p&gt; &lt;h2 id=&quot;例題&quot;&gt;例題&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;が提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;機能を確認するための例題を作ってみましょう。まず、次のようなフォルダとファイル構造を作成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;最後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このようにファイルを構成した後、次のコマンドを実行してモジュールを読み込めるか確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すると、次のようにエラーが発生することが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;symlink-生成&quot;&gt;Symlink 生成&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;機能を確認するため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;フォルダに移動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;移動した後、次のコマンドを実行して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を使う準備をします。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# yarn link&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;その後、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;を使ってる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;フォルダに移動します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .. &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;module-a &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;フォルダに移動したら、次のコマンドを実行して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を作成します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link&lt;/code&gt;コマンドを実行すると次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;フォルダの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;フォルダが生成され、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modules-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;が生成されたことが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ├── index.js ├── node_modules │ └── module-b -&amp;gt; ../../module-b └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;この&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;フォルダは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;をコピーしたのではなく、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;自体と連動しています。そのため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt;ファイルを修正すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt;ファイルも同時に修正され、逆に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt;ファイルを修正すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt;ファイルも同時に修正されます。&lt;/p&gt; &lt;h2 id=&quot;symlink-確認&quot;&gt;Symlink 確認&lt;/h2&gt; &lt;p&gt;次はプロジェクトのルートフォルダ(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;)に移動した後、次のコマンドを実行してモジュールを読み込めるか確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# cd ../..&lt;/span&gt; node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;すると、次のように問題なく実行されることが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;次は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-b/index.js&lt;/code&gt;ファイルの内容を次のように修正します。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b!!!!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;修正した後、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/module-a/node_modules/module-b/index.js&lt;/code&gt;ファイルを開いてみると修正した内容が反映されていることが確認できます。もちろん、次のコマンドを実行すると修正した内容が表示されることが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js module-a module-b!!!! &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これでモノレポを使うための基本知識である&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;について説明しました。モノレポで色んなモジュールの依存関係を連結する時、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を活用するので今回のブログポストを通して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Symlink&lt;/code&gt;を理解しておくとモノレポを使うのに役に立つと思います。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[Monorepo] NodeJSのモジュールの読み込み</title><link href="https://deku.posstree.com/environment/monorepo/module-resolutions/" rel="alternate" type="text/html" title="[Monorepo] NodeJSのモジュールの読み込み"/><published>2024-01-16T00:00:00+09:00</published><updated>2024-03-10T11:36:58+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo-resolution-ja</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/module-resolutions/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA&quot;&gt;ブログシリーズ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB&quot;&gt;モジュール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF&quot;&gt;モジュールの読み込み&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#file-path&quot;&gt;File path&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#package-name&quot;&gt;Package name&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D&quot;&gt;モジュールの読み込み優先順位&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E4%BE%8B%E9%A1%8C&quot;&gt;例題&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;今回のブログポストではモノレポを理解するための基本知識として、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;がモジュールを読み込む方法について説明します。&lt;/p&gt; &lt;h2 id=&quot;ブログシリーズ&quot;&gt;ブログシリーズ&lt;/h2&gt; &lt;p&gt;このブログはシリーズで制作されています。次のリンクを通じて他のブログポストも確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[プロジェクト管理] リポジトリ戦略&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[Monorepo] NodeJS のモジュールの読み込み&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/yarn_workspaces/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Yarn Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;モジュール&quot;&gt;モジュール&lt;/h2&gt; &lt;p&gt;JavaScript でモジュールはコードを構成し、再利用可能な単位に分離するために使用される機能です。モジュールを使用するとコードをより簡単にメンテナンスすることができるし、拡張することができます。ECMAScript 2015(ES6)から JavaScript に元々なかったモジュールシステムが導入されました。&lt;/p&gt; &lt;p&gt;モジュールはファイルレベルでコードをカプセル化し、必要な機能を他のファイルから取り込んで使用することができます。モジュールを使用するとグローバルスコープのコンフリクトを防ぐことができ、コードの依存関係を明確に管理することができます。&lt;/p&gt; &lt;p&gt;JavaScript でモジュールを使用するためには、次のキーワードを使用します。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;: 他のモジュールからエクスポートされた機能を現在のモジュールに取り込みます。&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export&lt;/code&gt;: 現在のモジュールから外部にエクスポートする関数、変数、クラスなどを指定します。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;JavaScript で次のようにモジュールを作成することができます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// math.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このように作成したモジュールは次のように使用することができます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.js&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;モジュールの読み込み&quot;&gt;モジュールの読み込み&lt;/h2&gt; &lt;p&gt;JavaScript でモジュールを読み込む方法は大きく分けて次の 2 つがあります。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;を使用する方法&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;を使用する方法&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;file-path&quot;&gt;File path&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File path&lt;/code&gt;を使用してモジュールを読み込む場合、相対パス(Relative path)と絶対パス(Absolute path)の両方を使用することができます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Relative path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../some/file/path/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Absolute path&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/src/math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;package-name&quot;&gt;Package name&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;フォルダーにあるモジュールは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package name&lt;/code&gt;を使用して読み込むことができます。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// react module exists in node_modules&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;モジュールの読み込み優先順位&quot;&gt;モジュールの読み込み優先順位&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;はモジュールを読み込む際に、まずは同じフォルダーにモジュールが存在するか、同じフォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;にモジュールが存在するかを確認します。もし同じフォルダーにモジュールが存在しない場合、親フォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;フォルダーを確認し、親フォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;にも存在しない場合、親フォルダーの親フォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;からモジュールを探します。&lt;/p&gt; &lt;h2 id=&quot;例題&quot;&gt;例題&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;がモジュールを読み込む方法を確認するために、次のようなフォルダー構造を作成してみます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; └── src/ ├── module-a/ │ ├── index.js │ └── package.json └── module-b/ ├── index.js └── package.json &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-a/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src/module-b/package.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;module-b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-b/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;最後に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;は次のようです。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/module-a/index.js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module-b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;このようにファイルを構成した後、次のコマンドを実行してモジュールを読み込むことができるか確認します。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node src/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら次のようなエラーが発生することが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a node:internal/modules/cjs/loader:1073 throw err&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ^ Error: Cannot find module &lt;span class=&quot;s1&quot;&gt;&apos;module-b&apos;&lt;/span&gt; Require stack: - /Users/deku/temp/temp/src/module-a/index.js at Module._resolveFilename &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1070:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:923:27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1137:19&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at require &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/helpers:121:18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Object.&amp;lt;anonymous&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/deku/temp/temp/src/module-a/index.js:3:1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._compile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1255:14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._extensions..js &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1309:10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module.load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1113:32&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Module._load &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:960:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Function.executeUserEntryPoint &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;as runMain] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node:internal/modules/run_main:83:12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; code: &lt;span class=&quot;s1&quot;&gt;&apos;MODULE_NOT_FOUND&apos;&lt;/span&gt;, requireStack: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/Users/deku/temp/temp/src/module-a/index.js&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;次は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;フォルダ名を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;で変更して次のコマンドを実行してみます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node node_modules/module-a/index.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;そしたら次のように問題なく実行されることが確認できます。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-a module-b &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;フォルダー名が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt;の場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require(&apos;module-b&apos;);&lt;/code&gt;を通じて&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;を読み込むと、ファイルパスではないため、同じフォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;を探すことになります。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;が現在のフォルダーに存在しないため、親フォルダーの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;を確認します。親フォルダーにも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;が存在しないため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MODULE_NOT_FOUND&lt;/code&gt;エラーが発生することが確認できます。&lt;/p&gt; &lt;p&gt;フォルダー名を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;に変更した後、同じコードを実行すると、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-a&lt;/code&gt;フォルダーに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;が存在しないため、親フォルダーから&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;を探すことになります。親フォルダーにはフォルダー名を変更した&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;が存在し、そのフォルダーに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module-b&lt;/code&gt;が存在するため、問題なく実行されることが確認できます。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;これで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;がモジュールを読み込む方法について説明しました。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;がモジュールを読み込む方法はモノレポでプロジェクトを構成するのに役立つ知識なので、今回のブログポストで紹介しました。皆さんもこの機会に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS&lt;/code&gt;がモジュールを読み込む方法についてもう一度理解してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[JavaScript] モノレポ(Monorepo)のためのツール</title><link href="https://deku.posstree.com/environment/monorepo/tools/" rel="alternate" type="text/html" title="[JavaScript] モノレポ(Monorepo)のためのツール"/><published>2024-01-11T00:00:00+09:00</published><updated>2024-03-10T11:36:58+09:00</updated><id>https://deku.posstree.com/environment/monorepo/monorepo_tools-ja</id><content type="html" xml:base="https://deku.posstree.com/environment/monorepo/tools/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA&quot;&gt;ブログシリーズ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E3%82%92%E5%A7%8B%E3%82%81%E3%82%8B%E6%96%B9%E6%B3%95&quot;&gt;モノレポを始める方法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%83%BC&quot;&gt;パッケージマネージャー&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E7%94%A8%E3%83%84%E3%83%BC%E3%83%AB&quot;&gt;モノレポ用ツール&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#lerna&quot;&gt;Lerna&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#nx&quot;&gt;Nx&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#turborepo&quot;&gt;Turborepo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;今回のブログポストでは、JavaScript で開発するプロジェクトでモノレポ(Monorepo)を使用するために必要なツールを紹介します。&lt;/p&gt; &lt;h2 id=&quot;ブログシリーズ&quot;&gt;ブログシリーズ&lt;/h2&gt; &lt;p&gt;このブログはシリーズで制作されました。次のリンクを通じて他のブログポストも確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/repository_strategy/&quot; target=&quot;\_blank&quot;&gt;[プロジェクト管理] リポジトリ戦略&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS のモジュールの読み込み&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/yarn_workspaces/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Yarn Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;モノレポを始める方法&quot;&gt;モノレポを始める方法&lt;/h2&gt; &lt;p&gt;モノレポを始める方法は大きく 2 つあります。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;パッケージマネージャーを利用する方法&lt;/li&gt; &lt;li&gt;モノレポ用ツールを利用する方法&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;今回のブログポストでは、JavaScript プロジェクトでモノレポをサポートするパッケージマネージャーとモノレポツールについて紹介します。&lt;/p&gt; &lt;h2 id=&quot;パッケージマネージャー&quot;&gt;パッケージマネージャー&lt;/h2&gt; &lt;p&gt;JavaScript プロジェクトでモノレポを構成するためには、モノレポをサポートするパッケージマネージャーを使用することができます。モノレポをサポートするパッケージマネージャーは、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;があります。&lt;/p&gt; &lt;p&gt;モノレポをサポートするパッケージマネージャーである&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;は次のような特性を持っています。&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;機能&lt;/th&gt; &lt;th&gt;pnpm&lt;/th&gt; &lt;th&gt;yarn&lt;/th&gt; &lt;th&gt;npm&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;workspace 提供&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;孤立した node_modules&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ホイスティングされた node_modules&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ピア自動インストール&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plug’n’Play&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(default)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Zero-Installs&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;依存パッチ&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;NodeJS バージョン管理&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lockfile&lt;/td&gt; &lt;td&gt;✅(pnpm-lock.yaml)&lt;/td&gt; &lt;td&gt;✅(yarn.lock)&lt;/td&gt; &lt;td&gt;✅(package-lock.json)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;上書きサポート&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;✅(resolution 使用)&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Content-addressable リポジトリ&lt;/td&gt; &lt;td&gt;✅&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;動的パッケージ実行&lt;/td&gt; &lt;td&gt;✅(pnpm dlx)&lt;/td&gt; &lt;td&gt;✅(yarn dlx)&lt;/td&gt; &lt;td&gt;✅(npx)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Listing licenses&lt;/td&gt; &lt;td&gt;✅(pnpm licenses list)&lt;/td&gt; &lt;td&gt;✅(Via a plugin)&lt;/td&gt; &lt;td&gt;❌&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;モノレポ用ツール&quot;&gt;モノレポ用ツール&lt;/h2&gt; &lt;p&gt;パッケージマネージャーが提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Workspace&lt;/code&gt;機能だけでも十分にモノレポを構成することができますが、モノレポ用ツールを使用するとより簡単にモノレポを構成することができます。また、モノレポ用ツールが提供する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache&lt;/code&gt;機能を使用すると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Build&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CI&lt;/code&gt;などをより高速に実行することができます。&lt;/p&gt; &lt;p&gt;JavaScript プロジェクトのためのモノレポ用ツールには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;があります。&lt;/p&gt; &lt;h3 id=&quot;lerna&quot;&gt;Lerna&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;はオープンソースで開発、管理されています。オープンソースコミュニティだけでは管理が難しく、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;に引き継がれました。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Lerna: &lt;a href=&quot;https://lerna.js.org/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://lerna.js.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;現在も&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;を使用することはできますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;に引き継がれたため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;が自分たちのツールほど&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;をサポートするかは確実ではないため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lerna&lt;/code&gt;を使用するのであれば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;を使用するか、もう少し動向を見守ることをお勧めします。&lt;/p&gt; &lt;h3 id=&quot;nx&quot;&gt;Nx&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Narwhal Technologies Inc.&lt;/code&gt;という会社で開発、提供しています。この会社は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;フレームワークに関連するツールやサービスを提供する会社です。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;フレームワークに関連するツールを開発する会社が作った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;であるため、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;アプリケーションをサポートするモノレポ管理ツールとして始まりました。現在は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;など他のフレームワークもサポートしています。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Nx: &lt;a href=&quot;https://nx.dev/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;もし&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;フレームワークでプロジェクトを開発する予定であれば、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;は優れた選択肢になると思います。もちろん、他のフレームワークでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;は良い選択肢になるかもしれませんが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;フレームワークを中心に開発された&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;中心のツールを開発する会社が作った&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Angular&lt;/code&gt;フレームワークでより良いパフォーマンスを発揮すると思います。&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nx&lt;/code&gt;がサポートするフレームワークは次のリンクから確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Recipes: &lt;a href=&quot;https://nx.dev/recipes&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://nx.dev/recipes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;turborepo&quot;&gt;Turborepo&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jared Palmer&lt;/code&gt;が開発しましたが、2021 年に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;を作って運営している&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vercel&lt;/code&gt;が買収し、開発、管理しています。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turbo: &lt;a href=&quot;https://turbo.build/&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;もし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt;でプロジェクトを開発する予定であれば、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;は優れた選択肢になると思います。もちろん、他のフレームワークでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;は良い選択肢になるかもしれませんが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;を作って運営している&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vercel&lt;/code&gt;が買収した&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NextJS&lt;/code&gt;でより良いパフォーマンスを発揮すると思います。&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Turborepo&lt;/code&gt;がサポートするフレームワークは次のリンクから確認できます。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Turborepo Examples: &lt;a href=&quot;https://turbo.build/repo/docs/getting-started/from-example&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;\_blank&quot;&gt;https://turbo.build/repo/docs/getting-started/from-example&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今回のブログポストでは、JavaScript で開発するプロジェクトでモノレポ(Monorepo)を使用するために必要なツールを紹介しました。パッケージマネージャーが提供する機能だけで十分にモノレポを構成することができますが、モノレポ用ツールを使用するとより簡単にモノレポを構成することができます。&lt;/p&gt; &lt;p&gt;モノレポでプロジェクトを構成する予定であれば、パッケージマネージャーの機能だけでなく、モノレポ用ツールの導入も検討してみてください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/monorepo/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry xml:lang="ja"><title type="html">[プロジェクト管理] リポジトリ戦略</title><link href="https://deku.posstree.com/environment/repository_strategy/" rel="alternate" type="text/html" title="[プロジェクト管理] リポジトリ戦略"/><published>2024-01-04T00:00:00+09:00</published><updated>2024-03-10T11:36:58+09:00</updated><id>https://deku.posstree.com/environment/repository_strategy-ja</id><content type="html" xml:base="https://deku.posstree.com/environment/repository_strategy/">&lt;div id=&quot;contents_list&quot;&gt; &lt;h2 id=&quot;section&quot;&gt;目次&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot;&gt;概要&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA&quot;&gt;ブログシリーズ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E6%88%A6%E7%95%A5&quot;&gt;リポジトリ戦略&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B9monolith&quot;&gt;モノリス Monolith&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B9%E3%81%AE%E5%88%A9%E7%82%B9&quot;&gt;モノリスの利点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B9%E3%81%AE%E6%AC%A0%E7%82%B9&quot;&gt;モノリスの欠点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AA%E3%82%B9%E5%B0%8E%E5%85%A5%E6%99%82%E3%81%AE%E8%80%83%E6%85%AE%E4%BA%8B%E9%A0%85&quot;&gt;モノリス導入時の考慮事項&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%9E%E3%83%AB%E3%83%81%E3%83%AC%E3%83%9Dmulti-repo&quot;&gt;マルチレポ Multi Repo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%9E%E3%83%AB%E3%83%81%E3%83%AC%E3%83%9D%E3%81%AE%E5%88%A9%E7%82%B9&quot;&gt;マルチレポの利点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%9E%E3%83%AB%E3%83%81%E3%83%AC%E3%83%9D%E3%81%AE%E6%AC%A0%E7%82%B9&quot;&gt;マルチレポの欠点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%9E%E3%83%AB%E3%83%81%E3%83%AC%E3%83%9D%E5%B0%8E%E5%85%A5%E6%99%82%E3%81%AE%E8%80%83%E6%85%AE%E4%BA%8B%E9%A0%85&quot;&gt;マルチレポ導入時の考慮事項&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9Dmonorepo&quot;&gt;モノレポ Monorepo&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E3%81%AE%E5%88%A9%E7%82%B9&quot;&gt;モノレポの利点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E3%81%AE%E6%AC%A0%E7%82%B9&quot;&gt;モノレポの欠点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E5%B0%8E%E5%85%A5%E6%99%82%E3%81%AE%E8%80%83%E6%85%AE%E4%BA%8B%E9%A0%85&quot;&gt;モノレポ導入時の考慮事項&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#%E5%AE%8C%E4%BA%86&quot;&gt;完了&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt; &lt;p&gt;プロジェクトを開発する時、1 つのリポジトリで構成した方がいいのか、マルチレポで構成した方がいいのかリポジトリの戦略を決めます。今回のブログポストでは、プロジェクトを管理するためのリポジトリ戦略である&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;モノリス(Monolith)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;マルチレポ(Multi Repo)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;モノレポ(Monorepo)&lt;/code&gt;について説明します。&lt;/p&gt; &lt;h2 id=&quot;ブログシリーズ&quot;&gt;ブログシリーズ&lt;/h2&gt; &lt;p&gt;このブログはシリーズで制作されました。次のリンクを通じて他のブログポストも確認してください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[プロジェクト管理] リポジトリ戦略&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/tools/&quot; target=&quot;\_blank&quot;&gt;[JavaScript] モノレポ(Monorepo)のためのツール&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/module-resolutions/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] NodeJS のモジュールの読み込み&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/symlink/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Symlink&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://deku.posstree.com/environment/monorepo/yarn_workspaces/&quot; target=&quot;\_blank&quot;&gt;[Monorepo] Yarn Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;リポジトリ戦略&quot;&gt;リポジトリ戦略&lt;/h2&gt; &lt;p&gt;リポジトリ戦略は次のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;モノリス(Monolith)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;マルチレポ(Multi Repo)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;モノレポ(Monorepo)&lt;/code&gt;があります。&lt;/p&gt; &lt;picture&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.avif&quot; type=&quot;image/avif&quot; /&gt; &lt;source srcset=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.webp&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/images/category/environment/2024/repository_strategy/repository_strategy.jpg&quot; alt=&quot;Repository strategy&quot; /&gt; &lt;/picture&gt; &lt;ul&gt; &lt;li&gt;モノリス: モノリスは 1 つのサービスを 1 つのプロジェクトにして 1 つのリポジトリで管理します。&lt;/li&gt; &lt;li&gt;マルチレポ: マルチレポは 1 つのサービスを複数のプロジェクトに分けて複数のリポジトリで管理します。&lt;/li&gt; &lt;li&gt;モノレポ: モノレポは 1 つのサービスを複数のプロジェクトに分けて 1 つのリポジトリで管理します。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;モノリスmonolith&quot;&gt;モノリス(Monolith)&lt;/h2&gt; &lt;p&gt;モノリス(Monolith)はソフトウェアプロジェクトを単一のコードベースで構成された単一のアプリケーションに設計するプロジェクト管理技法です。モノリスアーキテクチャでは、アプリケーションのすべてのコンポーネントが 1 つのコードベースに統合されて開発、デプロイ、運用が行われます。&lt;/p&gt; &lt;h3 id=&quot;モノリスの利点&quot;&gt;モノリスの利点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;管理とメンテナンスが簡単: 単一のコードベースで構成されているため、全体的な管理とメンテナンスが比較的簡単です。&lt;/li&gt; &lt;li&gt;統合テストの容易性: 全体システムが単一のアプリケーションで構成されているため、統合テストが容易です。&lt;/li&gt; &lt;li&gt;初期開発速度の向上: 最初はすべてが 1 つの場所にあるため、開発が迅速に進むことができます。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;モノリスの欠点&quot;&gt;モノリスの欠点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;拡張性の制約: アプリケーションのサイズが大きくなると、拡張が難しくなる可能性があります。&lt;/li&gt; &lt;li&gt;技術スタックの依存: 単一の技術スタックに依存するため、さまざまな技術の導入が難しくなる可能性があります。&lt;/li&gt; &lt;li&gt;デプロイの難しさ: 全体アプリケーションを修正してデプロイする必要があるため、小さな変更のデプロイが難しい可能性があります。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;モノリス導入時の考慮事項&quot;&gt;モノリス導入時の考慮事項&lt;/h3&gt; &lt;p&gt;次のような場合、モノリス導入を検討することができると思います。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;小規模プロジェクト: 小規模プロジェクトであれば、初期開発速度を高めることができます。&lt;/li&gt; &lt;li&gt;簡単なメンテナンスが必要な場合: 簡単なアプリケーションでは、メンテナンスが容易になる場合があります。&lt;/li&gt; &lt;li&gt;技術スタックが明らかになっている場合: 特定の技術スタックについてしっかりと決めた場合は、モノリスが役に立つ可能性があります。&lt;/li&gt; &lt;li&gt;チーム規模が小さい場合: 小さなチームが協力して開発する場合、モノリスが効果的になる場合があります。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;しかし、プロジェクトの規模や要件が増えるにつれて、分散アーキテクチャやマイクロサービスアーキテクチャなど他のアーキテクチャも検討する必要があります。これは、アプリケーションの拡張性、柔軟性、独立性などを高めることができます。&lt;/p&gt; &lt;div class=&quot;in-feed-ads ads-container&quot;&gt; &lt;div class=&quot;ads-block ads-left&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;2718813593&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;div class=&quot;ads-block ads-center&quot;&gt; &lt;ins class=&quot;adsbygoogle&quot; style=&quot;display: block; text-align: center&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-7987914246691031&quot; data-ad-slot=&quot;6492035359&quot;&gt;&lt;/ins&gt; &lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push({}); &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2 id=&quot;マルチレポmulti-repo&quot;&gt;マルチレポ(Multi Repo)&lt;/h2&gt; &lt;p&gt;マルチレポ(Multi Repo)はソフトウェアプロジェクトを複数の独立したリポジトリで開発するプロジェクト管理技法です。各リポジトリは特定の機能、モジュール、またはサービスに対応し、開発、デプロイ、運用が分離されています。&lt;/p&gt; &lt;h3 id=&quot;マルチレポの利点&quot;&gt;マルチレポの利点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;独立した開発とデプロイ: 各リポジトリは独立して開発、テスト、デプロイされるため、迅速な開発サイクルが可能です。&lt;/li&gt; &lt;li&gt;スケーラビリティ: 特定のモジュールやサービスの負荷が増加すると、そのリポジトリだけを拡張してシステム全体のパフォーマンスを向上させることができます。&lt;/li&gt; &lt;li&gt;技術スタックの多様性: 各リポジトリは独自の技術スタックを選択できるため、特定の技術に依存せず、複数の技術を組み合わせて使用できます。&lt;/li&gt; &lt;li&gt;分離されたコードベース: 各リポジトリは特定の機能や業務領域に集中しているため、コードの可読性とメンテナンス性が向上する可能性があります。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;マルチレポの欠点&quot;&gt;マルチレポの欠点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;依存関係の管理の難しさ: 多くのリポジトリ間の依存関係を管理することは複雑になる可能性があります。&lt;/li&gt; &lt;li&gt;システム全体の統合の難しさ: 各リポジトリが独立して開発されているため、統合する際に競合が発生する可能性があり、解決に時間がかかる場合があります。&lt;/li&gt; &lt;li&gt;総合的なビジョンの欠如: システム全体を理解して管理することが難しく、特に総合的なビジョンが必要な場合には難しい場合があります。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;マルチレポ導入時の考慮事項&quot;&gt;マルチレポ導入時の考慮事項&lt;/h3&gt; &lt;p&gt;次のような場合、マルチレポ導入を検討することができると思います。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;大規模プロジェクト: プロジェクトが大きく、多くの機能やモジュールを含む場合、それぞれを独立して管理する必要がある場合に使用できます。&lt;/li&gt; &lt;li&gt;チーム間の協力: 複数のチームが同時に作業し、互いに独立して開発したい場合、マルチレポが有効になる場合があります。&lt;/li&gt; &lt;li&gt;サービス指向アーキテクチャ(SOA)またはマイクロサービスアーキテクチャ: マルチレポは各サービスを独立して管理するのに役立ち、SOA またはマイクロサービスアーキテクチャとよくマッチします。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;マルチレポは分散環境でチームの協力と迅速な開発サイクルをサポートするのに適しており、特にサービス指向アーキテクチャでは各サービスを個別に管理することが重要です。&lt;/p&gt; &lt;p&gt;しかし、チームの規模が小さく、プロジェクトの規模が小さい場合、多くの技術スタックとリポジトリの管理の難しさが発生する可能性があります。&lt;/p&gt; &lt;h2 id=&quot;モノレポmonorepo&quot;&gt;モノレポ(Monorepo)&lt;/h2&gt; &lt;p&gt;モノレポ(Mono-repo)はソフトウェアプロジェクトを 1 つの大規模なコードベース(リポジトリ)として構成して開発するプロジェクト管理技法です。この方法では、すべてのソースコード、ライブラリ、モジュールが 1 つの中央位置に格納され、管理されます。&lt;/p&gt; &lt;h3 id=&quot;モノレポの利点&quot;&gt;モノレポの利点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;依存関係の管理が容易: 1 つのコードベースですべての依存関係を管理するため、依存関係の競合やバージョン管理が容易です。&lt;/li&gt; &lt;li&gt;全体システムの理解が容易: プロジェクトの全体的な構造と動作を理解しやすくなります。全体システムを一目で把握できます。&lt;/li&gt; &lt;li&gt;コードの再利用性: すべてのモジュールとライブラリが 1 つのコードベースにあるため、コードの再利用が容易です。&lt;/li&gt; &lt;li&gt;統合テストの容易性: 全体システムが 1 つのコードベースで構成されているため、全体システムの統合テストが容易です。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;モノレポの欠点&quot;&gt;モノレポの欠点&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;大規模プロジェクトの管理の難しさ: プロジェクトの規模が大きくなると、ビルド時間が長くなり、すべてのコードに対するチーム間の協力が難しくなる可能性があります。&lt;/li&gt; &lt;li&gt;技術スタックの制約: 1 つのコードベースで作業するため、特定の技術スタックに制約を受ける可能性があります。&lt;/li&gt; &lt;li&gt;CI/CD 性能の低下: 大規模モノレポでは、継続的な統合とデプロイのパフォーマンスが低下する可能性があります。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;モノレポ導入時の考慮事項&quot;&gt;モノレポ導入時の考慮事項&lt;/h3&gt; &lt;p&gt;次のような場合、モノレポ導入を検討することができると思います。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;中小規模プロジェクト: プロジェクトが小規模であれば、1 つのリポジトリで管理することが便利になります。&lt;/li&gt; &lt;li&gt;チーム間の協力: すべてのチームが 1 つのリポジトリで作業する場合、コード共有と協力が容易になります。&lt;/li&gt; &lt;li&gt;依存関係の管理が重要な場合: プロジェクト内の依存関係が複雑に絡み合っている場合、モノレポで管理することが便利になります。&lt;/li&gt; &lt;li&gt;単一の技術スタックの使用が必要な場合: 特定の技術スタックを一貫して使用する必要がある場合、モノレポが適している場合があります。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;モノレポは、プロジェクトの規模が小さく、チーム間の協力が必要な場合に有効になります。また、依存関係の管理が重要な場合や、特定の技術スタックを使用する必要がある場合にも有効になります。しかし、プロジェクトの規模が大きくなると、ビルド時間が長くなり、チーム間の協力が難しくなる可能性があります。&lt;/p&gt; &lt;h2 id=&quot;完了&quot;&gt;完了&lt;/h2&gt; &lt;p&gt;今回のブログポストではプロジェクト管理技法であるリポジトリ戦略について説明しました。特定の戦略が良いか悪いかはありません。プロジェクトの規模と要件に応じて、適切な戦略を選択してください。&lt;/p&gt;</content><author><name>dev.yakuza@gmail.com</name></author><category term="environment"/><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg"/><media:content medium="image" url="https://deku.posstree.com/assets/images/category/environment/2024/repository_strategy/background.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>